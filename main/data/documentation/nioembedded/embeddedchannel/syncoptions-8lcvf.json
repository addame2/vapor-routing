{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-8lcvf","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/syncoptions-8lcvf"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"NIOCore","roleHeading":"Instance Property","externalID":"s:7NIOCore7ChannelPAAE11syncOptionsAA014NIOSynchronousbD0_pSgvp::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"?"}],"symbolKind":"property","modules":[{"name":"NIOEmbedded"}],"role":"symbol","title":"syncOptions"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations"]]},"abstract":[{"type":"text","text":"Default implementation: "},{"type":"codeVoice","code":"NIOSynchronousChannelOptions"},{"type":"text","text":" are not supported."}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/syncOptions-8lcvf":{"title":"syncOptions","type":"topic","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/syncoptions-8lcvf","abstract":[{"type":"text","text":"Default implementation: "},{"code":"NIOSynchronousChannelOptions","type":"codeVoice"},{"type":"text","text":" are not supported."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","kind":"typeIdentifier","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-8lcvf"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSynchronousChannelOptions":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"url":"\/documentation\/niocore\/niosynchronouschanneloptions","navigatorTitle":[{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"role":"symbol","title":"NIOSynchronousChannelOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"Channel Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"}}}