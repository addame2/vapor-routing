{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/syncoptions-7hmp4"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns a view of the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" exposing synchronous versions of ","type":"text"},{"code":"setOption","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"getOption","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The default implementation returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations must opt in to"},{"type":"text","text":" "},{"type":"text","text":"support this behavior."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"metadata":{"externalID":"s:11NIOEmbedded15EmbeddedChannelC11syncOptions7NIOCore014NIOSynchronouscE0_pSgvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"?"}],"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"NIOEmbedded"}],"title":"syncOptions","role":"symbol","extendedModule":"NIOEmbedded"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-7hmp4"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/syncOptions-7hmp4":{"url":"\/documentation\/nioembedded\/embeddedchannel\/syncoptions-7hmp4","kind":"symbol","type":"topic","abstract":[{"text":"Returns a view of the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" exposing synchronous versions of ","type":"text"},{"code":"setOption","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"getOption"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The default implementation returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" implementations must opt in to","type":"text"},{"text":" ","type":"text"},{"text":"support this behavior.","type":"text"}],"title":"syncOptions","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-7hmp4","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"Channel Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSynchronousChannelOptions":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"url":"\/documentation\/niocore\/niosynchronouschanneloptions","navigatorTitle":[{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"role":"symbol","title":"NIOSynchronousChannelOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"}}}