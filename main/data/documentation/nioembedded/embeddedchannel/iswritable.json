{"abstract":[{"type":"text","text":"Inherited from "},{"code":"Channel.isWritable","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/iswritable"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"see: "},{"code":"Channel.isWritable","type":"codeVoice"}]}]}],"type":"unorderedList"}]}],"sections":[],"metadata":{"modules":[{"name":"NIOEmbedded"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isWritable","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isWritable","role":"symbol","externalID":"s:11NIOEmbedded15EmbeddedChannelC10isWritableSbvp","roleHeading":"Instance Property","symbolKind":"property"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isWritable":{"title":"isWritable","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/iswritable","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]}}}