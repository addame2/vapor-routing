{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"]]},"metadata":{"title":"register(promise:)","externalID":"s:7NIOCore7ChannelPAAE8register7promiseyAA16EventLoopPromiseVyytGSg_tF::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"extendedModule":"NIOCore","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOEmbedded"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"the "},{"code":"EventLoopPromise","type":"codeVoice"},{"type":"text","text":" that will be notified once the operation completes,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if not interested in the outcome of the operation."}],"type":"paragraph"}],"name":"promise"}],"kind":"parameters"}],"sections":[],"abstract":[{"type":"text","text":"Register on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so have all its IO handled."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/register(promise:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/register(promise:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/register(promise:)":{"type":"topic","abstract":[{"text":"Register on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so have all its IO handled.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/register(promise:)","kind":"symbol","title":"register(promise:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/register(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","type":"topic","title":"ChannelOutboundInvoker Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"abstract":[{"text":"A promise to provide a result later.","type":"text"}],"title":"EventLoopPromise","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopPromise","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/eventlooppromise"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]}}}