{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/leftoverstate"]}],"metadata":{"role":"symbol","roleHeading":"Enumeration","symbolKind":"enum","modules":[{"name":"NIOEmbedded"}],"title":"EmbeddedChannel.LeftOverState","externalID":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"abstract":[{"code":"LeftOverState","type":"codeVoice"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" and were not consumed when ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":" was called on the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is most useful in testing and usually in unit tests, you want to consume all inbound and","type":"text"},{"text":" ","type":"text"},{"text":"outbound data to verify they are what you expect. Therefore, when you ","type":"text"},{"type":"codeVoice","code":"finish"},{"text":" an ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" it will","type":"text"},{"text":" ","type":"text"},{"text":"return if itâ€™s either ","type":"text"},{"type":"codeVoice","code":".clean"},{"text":" (no left overs) or that it has ","type":"text"},{"type":"codeVoice","code":".leftOvers"},{"text":".","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/clean","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/leftOvers(inbound:outbound:pendingOutbound:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/isClean"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/clean":{"url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/clean","abstract":[{"text":"The ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is clean, ie. no inbound, outbound, or pending outbound data left on ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"EmbeddedChannel.LeftOverState.clean","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/clean","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clean","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/hasLeftOvers":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasLeftOvers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers","abstract":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" if there was unconsumed inbound, outbound, or pending outbound data left"},{"type":"text","text":" "},{"type":"text","text":"on the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when it was "},{"type":"codeVoice","code":"finish"},{"type":"text","text":"ed."}],"kind":"symbol","type":"topic","role":"symbol","title":"hasLeftOvers","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/hasleftovers"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"abstract":[{"code":"LeftOverState","type":"codeVoice"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" and were not consumed when ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":" was called on the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","title":"EmbeddedChannel.LeftOverState","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/leftOvers(inbound:outbound:pendingOutbound:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"leftOvers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inbound"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"outbound"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"pendingOutbound"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":"])"}],"title":"EmbeddedChannel.LeftOverState.leftOvers(inbound:outbound:pendingOutbound:)","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/leftovers(inbound:outbound:pendingoutbound:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/leftOvers(inbound:outbound:pendingOutbound:)","kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" has inbound, outbound, or pending outbound data left on "},{"type":"codeVoice","code":"finish"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/isClean":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/isClean","abstract":[{"type":"codeVoice","code":"true"},{"text":" if the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" was ","type":"text"},{"type":"codeVoice","code":"clean"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"finish"},{"text":", ie. there is no unconsumed inbound, outbound, or","type":"text"},{"text":" ","type":"text"},{"text":"pending outbound data left on the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/isclean","kind":"symbol","type":"topic","title":"isClean","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isClean","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}