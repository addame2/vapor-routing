{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"Please remember to call "},{"type":"codeVoice","code":"finish()"},{"type":"text","text":" when you are no longer using this"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"To feed events through an ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" use","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel.writeInbound"},{"text":" which accepts data of any type. It will then","type":"text"},{"text":" ","type":"text"},{"text":"forward that data through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" and the subsequent","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" will receive it through the usual ","type":"text"},{"type":"codeVoice","code":"channelRead"},{"text":" ","type":"text"},{"text":"event. The user is responsible for making sure the first","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" expects data of that type.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" automatically collects arriving outbound data and makes it","type":"text"},{"text":" ","type":"text"},{"text":"available one-by-one through ","type":"text"},{"code":"readOutbound","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is currently only compatible with","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"text":"s and cannot be used with ","type":"text"},{"type":"codeVoice","code":"SelectableEventLoop"},{"text":"s from","type":"text"},{"text":" ","type":"text"},{"text":"for example ","type":"text"},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike other "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s, "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"is not thread-safe","type":"text"}]},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"is because it is intended to be run in the thread that instantiated it. Users are"},{"type":"text","text":" "},{"type":"text","text":"responsible for ensuring they never call into an "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" in an"},{"type":"text","text":" "},{"type":"text","text":"unsynchronized fashion. "},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"type":"text","text":"s notes also apply as"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" uses an "},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"type":"text","text":" as its "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."}]}],"style":"warning","type":"aside"}],"kind":"content"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Class","symbolKind":"class","role":"symbol","title":"EmbeddedChannel","externalID":"s:11NIOEmbedded15EmbeddedChannelC","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"modules":[{"name":"NIOEmbedded"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"]]},"kind":"symbol","sections":[],"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeInbound(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO","text":"BufferState","kind":"typeIdentifier"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/writeinbound(_:)","kind":"symbol","role":"symbol","title":"writeInbound(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/embeddedEventLoop":{"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embeddedEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/embeddedeventloop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","kind":"symbol","title":"embeddedEventLoop","abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" that this "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" uses. This will return the same instance as"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel.eventLoop"},{"type":"text","text":" but as the concrete "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" rather than as "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" existential."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/setOption(_:value:)-5j5cw":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":">","kind":"text"}],"abstract":[],"role":"symbol","title":"setOption(_:value:)","url":"\/documentation\/nioembedded\/embeddedchannel\/setoption(_:value:)-5j5cw","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","title":"ChannelOutboundInvoker","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"code":"ChannelCore","type":"codeVoice"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readInbound(as:)":{"title":"readInbound(as:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/readinbound(as:)","type":"topic","abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":"’s inbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel.WrongTypeError"},{"text":" will be thrown, if there","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" will be returned."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError","abstract":[{"type":"codeVoice","code":"WrongTypeError"},{"type":"text","text":" is throws if you use "},{"code":"readInbound","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"readOutbound","type":"codeVoice"},{"text":" and request a certain type but the first","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"item in the respective buffer is of a different type."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"WrongTypeError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WrongTypeError","kind":"identifier"}],"title":"EmbeddedChannel.WrongTypeError","url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"title":"EmbeddedChannel.SynchronousOptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOptions","kind":"identifier"}],"navigatorTitle":[{"text":"SynchronousOptions","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isWritable":{"title":"isWritable","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/iswritable","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/connect(to:promise:)":{"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)","abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"connect","type":"codeVoice"},{"text":" event through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"remoteAddress","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"connect(to:promise:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/parent":{"title":"parent","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","role":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" because "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"s don’t have parents."}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":"?","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/parent","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish(acceptAlreadyClosed:)":{"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/finish(acceptalreadyclosed:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"("},{"kind":"externalParam","text":"acceptAlreadyClosed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState"}],"title":"finish(acceptAlreadyClosed:)","abstract":[{"type":"text","text":"Synchronously closes the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/closeFuture":{"title":"closeFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"closeFuture","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/closefuture","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","type":"topic","abstract":[{"type":"codeVoice","code":"BufferState"},{"text":" represents the state of either the inbound, or the outbound ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" buffer. These","type":"text"},{"text":" ","type":"text"},{"text":"buffers contain data that travelled the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" all the way.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BufferState","kind":"identifier"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate","kind":"symbol","role":"symbol","title":"EmbeddedChannel.BufferState","navigatorTitle":[{"text":"BufferState","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isActive":{"kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is ‘active’."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/isactive","role":"symbol","title":"isActive","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isActive","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","title":"Channel","abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/eventLoop":{"title":"eventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/eventloop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/pipeline":{"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipeline"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"}],"title":"pipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","type":"topic","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/pipeline"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/throwIfErrorCaught()":{"abstract":[{"text":"This method will throw the error that is stored in the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" if any."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","role":"symbol","title":"throwIfErrorCaught()","url":"\/documentation\/nioembedded\/embeddedchannel\/throwiferrorcaught()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throwIfErrorCaught"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","kind":"symbol","title":"init(handlers:loop:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)","abstract":[{"text":"Create a new instance.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","type":"topic","title":"ChannelOutboundInvoker Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/localAddress":{"title":"localAddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/localaddress","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","title":"bind(to:promise:)","abstract":[{"text":"Fires the (outbound) ","type":"text"},{"type":"codeVoice","code":"bind"},{"text":" event through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":". If the event hits the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" which","type":"text"},{"text":" ","type":"text"},{"text":"happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"localAddress","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish()":{"title":"finish()","abstract":[{"text":"Synchronously closes the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/finish()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/getOption(_:)-6dgj0":{"title":"getOption(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","abstract":[],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/getoption(_:)-6dgj0","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/remoteAddress":{"abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/remoteaddress","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remoteAddress"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress","kind":"symbol","role":"symbol","title":"remoteAddress","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/allocator":{"title":"allocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/allocator","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"abstract":[{"code":"LeftOverState","type":"codeVoice"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" and were not consumed when ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":" was called on the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","title":"EmbeddedChannel.LeftOverState","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeOutbound(_:)":{"title":"writeOutbound(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeOutbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EmbeddedChannel","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"text":".","kind":"text"},{"text":"BufferState","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/writeoutbound(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handler:loop:)":{"title":"init(handler:loop:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Create a new instance."}],"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":"?, ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"},{"text":")","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handler:loop:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"Channel Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" will be returned."}],"role":"symbol","title":"readOutbound(as:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol"}}}