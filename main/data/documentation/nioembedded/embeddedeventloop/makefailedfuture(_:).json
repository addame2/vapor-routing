{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeFailedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"a failed "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"the ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" that is used by the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"error"}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/EventLoop-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/makeFailedFuture(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is already marked as failed. Notifications will be done using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"metadata":{"extendedModule":"NIOCore","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"externalID":"s:7NIOCore9EventLoopPAAE16makeFailedFutureyAA0bcF0Cyqd__Gs5Error_plF::SYNTHESIZED::s:11NIOEmbedded17EmbeddedEventLoopC","role":"symbol","symbolKind":"method","modules":[{"name":"NIOEmbedded"}],"title":"makeFailedFuture(_:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedeventloop\/makefailedfuture(_:)"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop/EventLoop-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","abstract":[],"title":"EventLoop Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/EventLoop-Implementations","url":"\/documentation\/nioembedded\/embeddedeventloop\/eventloop-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is embedded in the current running context with no external"},{"type":"text","text":" "},{"type":"text","text":"control."}],"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"title":"EmbeddedEventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","url":"\/documentation\/nioembedded\/embeddedeventloop"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop/makeFailedFuture(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"makeFailedFuture(_:)","abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is already marked as failed. Notifications will be done using this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" as execution ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop\/makeFailedFuture(_:)","url":"\/documentation\/nioembedded\/embeddedeventloop\/makefailedfuture(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"role":"collection","kind":"symbol","abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]}}}