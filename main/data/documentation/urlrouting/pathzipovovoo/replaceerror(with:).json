{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A parser that never fails.","type":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An output to return should the upstream parser fail.","type":"text"}],"type":"paragraph"}],"name":"output"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, we could create a parser that parses a plus or minus sign and maps the result to","type":"text"},{"text":" ","type":"text"},{"text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO\/replaceError(with:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipovovoo\/replaceerror(with:)"]}],"metadata":{"modules":[{"name":"URLRouting"}],"title":"replaceError(with:)","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting13PathZipOVOVOOV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Method"},"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/ReplaceError":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/ReplaceError","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/replaceerror","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"title":"Parsers.ReplaceError"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVOO/replaceError(with:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO\/replaceError(with:)","role":"symbol","type":"topic","url":"\/documentation\/urlrouting\/pathzipovovoo\/replaceerror(with:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"replaceError(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","abstract":[],"role":"collection","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVOO/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO\/Parser-Implementations","kind":"article","url":"\/documentation\/urlrouting\/pathzipovovoo\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOVOVOO":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"PathZipOVOVOO","kind":"identifier"}],"abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOVOVOO","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathzipovovoo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOVOVOO","title":"PathZipOVOVOO"}}}