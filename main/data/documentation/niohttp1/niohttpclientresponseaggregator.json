{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientresponseaggregator"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"This is achieved by buffering the contents of all received ","type":"text"},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"text":" ","type":"text"},{"text":"messages until ","type":"text"},{"type":"codeVoice","code":"HTTPClientResponsePart.end"},{"text":" is received, then assembling the","type":"text"},{"text":" ","type":"text"},{"text":"full message and firing a channel read upstream with it. Useful when you do not","type":"text"},{"text":" ","type":"text"},{"text":"want to deal with chunked messages and just want to receive everything at once, and","type":"text"},{"text":" ","type":"text"},{"text":"are happy with the additional memory used and delay handling of the message until","type":"text"},{"text":" ","type":"text"},{"text":"everything has been received.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"NIOHTTPClientResponseAggregator"},{"type":"text","text":" encounters a message larger than"},{"type":"text","text":" "},{"type":"codeVoice","code":"maxContentLength"},{"type":"text","text":", it discards the aggregated contents until the next"},{"type":"text","text":" "},{"type":"codeVoice","code":"HTTPClientResponsePart.end"},{"type":"text","text":" and signals that via"},{"type":"text","text":" "},{"type":"codeVoice","code":"fireUserInboundEventTriggered"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that handles HTTP chunked ","type":"text"},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"text":" ","type":"text"},{"text":"messages by aggregating individual message chunks into a single","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientResponseFull"},{"text":".","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/init(maxContentLength:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/handlerAdded(context:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/RemovableChannelHandler-Implementations"]}],"metadata":{"symbolKind":"class","title":"NIOHTTPClientResponseAggregator","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientResponseAggregator","kind":"identifier"}],"modules":[{"name":"NIOHTTP1"}],"externalID":"s:8NIOHTTP131NIOHTTPClientResponseAggregatorC","roleHeading":"Class","navigatorTitle":[{"text":"NIOHTTPClientResponseAggregator","kind":"identifier"}]},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/channelRead(context:data:)":{"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/channelRead(context:data:)","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelread(context:data:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"title":"channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelhandler-implementations","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/handlerAdded(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/handlerAdded(context:)","title":"handlerAdded(context:)","role":"symbol","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is added to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/handleradded(context:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator":{"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that handles HTTP chunked "},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"type":"text","text":" "},{"type":"text","text":"messages by aggregating individual message chunks into a single"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTPClientResponseFull"},{"type":"text","text":"."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientResponseAggregator","kind":"identifier"}],"navigatorTitle":[{"text":"NIOHTTPClientResponseAggregator","kind":"identifier"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator","kind":"symbol","title":"NIOHTTPClientResponseAggregator","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/init(maxContentLength:)":{"type":"topic","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxContentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/init(maxcontentlength:)","kind":"symbol","title":"init(maxContentLength:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/init(maxContentLength:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/InboundOut":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/inboundout","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundOut","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"title":"NIOHTTPClientResponseAggregator.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","abstract":[],"role":"collection","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelInboundHandler-Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"ChannelInboundHandler Implementations","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/RemovableChannelHandler-Implementations":{"title":"RemovableChannelHandler Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/RemovableChannelHandler-Implementations","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/removablechannelhandler-implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"title":"NIOHTTPClientResponseAggregator.InboundIn","role":"symbol","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/inboundin","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"kind":"symbol"}}}