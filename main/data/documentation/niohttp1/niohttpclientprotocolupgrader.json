{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"abstract":[{"text":"An object that implements ","type":"text"},{"code":"NIOHTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}],"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader"],"type":"conformingTypes","kind":"relationships"}],"metadata":{"externalID":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP","title":"NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"NIOHTTP1"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"symbolKind":"protocol","role":"symbol"},"kind":"symbol","topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientprotocolupgrader"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","abstract":[],"role":"collection","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/supportedProtocol":{"title":"supportedProtocol","kind":"symbol","required":true,"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/supportedprotocol","abstract":[{"text":"The protocol this upgrader knows how to support.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/addCustom(upgradeRequestHeaders:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/addcustom(upgraderequestheaders:)","required":true,"abstract":[{"text":"Additional headers to be added to the request, beyond the “Upgrade” and “Connection” headers.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addCustom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeRequestHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"addCustom(upgradeRequestHeaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/upgrade(context:upgradeResponse:)":{"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","abstract":[{"type":"text","text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel"},{"type":"text","text":" "},{"type":"text","text":"pipeline to add whatever channel handlers are required."},{"type":"text","text":" "},{"type":"text","text":"Until the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" succeeds, all received data will be buffered."}],"type":"topic","title":"upgrade(context:upgradeResponse:)","kind":"symbol","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"abstract":[{"text":"Gives the receiving upgrader the chance to deny the upgrade based on the upgrade HTTP response.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldAllowUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"shouldAllowUpgrade(upgradeResponse:)","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/shouldallowupgrade(upgraderesponse:)","kind":"symbol","role":"symbol","required":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"title":"NIOHTTPClientProtocolUpgrader","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"kind":"symbol","title":"NIOWebSocketClientUpgrader","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/requiredUpgradeHeaders":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"type":"topic","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/requiredupgradeheaders","abstract":[{"type":"text","text":"All the header fields the protocol requires in the request to successfully upgrade."},{"type":"text","text":" "},{"type":"text","text":"These header fields will be added to the outbound request’s “Connection” header field."},{"type":"text","text":" "},{"type":"text","text":"It is the responsibility of the custom headers call to actually add these required headers."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","role":"symbol","title":"requiredUpgradeHeaders","kind":"symbol","required":true}}}