{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler"]]},"metadata":{"role":"symbol","roleHeading":"Initializer","title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","externalID":"s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC9upgraders12httpHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_Say7NIOCore016RemovableChannelD0_pGyAI0nD7ContextCctcfc","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"NIOHTTP1"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"RemovableChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All ","type":"text"},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" objects that will add their upgrade request","type":"text"},{"text":" ","type":"text"},{"text":"headers and handle the upgrade if there is a response for their protocol. They should be placed in","type":"text"},{"text":" ","type":"text"},{"text":"order of the preference for the upgrade.","type":"text"}]}],"name":"upgraders"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" objects which will be removed from the pipeline"},{"type":"text","text":" "},{"type":"text","text":"once the upgrade response is sent. This is used to ensure that the pipeline will be in a clean state"},{"type":"text","text":" "},{"type":"text","text":"after the upgrade. It should include any handlers that are directly related to handling HTTP."},{"type":"text","text":" "},{"type":"text","text":"At the very least this should include the "},{"code":"HTTPEncoder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"HTTPDecoder","type":"codeVoice"},{"type":"text","text":", but should also include"},{"type":"text","text":" "},{"type":"text","text":"any other handler that cannot tolerate receiving non-HTTP data."}]}],"name":"httpHandlers"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that will be fired when HTTP upgrade is complete."}]}],"name":"upgradeCompletionHandler"}]}],"abstract":[{"text":"Create a ","type":"text"},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler":{"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"abstract":[{"type":"text","text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"title":"NIOHTTPClientUpgradeHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"title":"NIOHTTPClientProtocolUpgrader","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"type":"topic","url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","abstract":[{"text":"Every ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/init(upgraders:httpHandlers:upgradeCompletionHandler:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP","kind":"typeIdentifier","text":"NIOHTTPClientProtocolUpgrader"},{"kind":"text","text":"], "},{"text":"httpHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","abstract":[{"text":"Create a ","type":"text"},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"text":".","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","abstract":[],"role":"collection","kind":"symbol","type":"topic"}}}