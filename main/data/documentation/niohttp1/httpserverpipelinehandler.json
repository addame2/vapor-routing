{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerPipelineHandler"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"This handler ensures that HTTP server pipelines only process one request at a time.","type":"text"},{"text":" ","type":"text"},{"text":"This is the safest way for pipelining-unaware code to operate, as it ensures that","type":"text"},{"text":" ","type":"text"},{"text":"mutation of any shared server state is not parallelised, and that responses are always","type":"text"},{"text":" ","type":"text"},{"text":"sent for each request in turn. In almost all cases this is the behaviour that a","type":"text"},{"text":" ","type":"text"},{"text":"pipeline will want. This is achieved without doing too much buffering by preventing","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" from reading from the socket until a complete response is processed,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring that a malicious client is not capable of overwhelming a server by shoving","type":"text"},{"text":" ","type":"text"},{"text":"an enormous amount of data down the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" while a server is processing a","type":"text"},{"text":" ","type":"text"},{"text":"slow response.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","type":"reference","isActive":true},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"more details on safely handling HTTP pipelining.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In addition to handling the request buffering, this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is aware of","type":"text"},{"text":" ","type":"text"},{"text":"TCP half-close. While there are very few HTTP clients that are capable of TCP","type":"text"},{"text":" ","type":"text"},{"text":"half-close, clients that are not HTTP specific (e.g. ","type":"text"},{"code":"netcat","type":"codeVoice"},{"text":") may trigger a TCP","type":"text"},{"text":" ","type":"text"},{"text":"half-close. Having this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" be aware of TCP half-close makes it easier","type":"text"},{"text":" ","type":"text"},{"text":"to build HTTP servers that are resilient to this kind of behaviour.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The TCP half-close handling is done by buffering the half-close notification along","type":"text"},{"text":" ","type":"text"},{"text":"with the HTTP request parts. The half-close notification will be delivered in order","type":"text"},{"text":" ","type":"text"},{"text":"with the rest of the reads. If the half-close occurs either before a request is received","type":"text"},{"text":" ","type":"text"},{"text":"or during a request body upload, it will be delivered immediately. If a half-close is","type":"text"},{"text":" ","type":"text"},{"text":"received immediately after ","type":"text"},{"code":"HTTPServerRequestPart.end","type":"codeVoice"},{"text":", it will also be passed along","type":"text"},{"text":" ","type":"text"},{"text":"immediately, allowing this signal to be seen by the HTTP server as early as possible.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerPipelineHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPServerPipelineHandler","kind":"identifier"}],"modules":[{"name":"NIOHTTP1"}],"externalID":"s:8NIOHTTP125HTTPServerPipelineHandlerC","symbolKind":"class","role":"symbol","title":"HTTPServerPipelineHandler"},"abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that handles HTTP pipelining by buffering inbound data until a","type":"text"},{"text":" ","type":"text"},{"text":"response has been sent.","type":"text"}],"kind":"symbol","sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/httpserverpipelinehandler"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundIn":{"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundin","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"type":"topic","title":"HTTPServerPipelineHandler.InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelOutboundHandler-Implementations":{"abstract":[],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundOut":{"type":"topic","title":"HTTPServerPipelineHandler.InboundOut","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundout","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/handlerRemoved(context:)":{"abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)","role":"symbol","title":"handlerRemoved(context:)","kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/handlerremoved(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","role":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ChannelOutboundHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/write(context:data:promise:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/write(context:data:promise:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"role":"symbol","title":"write(context:data:promise:)","abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"type":"text","text":" is called."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundIn":{"abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundin","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"type":"topic","title":"HTTPServerPipelineHandler.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/init()":{"title":"init()","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/init()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelInactive(context:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInactive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has become inactive and is no longer able to send and receive data`.","type":"text"}],"title":"channelInactive(context:)","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinactive(context:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelHandler-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations","kind":"article","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelhandler-implementations","type":"topic","title":"ChannelHandler Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/errorCaught(context:error:)":{"abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/errorcaught(context:error:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"errorCaught(context:error:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerPipelineHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTPServerPipelineHandler","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that handles HTTP pipelining by buffering inbound data until a","type":"text"},{"text":" ","type":"text"},{"text":"response has been sent.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/httpserverpipelinehandler","title":"HTTPServerPipelineHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut","type":"topic","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"title":"HTTPServerPipelineHandler.OutboundOut","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelInboundHandler-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","title":"ChannelInboundHandler Implementations","kind":"article","abstract":[],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/RemovableChannelHandler-Implementations":{"abstract":[],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/removablechannelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"RemovableChannelHandler Implementations"},"https://tools.ietf.org/html/rfc7230#section-6.3.2":{"url":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","identifier":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","titleInlineContent":[{"text":"RFC 7320 Section 6.3.2","type":"text"}],"type":"link","title":"RFC 7320 Section 6.3.2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/userInboundEventTriggered(context:event:)":{"abstract":[{"type":"text","text":"Called when a user inbound event has been triggered."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/userinboundeventtriggered(context:event:)","type":"topic","kind":"symbol","title":"userInboundEventTriggered(context:event:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","abstract":[],"role":"collection","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelRead(context:data:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelread(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"title":"channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/read(context:)":{"title":"read(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)","role":"symbol","abstract":[{"text":"Called to request that the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" perform a read when data is ready. The read operation will signal that we are ready to read more data.","type":"text"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/read(context:)","type":"topic"}}}