{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"]]},"metadata":{"externalID":"s:12NIOWebSocket0aB14ServerUpgraderC12maxFrameSize22automaticErrorHandling13shouldUpgrade22upgradePipelineHandlerACSi_Sb7NIOCore15EventLoopFutureCy8NIOHTTP111HTTPHeadersVSgGAH7Channel_p_AK15HTTPRequestHeadVtcAJyytGAhP_p_ARtctcfc","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shouldUpgrade","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)"}],"title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"NIOWebSocket"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true, ","kind":"text"},{"text":"shouldUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"HTTPRequestHead","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"maxFrameSize","content":[{"type":"paragraph","inlineContent":[{"text":"The maximum frame size the decoder is willing to tolerate from the","type":"text"},{"text":" ","type":"text"},{"text":"remote peer. WebSockets in principle allows frame sizes up to ","type":"text"},{"type":"codeVoice","code":"2**64"},{"text":" bytes, but","type":"text"},{"text":" ","type":"text"},{"text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not","type":"text"},{"text":" ","type":"text"},{"text":"possible to even. Users may set this to any value up to ","type":"text"},{"type":"codeVoice","code":"UInt32.max"},{"text":".","type":"text"}]}]},{"name":"automaticErrorHandling","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the pipeline should automatically handle protocol"},{"type":"text","text":" "},{"type":"text","text":"errors by sending error responses and closing the connection. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"may be set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user wishes to handle their own errors."}]}]},{"name":"shouldUpgrade","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that determines whether the websocket request should be"},{"type":"text","text":" "},{"type":"text","text":"upgraded. This callback is responsible for creating a "},{"type":"codeVoice","code":"HTTPHeaders"},{"type":"text","text":" object with"},{"type":"text","text":" "},{"type":"text","text":"any headers that it needs on the response "},{"inlineContent":[{"text":"except for","type":"text"}],"type":"emphasis"},{"type":"text","text":" the "},{"type":"codeVoice","code":"Upgrade"},{"type":"text","text":", "},{"type":"codeVoice","code":"Connection"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"Sec-WebSocket-Accept"},{"type":"text","text":" headers, which this upgrader will handle. Should return"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" containing "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the upgrade should be refused."}]}]},{"name":"upgradePipelineHandler","content":[{"type":"paragraph","inlineContent":[{"text":"A function that will be called once the upgrade response is","type":"text"},{"text":" ","type":"text"},{"text":"flushed, and that is expected to mutate the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" appropriately to handle the","type":"text"},{"text":" ","type":"text"},{"text":"websocket protocol. This only needs to add the user handlers: the","type":"text"},{"text":" ","type":"text"},{"code":"WebSocketFrameEncoder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"text":" will have been added to the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline automatically.","type":"text"}]}]}],"kind":"parameters"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"NIOWebSocketServerUpgrader"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","title":"Channel","abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader":{"url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketServerUpgrader"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketServerUpgrader"}],"kind":"symbol","title":"NIOWebSocketServerUpgrader","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader","abstract":[{"text":"A ","type":"text"},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPRequestHead":{"title":"HTTPRequestHead","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPRequestHead"}],"type":"topic","url":"\/documentation\/niohttp1\/httprequesthead","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPRequestHead"}],"abstract":[{"text":"A representation of the request line and header fields of a HTTP request.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)":{"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)","abstract":[{"text":"Create a new ","type":"text"},{"code":"NIOWebSocketServerUpgrader","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldUpgrade"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)"}],"title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders":{"url":"\/documentation\/niohttp1\/httpheaders","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeaders","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPHeaders","kind":"identifier"}],"title":"HTTPHeaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","abstract":[{"text":"A representation of a block of HTTP header fields.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"}}}