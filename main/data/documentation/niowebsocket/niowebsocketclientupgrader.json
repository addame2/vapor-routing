{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"],"title":"Type Methods"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"sections":[],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketclientupgrader"]}],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"],"title":"Conforms To","kind":"relationships"}],"metadata":{"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"title":"NIOWebSocketClientUpgrader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"externalID":"s:12NIOWebSocket0aB14ClientUpgraderC","modules":[{"name":"NIOWebSocket"}],"symbolKind":"class","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This upgrader assumes that the "},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"type":"text","text":" will create and send the upgrade request."},{"type":"text","text":" "},{"type":"text","text":"This upgrader also assumes that the "},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"type":"text","text":" will appropriately mutate the"},{"type":"text","text":" "},{"type":"text","text":"pipeline to remove the HTTP "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey()":{"title":"randomRequestKey()","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomRequestKey"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly using the "},{"type":"codeVoice","code":"SystemRandomNumberGenerator"},{"type":"text","text":" and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey()","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/requiredUpgradeHeaders":{"title":"requiredUpgradeHeaders","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"None of the websocket headers are actually defined as ‘required’."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/requiredupgradeheaders","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/addCustom(upgradeRequestHeaders:)":{"title":"addCustom(upgradeRequestHeaders:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeRequestHeaders"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add additional headers that are needed for a WebSocket upgrade request."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/addcustom(upgraderequestheaders:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"kind":"symbol","title":"NIOWebSocketClientUpgrader","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"title":"shouldAllowUpgrade(upgradeResponse:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldAllowUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Allow or deny the upgrade based on the upgrade HTTP response"},{"type":"text","text":" "},{"type":"text","text":"headers containing the correct accept key."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/shouldallowupgrade(upgraderesponse:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey(using:)":{"title":"randomRequestKey(using:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomRequestKey"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Generator"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Generator"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey(using:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"title":"NIOHTTPClientProtocolUpgrader","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/upgrade(context:upgradeResponse:)":{"title":"upgrade(context:upgradeResponse:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Called when the upgrade response has been flushed and it is safe to mutate the channel"},{"type":"text","text":" "},{"type":"text","text":"pipeline. Adds channel handlers for websocket frame encoding, decoding and errors."}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/upgrade(context:upgraderesponse:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/supportedProtocol":{"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/supportedprotocol","title":"supportedProtocol","kind":"symbol","abstract":[{"text":"RFC 6455 specs this as the required entry in the Upgrade header.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportedProtocol","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)":{"title":"init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/init(requestkey:maxframesize:automaticerrorhandling:upgradepipelinehandler:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"requestKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)"}],"kind":"symbol","abstract":[]}}}