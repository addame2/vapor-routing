{"metadata":{"role":"symbol","symbolKind":"init","roleHeading":"Initializer","title":"init()","externalID":"s:12NIOWebSocket03WebB12FrameEncoderCACycfc","modules":[{"name":"NIOWebSocket"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/niowebsocket\/websocketframeencoder\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/init()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()","kind":"symbol","title":"init()","type":"topic","url":"\/documentation\/niowebsocket\/websocketframeencoder\/init()","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder":{"kind":"symbol","navigatorTitle":[{"text":"WebSocketFrameEncoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder","abstract":[{"type":"text","text":"An inbound "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that serializes structured websocket frames into a byte stream"},{"type":"text","text":" "},{"type":"text","text":"for sending on the network."}],"title":"WebSocketFrameEncoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameEncoder","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder","type":"topic"}}}