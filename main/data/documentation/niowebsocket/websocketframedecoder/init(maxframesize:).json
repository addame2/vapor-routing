{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" = 1 << 14)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The maximum frame size the decoder is willing to tolerate from the","type":"text"},{"text":" ","type":"text"},{"text":"remote peer. WebSockets in principle allows frame sizes up to ","type":"text"},{"code":"2**64","type":"codeVoice"},{"text":" bytes, but","type":"text"},{"text":" ","type":"text"},{"text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not","type":"text"},{"text":" ","type":"text"},{"text":"possible to even allocate a buffer large enough to handle this size), so we","type":"text"},{"text":" ","type":"text"},{"text":"set a lower one. The default value is the same as the default HTTP\/2 max frame","type":"text"},{"text":" ","type":"text"},{"text":"size, ","type":"text"},{"code":"2**14","type":"codeVoice"},{"text":" bytes. Users may override this to any value up to ","type":"text"},{"code":"UInt32.max","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Users are strongly encouraged not to increase this value unless they absolutely","type":"text"},{"text":" ","type":"text"},{"text":"must, as the decoder will not produce partial frames, meaning that it will hold","type":"text"},{"text":" ","type":"text"},{"text":"on to data until the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"entire"}]},{"text":" body is received.","type":"text"}]}],"name":"maxFrameSize"},{"content":[{"inlineContent":[{"type":"text","text":"Whether this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" should automatically handle"},{"type":"text","text":" "},{"type":"text","text":"protocol errors in frame serialization, or whether it should allow the pipeline"},{"type":"text","text":" "},{"type":"text","text":"to handle them."}],"type":"paragraph"}],"name":"automaticErrorHandling"}]}],"abstract":[{"type":"text","text":"Construct a new "},{"code":"WebSocketFrameDecoder","type":"codeVoice"}],"metadata":{"externalID":"s:12NIOWebSocket03WebB12FrameDecoderC03maxD4SizeACSi_tcfc","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"roleHeading":"Initializer","title":"init(maxFrameSize:)","symbolKind":"init","modules":[{"name":"NIOWebSocket"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder":{"url":"\/documentation\/niowebsocket\/websocketframedecoder","navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameDecoder"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameDecoder"}],"kind":"symbol","title":"WebSocketFrameDecoder","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder","abstract":[{"text":"An inbound ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that deserializes websocket frames into a structured","type":"text"},{"text":" ","type":"text"},{"text":"format for further processing.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder/init(maxFrameSize:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"text":"Construct a new ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","role":"symbol","title":"init(maxFrameSize:)","url":"\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"}}}