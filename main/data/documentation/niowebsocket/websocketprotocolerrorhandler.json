{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"This ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" provides default error handling for basic errors in the","type":"text"},{"text":" ","type":"text"},{"text":"WebSocket protocol, and can be used by users when custom behaviour is not required.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"externalID":"s:12NIOWebSocket03WebB20ProtocolErrorHandlerC","roleHeading":"Class","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketProtocolErrorHandler"}],"navigatorTitle":[{"kind":"identifier","text":"WebSocketProtocolErrorHandler"}],"modules":[{"name":"NIOWebSocket"}],"role":"symbol","title":"WebSocketProtocolErrorHandler"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketprotocolerrorhandler"]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A simple "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that catches protocol errors emitted by the"},{"type":"text","text":" "},{"type":"codeVoice","code":"WebSocketFrameDecoder"},{"type":"text","text":" and automatically generates protocol error responses."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"],"title":"Conforms To","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/OutboundOut":{"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/outboundout","title":"WebSocketProtocolErrorHandler.OutboundOut","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/OutboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelinboundhandler-implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations","type":"topic","title":"ChannelInboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler":{"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler","navigatorTitle":[{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"kind":"symbol","title":"WebSocketProtocolErrorHandler","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","abstract":[{"text":"A simple ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that catches protocol errors emitted by the","type":"text"},{"text":" ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"text":" and automatically generates protocol error responses.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/init()":{"kind":"symbol","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/init()","role":"symbol","title":"init()","abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/init()"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/InboundIn":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/inboundin","kind":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/InboundIn","title":"WebSocketProtocolErrorHandler.InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelHandler-Implementations":{"role":"collectionGroup","abstract":[],"title":"ChannelHandler Implementations","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelhandler-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelHandler-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/errorCaught(context:error:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)","abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/errorcaught(context:error:)","title":"errorCaught(context:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]}}}