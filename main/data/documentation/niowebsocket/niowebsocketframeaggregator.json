{"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator"},"abstract":[{"type":"codeVoice","code":"NIOWebSocketFrameAggregator"},{"type":"text","text":" buffers inbound fragmented "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":"’s and aggregates them into a single "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It guarantees that a "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":" with an "},{"type":"codeVoice","code":"opcode"},{"type":"text","text":" of "},{"type":"codeVoice","code":".continuation"},{"type":"text","text":" is never forwarded."},{"type":"text","text":" "},{"type":"text","text":"Frames which are not fragmented are just forwarded without any processing."},{"type":"text","text":" "},{"type":"text","text":"Fragmented frames are unmasked, concatenated and forwarded as a new "},{"type":"codeVoice","code":"WebSocketFrame"},{"type":"text","text":" which is either a "},{"type":"codeVoice","code":".binary"},{"type":"text","text":" or "},{"type":"codeVoice","code":".text"},{"type":"text","text":" frame."},{"type":"text","text":" "},{"type":"codeVoice","code":"extensionData"},{"type":"text","text":", "},{"type":"codeVoice","code":"rsv1"},{"type":"text","text":", "},{"type":"codeVoice","code":"rsv2"},{"type":"text","text":" and "},{"type":"codeVoice","code":"rsv3"},{"type":"text","text":" are lost if a frame is fragmented because they cannot be concatenated."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketframeaggregator"]}],"metadata":{"modules":[{"name":"NIOWebSocket"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"navigatorTitle":[{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"title":"NIOWebSocketFrameAggregator","externalID":"s:12NIOWebSocket0aB15FrameAggregatorC","roleHeading":"Class","symbolKind":"class","role":"symbol"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":".ping","type":"codeVoice"},{"type":"text","text":", "},{"code":".pong","type":"codeVoice"},{"type":"text","text":", "},{"code":".closeConnection","type":"codeVoice"},{"type":"text","text":" frames are forwarded during frame aggregation"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/Error":{"title":"NIOWebSocketFrameAggregator.Error","role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/error","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"kind":"identifier","text":"Error"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelInboundHandler-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundIn":{"kind":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundin","title":"NIOWebSocketFrameAggregator.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelHandler-Implementations":{"kind":"article","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelhandler-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundOut":{"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundout","title":"NIOWebSocketFrameAggregator.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator":{"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator","navigatorTitle":[{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"kind":"symbol","title":"NIOWebSocketFrameAggregator","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","abstract":[{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"text":" buffers inbound fragmented ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":"’s and aggregates them into a single ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It guarantees that a ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":" with an ","type":"text"},{"type":"codeVoice","code":"opcode"},{"text":" of ","type":"text"},{"type":"codeVoice","code":".continuation"},{"text":" is never forwarded.","type":"text"},{"text":" ","type":"text"},{"text":"Frames which are not fragmented are just forwarded without any processing.","type":"text"},{"text":" ","type":"text"},{"text":"Fragmented frames are unmasked, concatenated and forwarded as a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":" which is either a ","type":"text"},{"type":"codeVoice","code":".binary"},{"text":" or ","type":"text"},{"type":"codeVoice","code":".text"},{"text":" frame.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"extensionData"},{"text":", ","type":"text"},{"type":"codeVoice","code":"rsv1"},{"text":", ","type":"text"},{"type":"codeVoice","code":"rsv2"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"rsv3"},{"text":" are lost if a frame is fragmented because they cannot be concatenated.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/channelRead(context:data:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelread(context:data:)","title":"channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"abstract":[],"url":"\/documentation\/niowebsocket","kind":"symbol","role":"collection","title":"NIOWebSocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minNonFinalFragmentSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxAccumulatedFrameCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxAccumulatedFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","abstract":[{"type":"text","text":"Configures a "},{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/init(minnonfinalfragmentsize:maxaccumulatedframecount:maxaccumulatedframesize:)","title":"init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"}}}