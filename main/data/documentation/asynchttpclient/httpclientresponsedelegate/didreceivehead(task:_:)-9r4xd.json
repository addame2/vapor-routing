{"abstract":[{"type":"text","text":"Called when response head is received. Will be called once."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"type":"text","text":"."}],"metadata":{"externalID":"s:15AsyncHTTPClient0B16ResponseDelegateP14didReceiveHead4task_7NIOCore15EventLoopFutureCyytGAA0B0C4TaskCy_0C0QzG_8NIOHTTP1012HTTPResponseG0VtF","required":true,"roleHeading":"Instance Method","title":"didReceiveHead(task:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveHead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier","text":"HTTPClient"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"symbolKind":"method","modules":[{"name":"AsyncHTTPClient"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"defaultImplementationsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-61057"],"title":"HTTPClientResponseDelegate Implementations"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveHead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier","text":"HTTPClient"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"head"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that will be used for backpressure.","type":"text"}]}]},{"kind":"parameters","parameters":[{"name":"task","content":[{"type":"paragraph","inlineContent":[{"text":"Current request context.","type":"text"}]}]},{"name":"head","content":[{"type":"paragraph","inlineContent":[{"text":"Received reposonse head.","type":"text"}]}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-61057":{"abstract":[{"type":"text","text":"Called when response head is received. Will be called once."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-61057","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveHead","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-61057","title":"didReceiveHead(task:_:)"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"navigatorTitle":[{"text":"HTTPClientResponseDelegate","kind":"identifier"}],"role":"symbol","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientResponseDelegate","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","abstract":[{"type":"codeVoice","code":"HTTPClientResponseDelegate"},{"type":"text","text":" allows an implementation to receive notifications about request processing and to control how response parts are processed."},{"type":"text","text":" "},{"type":"text","text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response"},{"type":"text","text":" "},{"type":"text","text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming"},{"type":"text","text":" "},{"type":"text","text":"class to the "},{"type":"codeVoice","code":"HTTPClient.execute()"},{"type":"text","text":" method and this package will call each delegate method appropriately as the request takes place.\/"}],"type":"topic","kind":"symbol","title":"HTTPClientResponseDelegate"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient":{"type":"topic","title":"HTTPClient","url":"\/documentation\/asynchttpclient\/httpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClient"}],"abstract":[{"type":"text","text":"HTTPClient class provides API for request execution."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClient"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-9r4xd":{"kind":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveHead","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"defaultImplementations":1,"title":"didReceiveHead(task:_:)","abstract":[{"type":"text","text":"Called when response head is received. Will be called once."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPResponseHead":{"url":"\/documentation\/niohttp1\/httpresponsehead","navigatorTitle":[{"text":"HTTPResponseHead","kind":"identifier"}],"title":"HTTPResponseHead","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseHead","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A representation of the status line and header fields of a HTTP response.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseHead"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"type":"topic","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Task":{"type":"topic","title":"HTTPClient.Task","url":"\/documentation\/asynchttpclient\/httpclient\/task","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"abstract":[{"type":"text","text":"Response execution context. Will be created by the library and could be used for obtaining"},{"type":"text","text":" "},{"code":"EventLoopFuture<Response>","type":"codeVoice"},{"type":"text","text":" of the execution or cancellation of the execution."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Task"}],"role":"symbol"}}}