{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C"},{"text":".","kind":"text"},{"text":"Task","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"text":"<","kind":"text"},{"text":"ResponseAccumulator","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator"},{"text":".","kind":"text"},{"text":"Response","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/Response"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"part","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that will be used for backpressure.","type":"text"}]}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current request context."}]}],"name":"task"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Received body ","type":"text"},{"type":"codeVoice","code":"Part"},{"text":".","type":"text"}]}],"name":"buffer"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This function will not be called until the future returned by ","type":"text"},{"type":"codeVoice","code":"didReceiveHead"},{"text":" has completed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function will not be called for subsequent body parts until the previous future returned by a"},{"type":"text","text":" "},{"type":"text","text":"call to this function completes."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"metadata":{"role":"symbol","externalID":"s:15AsyncHTTPClient19ResponseAccumulatorC18didReceiveBodyPart4task_7NIOCore15EventLoopFutureCyytGAA0B0C4TaskCy_AK0C0VG_AF10ByteBufferVtF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveBodyPart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC","text":"ResponseAccumulator"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a","text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"AsyncHTTPClient"}],"title":"didReceiveBodyPart(task:_:)"},"variants":[{"paths":["\/documentation\/asynchttpclient\/responseaccumulator\/didreceivebodypart(task:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/didReceiveBodyPart(task:_:)"},"abstract":[{"type":"text","text":"Called when part of a response body is received. Could be called zero or more times."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"type":"topic","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator/Response":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/Response","url":"\/documentation\/asynchttpclient\/responseaccumulator\/response","type":"topic","title":"ResponseAccumulator.Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Task":{"type":"topic","title":"HTTPClient.Task","url":"\/documentation\/asynchttpclient\/httpclient\/task","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"abstract":[{"type":"text","text":"Response execution context. Will be created by the library and could be used for obtaining"},{"type":"text","text":" "},{"code":"EventLoopFuture<Response>","type":"codeVoice"},{"type":"text","text":" of the execution or cancellation of the execution."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Task"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseAccumulator","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator","url":"\/documentation\/asynchttpclient\/responseaccumulator","type":"topic","title":"ResponseAccumulator","navigatorTitle":[{"text":"ResponseAccumulator","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator/didReceiveBodyPart(task:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC","text":"ResponseAccumulator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a","text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","title":"didReceiveBodyPart(task:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/didReceiveBodyPart(task:_:)","url":"\/documentation\/asynchttpclient\/responseaccumulator\/didreceivebodypart(task:_:)","abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"You must return an "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient":{"type":"topic","title":"HTTPClient","url":"\/documentation\/asynchttpclient\/httpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClient"}],"abstract":[{"type":"text","text":"HTTPClient class provides API for request execution."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClient"}],"role":"symbol"}}}