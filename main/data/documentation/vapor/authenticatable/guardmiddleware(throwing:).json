{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"]}],"metadata":{"modules":[{"name":"Vapor"}],"symbolKind":"method","title":"guardMiddleware(throwing:)","role":"symbol","roleHeading":"Type Method","extendedModule":"Vapor","externalID":"s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Middleware","preciseIdentifier":"s:5Vapor10MiddlewareP","kind":"typeIdentifier"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"]]},"abstract":[{"type":"text","text":"This middleware ensures that an "},{"code":"Authenticatable","type":"codeVoice"},{"type":"text","text":" type "},{"code":"A","type":"codeVoice"},{"type":"text","text":" has been authenticated"},{"type":"text","text":" "},{"type":"text","text":"by a previous "},{"code":"Middleware","type":"codeVoice"},{"type":"text","text":" or throws an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":". The middlewares that actually perform"},{"type":"text","text":" "},{"type":"text","text":"authentication will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":" = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"Error","type":"codeVoice"},{"type":"text","text":" to throw if the type is not authed."}],"type":"paragraph"}],"name":"throwing"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this middleware to protect routes that might not otherwise attempt to access the","type":"text"},{"text":" ","type":"text"},{"text":"authenticated user (which always requires prior authentication).","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"Authenticatable.guardMiddleware(...)","type":"codeVoice"},{"text":" to create an instance.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this middleware in conjunction with other middleware such as "},{"code":"BearerAuthenticator","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"BasicAuthenticator","type":"codeVoice"},{"type":"text","text":" to do the actual authentication."}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor":{"title":"Vapor","url":"\/documentation\/vapor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"abstract":[{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" is placed between the server and your router. It is capable of"},{"type":"text","text":" "},{"type":"text","text":"mutating both incoming requests and outgoing responses. "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" can choose"},{"type":"text","text":" "},{"type":"text","text":"to pass requests on to the next "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" in a chain, or they can short circuit and"},{"type":"text","text":" "},{"type":"text","text":"return a custom "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" if desired."}],"type":"topic","kind":"symbol","title":"Middleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"url":"\/documentation\/vapor\/middleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"Middleware","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP"}],"type":"topic","url":"\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)","abstract":[{"text":"This middleware ensures that an ","type":"text"},{"type":"codeVoice","code":"Authenticatable"},{"text":" type ","type":"text"},{"type":"codeVoice","code":"A"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"type":"codeVoice","code":"Middleware"},{"text":" or throws an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"text":"authentication will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" throw errors if they fail to authenticate the user (except in","type":"text"},{"text":" ","type":"text"},{"text":"some exceptional cases like malformed data). This allows the middlewares to be composed","type":"text"},{"text":" ","type":"text"},{"text":"together to create chains of authentication for multiple user types.","type":"text"}],"title":"guardMiddleware(throwing:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable":{"navigatorTitle":[{"kind":"identifier","text":"Authenticatable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable","abstract":[{"type":"text","text":"Capable of being authenticated."}],"title":"Authenticatable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authenticatable"}],"kind":"symbol","url":"\/documentation\/vapor\/authenticatable"}}}