{"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"},"sections":[],"metadata":{"role":"collection","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"CoreMetrics"}],"externalID":"CoreMetrics","title":"CoreMetrics"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"],"title":"Structures"},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"]}],"variants":[{"paths":["\/documentation\/coremetrics"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","navigatorTitle":[{"text":"RecorderHandler","kind":"identifier"}],"title":"RecorderHandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RecorderHandler"},{"text":" represents a backend implementation of a ","type":"text"},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":"."}],"url":"\/documentation\/coremetrics\/recorderhandler","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RecorderHandler","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Counter","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/counter","title":"Counter","navigatorTitle":[{"text":"Counter","kind":"identifier"}],"abstract":[{"text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","navigatorTitle":[{"kind":"identifier","text":"Recorder"}],"url":"\/documentation\/coremetrics\/recorder","abstract":[{"type":"text","text":"A recorder collects observations within a time window (usually things like response sizes) and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"can"}]},{"type":"text","text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles."}],"title":"Recorder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Recorder"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"url":"\/documentation\/coremetrics\/gauge","navigatorTitle":[{"kind":"identifier","text":"Gauge"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Gauge"}],"kind":"symbol","title":"Gauge","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","abstract":[{"text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are modeled as ","type":"text"},{"type":"codeVoice","code":"Recorder"},{"text":" with a sample size of 1 and that does not perform any aggregation.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","abstract":[{"type":"text","text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,"},{"type":"text","text":" "},{"type":"text","text":"for example, min, max and various quantiles. It is similar to a "},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":" but specialized for values that represent durations."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/coremetrics\/timer","navigatorTitle":[{"text":"Timer","kind":"identifier"}],"title":"Timer"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"title":"MetricsSystem","kind":"symbol","url":"\/documentation\/coremetrics\/metricssystem","type":"topic","abstract":[{"type":"text","text":"The "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" is a global facility where the default metrics backend implementation ("},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":") can be"},{"type":"text","text":" "},{"type":"text","text":"configured. "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" is set up just once in a given program to set up the desired metrics backend"},{"type":"text","text":" "},{"type":"text","text":"implementation."}],"navigatorTitle":[{"text":"MetricsSystem","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsSystem","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","abstract":[],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/coremetrics","title":"CoreMetrics"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"kind":"symbol","title":"FloatingPointCounter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","abstract":[{"type":"text","text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero."},{"type":"text","text":" "},{"type":"text","text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors."},{"type":"text","text":" "},{"type":"text","text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries."}],"navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounter"}],"type":"topic","url":"\/documentation\/coremetrics\/floatingpointcounter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounter"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeUnit"}],"role":"symbol","title":"TimeUnit","type":"topic","url":"\/documentation\/coremetrics\/timeunit","navigatorTitle":[{"kind":"identifier","text":"TimeUnit"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"type":"topic","url":"\/documentation\/coremetrics\/noopmetricshandler","title":"NOOPMetricsHandler","abstract":[{"text":"Ships with the metrics module, used for initial bootstrapping.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NOOPMetricsHandler","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"type":"topic","title":"FloatingPointCounterHandler","url":"\/documentation\/coremetrics\/floatingpointcounterhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"FloatingPointCounterHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"FloatingPointCounter"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounterHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounterHandler"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"title":"MetricsFactory","kind":"symbol","url":"\/documentation\/coremetrics\/metricsfactory","type":"topic","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MetricsFactory"},{"type":"text","text":" is the bridge between the "},{"type":"codeVoice","code":"MetricsSystem"},{"type":"text","text":" and the metrics backend implementation."},{"type":"text","text":" "},{"type":"codeVoice","code":"MetricsFactory"},{"type":"text","text":"’s role is to initialize concrete implementations of the various metric types:"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsFactory"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsFactory"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"title":"TimerHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimerHandler"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","url":"\/documentation\/coremetrics\/timerhandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"TimerHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Timer"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"navigatorTitle":[{"text":"MultiplexMetricsHandler","kind":"identifier"}],"role":"symbol","url":"\/documentation\/coremetrics\/multiplexmetricshandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","title":"MultiplexMetricsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexMetricsHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers."}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"navigatorTitle":[{"kind":"identifier","text":"CounterHandler"}],"url":"\/documentation\/coremetrics\/counterhandler","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CounterHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","title":"CounterHandler","kind":"symbol","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"}}}