{"abstract":[{"type":"text","text":"A threading lock based on "},{"type":"codeVoice","code":"libpthread"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"libdispatch"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"modules":[{"name":"NIOConcurrencyHelpers"}],"role":"symbol","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"Lock"}],"externalID":"s:21NIOConcurrencyHelpers4LockC","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lock"}],"title":"Lock"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/lock()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/unlock()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLock(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLockVoid(_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lock"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This object provides a lock on top of a single "},{"code":"pthread_mutex_t","type":"codeVoice"},{"type":"text","text":". This kind"},{"type":"text","text":" "},{"text":"of lock is safe to use with ","type":"text"},{"code":"libpthread","type":"codeVoice"},{"text":"-based threading models, such as the","type":"text"},{"text":" ","type":"text"},{"text":"one used by NIO. On Windows, the lock is based on the substantially similar","type":"text"},{"text":" ","type":"text"},{"code":"SRWLOCK","type":"codeVoice"},{"text":" type.","type":"text"}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/lock"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","role":"collection","abstract":[],"url":"\/documentation\/nioconcurrencyhelpers","title":"NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/lock()":{"abstract":[{"type":"text","text":"Acquire the lock."}],"url":"\/documentation\/nioconcurrencyhelpers\/lock\/lock()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/lock()","type":"topic","role":"symbol","title":"lock()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock":{"url":"\/documentation\/nioconcurrencyhelpers\/lock","title":"Lock","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lock"}],"navigatorTitle":[{"kind":"identifier","text":"Lock"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock","abstract":[{"type":"text","text":"A threading lock based on "},{"type":"codeVoice","code":"libpthread"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"libdispatch"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/withLockVoid(_:)":{"abstract":[],"url":"\/documentation\/nioconcurrencyhelpers\/lock\/withlockvoid(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withLockVoid","kind":"identifier"},{"text":"(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLockVoid(_:)","type":"topic","role":"symbol","title":"withLockVoid(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/unlock()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Release the lock."}],"url":"\/documentation\/nioconcurrencyhelpers\/lock\/unlock()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/unlock()","role":"symbol","type":"topic","title":"unlock()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/withLock(_:)":{"abstract":[{"type":"text","text":"Acquire the lock for the duration of the given block."}],"url":"\/documentation\/nioconcurrencyhelpers\/lock\/withlock(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/withLock(_:)","type":"topic","role":"symbol","title":"withLock(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/Lock/init()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/Lock\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Create a new lock.","type":"text"}],"url":"\/documentation\/nioconcurrencyhelpers\/lock\/init()","title":"init()"}}}