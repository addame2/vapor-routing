{"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()"]}],"abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The value of this object"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This implementation uses a ","type":"text"},{"inlineContent":[{"type":"text","text":"relaxed"}],"type":"emphasis"},{"text":" memory ordering. This guarantees nothing","type":"text"},{"text":" ","type":"text"},{"text":"more than that this operation is atomic: there is no guarantee that any other","type":"text"},{"text":" ","type":"text"},{"text":"event will be ordered before or after this one.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The implementation of ","type":"text"},{"type":"codeVoice","code":"exchange"},{"text":" contains a ","type":"text"},{"inlineContent":[{"type":"text","text":"Compare and Exchange loop"}],"type":"emphasis"},{"text":", ie. it may busy wait with","type":"text"},{"text":" ","type":"text"},{"text":"100% CPU load.","type":"text"}]}],"style":"warning","type":"aside"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()"},"metadata":{"externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF","modules":[{"name":"NIOConcurrencyHelpers"}],"title":"load()","roleHeading":"Instance Method","symbolKind":"method","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","role":"collection","abstract":[],"url":"\/documentation\/nioconcurrencyhelpers","title":"NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","abstract":[{"code":"AtomicBox","type":"codeVoice"},{"type":"text","text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class."}],"title":"AtomicBox","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AtomicBox","kind":"identifier"}],"role":"symbol","deprecated":true,"type":"topic","navigatorTitle":[{"text":"AtomicBox","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/load()":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()","title":"load()","abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","role":"symbol"}}}