{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttpcompression\/niohttprequestdecompressor\/wrapinboundout(_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/wrapInboundOut(_:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"NIOCore","title":"wrapInboundOut(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:7NIOCore21ChannelInboundHandlerPAAE04wrapC3OutyAA6NIOAnyV0cF0QzF::SYNTHESIZED::s:18NIOHTTPCompression26NIOHTTPRequestDecompressorC","symbolKind":"method","role":"symbol","modules":[{"name":"NIOHTTPCompression"}]},"abstract":[{"type":"text","text":"Wrap the provided "},{"type":"codeVoice","code":"InboundOut"},{"type":"text","text":" that will be passed to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"ChannelHandlerContext.fireChannelRead"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelInboundHandler-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression":{"abstract":[],"title":"NIOHTTPCompression","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","kind":"symbol","url":"\/documentation\/niohttpcompression","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor","navigatorTitle":[{"text":"NIOHTTPRequestDecompressor","kind":"identifier"}],"url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPRequestDecompressor","kind":"identifier"}],"role":"symbol","type":"topic","title":"NIOHTTPRequestDecompressor","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/wrapInboundOut(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/wrapInboundOut(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"}],"url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/wrapinboundout(_:)","abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"InboundOut","type":"codeVoice"},{"type":"text","text":" that will be passed to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"ChannelHandlerContext.fireChannelRead"},{"type":"text","text":"."}],"title":"wrapInboundOut(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestDecompressor/ChannelInboundHandler-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestDecompressor\/ChannelInboundHandler-Implementations","role":"collectionGroup","url":"\/documentation\/niohttpcompression\/niohttprequestdecompressor\/channelinboundhandler-implementations","abstract":[],"title":"ChannelInboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"abstract":[{"type":"codeVoice","code":"NIOAny"},{"text":" is an opaque container for values of ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" type, similar to Swiftâ€™s builtin ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" the overhead of ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FileRegion"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" just like ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" will contain them within an existential container.","type":"text"}],"title":"NIOAny","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/nioany"}}}