{"variants":[{"paths":["\/documentation\/niohttpcompression\/niohttprequestcompressor"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"NIOHTTPResponseCompressor is an outbound channel handler that handles automatic streaming compression of"},{"type":"text","text":" "},{"type":"text","text":"HTTP requests."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/init(encoding:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/RemovableChannelHandler-Implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor"},"metadata":{"title":"NIOHTTPRequestCompressor","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPRequestCompressor"}],"role":"symbol","symbolKind":"class","roleHeading":"Class","externalID":"s:18NIOHTTPCompression24NIOHTTPRequestCompressorC","modules":[{"name":"NIOHTTPCompression"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestCompressor"}]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestCompressor"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This compressor supports gzip and deflate. It works best if many writes are made between flushes."}],"type":"paragraph"},{"inlineContent":[{"text":"Note that this compressor performs the compression on the event loop thread. This means that compressing","type":"text"},{"text":" ","type":"text"},{"text":"some resources, particularly those that do not benefit from compression or that could have been compressed","type":"text"},{"text":" ","type":"text"},{"text":"ahead-of-time instead of dynamically, could be a waste of CPU time and latency for relatively minimal","type":"text"},{"text":" ","type":"text"},{"text":"benefit. This channel handler should be present in the pipeline only for dynamically-generated and","type":"text"},{"text":" ","type":"text"},{"text":"highly-compressible content, which will see the biggest benefits from streaming compression.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","role":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ChannelOutboundHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/init(encoding:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"encoding"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18NIOHTTPCompression14NIOCompressionO","text":"NIOCompression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:18NIOHTTPCompression14NIOCompressionO9AlgorithmV","text":"Algorithm","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initialize a NIOHTTPRequestCompressor"}],"url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/init(encoding:)","type":"topic","kind":"symbol","title":"init(encoding:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/init(encoding:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor":{"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPRequestCompressor"}],"abstract":[{"text":"NIOHTTPResponseCompressor is an outbound channel handler that handles automatic streaming compression of","type":"text"},{"text":" ","type":"text"},{"text":"HTTP requests.","type":"text"}],"title":"NIOHTTPRequestCompressor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPRequestCompressor"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor","url":"\/documentation\/niohttpcompression\/niohttprequestcompressor"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/OutboundOut":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/outboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundOut","type":"topic","role":"symbol","title":"NIOHTTPRequestCompressor.OutboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/RemovableChannelHandler-Implementations":{"url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/removablechannelhandler-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/RemovableChannelHandler-Implementations","kind":"article","title":"RemovableChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/write(context:data:promise:)":{"url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/write(context:data:promise:)","type":"topic","abstract":[{"type":"text","text":"Write to channel"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/write(context:data:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/handlerAdded(context:)":{"url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/handleradded(context:)","abstract":[{"type":"text","text":"Called when this "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" is added to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"type":"topic","title":"handlerAdded(context:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerAdded(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/OutboundIn":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"kind":"symbol","title":"NIOHTTPRequestCompressor.OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/outboundin","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/flush(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" flush all pending writes. The flush operation will try to flush out all previous written messages","type":"text"},{"text":" ","type":"text"},{"text":"that are pending.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/flush(context:)","title":"flush(context:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/flush(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/ChannelOutboundHandler-Implementations":{"abstract":[],"type":"topic","kind":"article","url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/NIOHTTPRequestCompressor/handlerRemoved(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/NIOHTTPRequestCompressor\/handlerRemoved(context:)","url":"\/documentation\/niohttpcompression\/niohttprequestcompressor\/handlerremoved(context:)","kind":"symbol","abstract":[{"type":"text","text":"Called when this "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" is removed from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","title":"handlerRemoved(context:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression":{"abstract":[],"title":"NIOHTTPCompression","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","kind":"symbol","url":"\/documentation\/niohttpcompression","role":"collection"}}}