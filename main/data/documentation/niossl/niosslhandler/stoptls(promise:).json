{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"]]},"abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be completed when the unwrapping has","type":"text"},{"text":" ","type":"text"},{"text":"completed.","type":"text"}],"type":"paragraph"}],"name":"promise"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will send a CLOSE_NOTIFY and wait for the corresponding CLOSE_NOTIFY. When that next"},{"type":"text","text":" "},{"type":"text","text":"CLOSE_NOTIFY is received, this handler will pass on all pending writes and remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the channel pipeline. If the shutdown times out then an error will fire down the"},{"type":"text","text":" "},{"type":"text","text":"pipeline, this handler will remove itself from the pipeline, but the channel will not be"},{"type":"text","text":" "},{"type":"text","text":"automatically closed."}]},{"type":"paragraph","inlineContent":[{"text":"This function ","type":"text"},{"inlineContent":[{"type":"text","text":"is not thread-safe"}],"type":"strong"},{"text":": you ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"text":" call it from the correct event","type":"text"},{"text":" ","type":"text"},{"text":"loop thread.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"]}],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"role":"symbol","symbolKind":"method","extendedModule":"NIOSSL","title":"stopTLS(promise:)","modules":[{"name":"NIOSSL"}],"externalID":"s:6NIOSSL13NIOSSLHandlerC7stopTLS7promisey7NIOCore16EventLoopPromiseVyytGSg_tF"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","navigatorTitle":[{"text":"NIOSSLHandler","kind":"identifier"}],"url":"\/documentation\/niossl\/niosslhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLHandler","kind":"identifier"}],"role":"symbol","type":"topic","title":"NIOSSLHandler","abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"type":"topic","title":"stopTLS(promise:)","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"text":" ","type":"text"},{"text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper","type":"text"},{"text":" ","type":"text"},{"text":"from it.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","title":"NIOSSL","url":"\/documentation\/niossl","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"abstract":[{"text":"A promise to provide a result later.","type":"text"}],"title":"EventLoopPromise","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopPromise","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/eventlooppromise"}}}