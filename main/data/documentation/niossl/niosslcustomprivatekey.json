{"variants":[{"paths":["\/documentation\/niossl\/niosslcustomprivatekey"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLCustomPrivateKey","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"In a number of circumstances it is advantageous to store a TLS private key in some form of high-security storage,"},{"type":"text","text":" "},{"type":"text","text":"such as a smart card. In these cases it is not possible to represent the TLS private key directly as a sequence"},{"type":"text","text":" "},{"type":"text","text":"of bytes that BoringSSL will understand."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This protocol allows a type to implement callbacks that perform the specific operation required by the TLS handshake."},{"type":"text","text":" "},{"type":"text","text":"Implementers are required to specify what signature algorithms they support, and then must implement "},{"inlineContent":[{"text":"only one","type":"text"}],"type":"strong"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"sign","type":"codeVoice"},{"type":"text","text":"\/"},{"code":"decrypt","type":"codeVoice"},{"type":"text","text":" functions. For elliptic curve keys, implementers should implement "},{"code":"sign","type":"codeVoice"},{"type":"text","text":". For RSA keys,"},{"type":"text","text":" "},{"type":"text","text":"implementers should implement "},{"code":"sign","type":"codeVoice"},{"type":"text","text":" and, if supporting RSA key exchange in TLS versions before 1.3, you should"},{"type":"text","text":" "},{"type":"text","text":"also implement "},{"code":"decrypt","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"If the same ","type":"text"},{"code":"NIOSSLCustomPrivateKey","type":"codeVoice"},{"text":" implementation is used by multiple channels at once, then no synchronization","type":"text"},{"text":" ","type":"text"},{"text":"is imposed by SwiftNIO. The calls to the protocol requirements will be made on event loop threads, so if further","type":"text"},{"text":" ","type":"text"},{"text":"synchronization is required it is up to the implementer to provide it. Note that it is unacceptable to block in","type":"text"},{"text":" ","type":"text"},{"text":"these functions, and so potentially blocking operations must delegate to another thread.","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"],"title":"Instance Methods"}],"abstract":[{"type":"codeVoice","code":"NIOSSLCustomPrivateKey"},{"type":"text","text":" defines the interface of a custom, non-BoringSSL private key."}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"symbolKind":"protocol","title":"NIOSSLCustomPrivateKey","externalID":"s:6NIOSSL22NIOSSLCustomPrivateKeyP","modules":[{"name":"NIOSSL"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","type":"topic","title":"NIOSSL","url":"\/documentation\/niossl","role":"collection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/sign(channel:algorithm:data:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sign"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"algorithm"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV","text":"SignatureAlgorithm","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"sign(channel:algorithm:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)","abstract":[{"type":"text","text":"Called to perform a signing operation."}],"role":"symbol","required":true,"type":"topic","url":"\/documentation\/niossl\/niosslcustomprivatekey\/sign(channel:algorithm:data:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/signatureAlgorithms":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"signatureAlgorithms"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV","kind":"typeIdentifier","text":"SignatureAlgorithm"},{"kind":"text","text":"]"}],"title":"signatureAlgorithms","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms","abstract":[{"type":"text","text":"The signature algorithms supported by this key."}],"role":"symbol","required":true,"type":"topic","url":"\/documentation\/niossl\/niosslcustomprivatekey\/signaturealgorithms","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/decrypt(channel:data:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"decrypt(channel:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","abstract":[{"text":"Called to perform a decryption operation.","type":"text"}],"role":"symbol","required":true,"type":"topic","url":"\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey":{"abstract":[{"type":"codeVoice","code":"NIOSSLCustomPrivateKey"},{"type":"text","text":" defines the interface of a custom, non-BoringSSL private key."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"title":"NIOSSLCustomPrivateKey","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"type":"topic","role":"symbol","url":"\/documentation\/niossl\/niosslcustomprivatekey","kind":"symbol"}}}