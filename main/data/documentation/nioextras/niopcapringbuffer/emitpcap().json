{"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:9NIOExtras17NIOPCAPRingBufferC8emitPCAP7NIOCore08CircularC0VyAE04ByteC0VGyF","modules":[{"name":"NIOExtras"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"emitPCAP","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircularBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14CircularBufferV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":">"}],"role":"symbol","title":"emitPCAP()"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"emitPCAP","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircularBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14CircularBufferV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"A ciruclar buffer of captured fragments.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/niopcapringbuffer\/emitpcap()"]}],"abstract":[{"text":"Emit the captured data to a consuming function; then clear the captured data.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","url":"\/documentation\/nioextras","role":"collection","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer/emitPCAP()":{"type":"topic","title":"emitPCAP()","kind":"symbol","role":"symbol","url":"\/documentation\/nioextras\/niopcapringbuffer\/emitpcap()","abstract":[{"text":"Emit the captured data to a consuming function; then clear the captured data.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"emitPCAP","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircularBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14CircularBufferV"},{"text":"<","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer":{"url":"\/documentation\/nioextras\/niopcapringbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","title":"NIOPCAPRingBuffer","type":"topic","abstract":[{"type":"text","text":"Storage for the most recent set of packets captured subject to constraints."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"code":"addFragment","type":"codeVoice"},{"type":"text","text":" as the sink to a "},{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"type":"text","text":" and call "},{"code":"emitPCAP","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"when you wish to get the recorded data."}],"role":"symbol","navigatorTitle":[{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"kind":"symbol","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/circularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","type":"topic","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"title":"CircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"}}}