{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"],"title":"Default Implementations"}],"metadata":{"roleHeading":"Class","title":"NIOWritePCAPHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"symbolKind":"class","role":"symbol","modules":[{"name":"NIOExtras"}],"navigatorTitle":[{"text":"NIOWritePCAPHandler","kind":"identifier"}],"externalID":"s:9NIOExtras19NIOWritePCAPHandlerC"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will be able to open the "},{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file in for example "},{"type":"reference","identifier":"https:\/\/www.wireshark.org","isActive":true},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"reference","identifier":"http:\/\/www.tcpdump.org","isActive":true},{"type":"text","text":". Using "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":" to write your "},{"type":"codeVoice","code":".pcap"},{"type":"text","text":" files can be useful for"},{"type":"text","text":" "},{"type":"text","text":"example when your real network traffic is TLS protected (so "},{"type":"codeVoice","code":"tcpdump"},{"type":"text","text":"\/Wireshark can’t read it directly), or if you"},{"type":"text","text":" "},{"type":"text","text":"don’t have enough privileges on the running host to dump the network traffic."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"text":" will also work with Unix Domain Sockets in which case it will still synthesize a TCP packet","type":"text"},{"text":" ","type":"text"},{"text":"capture with local address ","type":"text"},{"type":"codeVoice","code":"111.111.111.111"},{"text":" (port ","type":"text"},{"type":"codeVoice","code":"1111"},{"text":") and remote address ","type":"text"},{"type":"codeVoice","code":"222.222.222.222"},{"text":" (port ","type":"text"},{"type":"codeVoice","code":"2222"},{"text":").","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/niowritepcaphandler"]}],"abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can write a ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true,"type":"reference"},{"text":" containing the send\/received","type":"text"},{"text":" ","type":"text"},{"text":"data as synthesized TCP packet captures.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelOutboundHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/channeloutboundhandler-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","title":"ChannelOutboundHandler Implementations","kind":"article","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:filesink:)","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","kind":"symbol","type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC"},{"text":".","kind":"text"},{"text":"Mode","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO"},{"text":", ","kind":"text"},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?, ","kind":"text"},{"text":"fileSink","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":" with default settings."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","role":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ChannelOutboundHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Settings":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/settings","kind":"symbol","type":"topic","title":"NIOWritePCAPHandler.Settings","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings","abstract":[{"type":"text","text":"Settings for "},{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Settings","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Settings","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/pcapFileHeader":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/pcapfileheader","title":"pcapFileHeader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pcapFileHeader","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"abstract":[],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","url":"\/documentation\/nioextras\/niowritepcaphandler","role":"symbol","title":"NIOWritePCAPHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can write a ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true,"type":"reference"},{"text":" containing the send\/received","type":"text"},{"text":" ","type":"text"},{"text":"data as synthesized TCP packet captures.","type":"text"}],"kind":"symbol"},"https://www.wireshark.org":{"url":"https:\/\/www.wireshark.org","title":"Wireshark","identifier":"https:\/\/www.wireshark.org","type":"link","titleInlineContent":[{"text":"Wireshark","type":"text"}]},"https://en.wikipedia.org/wiki/Pcap":{"url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","title":".pcap file","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","type":"link","titleInlineContent":[{"code":".pcap","type":"codeVoice"},{"text":" file","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelOutboundHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/_channeloutboundhandler-implementations","title":"_ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/SynchronizedFileSink":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronizedFileSink","kind":"identifier"}],"title":"NIOWritePCAPHandler.SynchronizedFileSink","type":"topic","navigatorTitle":[{"text":"SynchronizedFileSink","kind":"identifier"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/synchronizedfilesink","abstract":[{"type":"text","text":"A synchronised file sink that uses a "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" to do all the necessary write synchronously."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/RemovableChannelHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelInboundHandler-Implementations":{"kind":"article","abstract":[],"title":"_ChannelInboundHandler Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","url":"\/documentation\/nioextras\/niowritepcaphandler\/_channelinboundhandler-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","text":"NIOWritePCAPHandler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","text":"Mode"},{"kind":"text","text":", "},{"text":"fakeLocalAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?, ","kind":"text"},{"text":"fakeRemoteAddress","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"settings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Settings","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC8SettingsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileSink"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"type":"text","text":"Initialize a "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"type":"text","text":"."}],"title":"init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","kind":"symbol","url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:settings:filesink:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/nioextras\/niowritepcaphandler\/channelhandler-implementations","role":"collectionGroup"},"http://www.tcpdump.org":{"url":"http:\/\/www.tcpdump.org","title":"tcpdump","identifier":"http:\/\/www.tcpdump.org","type":"link","titleInlineContent":[{"code":"tcpdump","type":"codeVoice"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","url":"\/documentation\/nioextras","role":"collection","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Mode":{"title":"NIOWritePCAPHandler.Mode","url":"\/documentation\/nioextras\/niowritepcaphandler\/mode","type":"topic","navigatorTitle":[{"text":"Mode","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mode","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_EmittingChannelHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/_emittingchannelhandler-implementations","title":"_EmittingChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"}}}