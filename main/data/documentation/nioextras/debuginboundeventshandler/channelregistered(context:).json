{"abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has successfully registered with its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" to handle I\/O.","type":"text"}],"metadata":{"externalID":"s:9NIOExtras25DebugInboundEventsHandlerC17channelRegistered7contexty7NIOCore07ChannelE7ContextC_tF","symbolKind":"method","role":"symbol","modules":[{"name":"NIOExtras"}],"title":"channelRegistered(context:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRegistered","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler\/channelRegistered(context:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRegistered","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.fireChannelRegistered"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" if you want to allow the next handler to also handle the event."}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/nioextras\/debuginboundeventshandler\/channelregistered(context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler/channelRegistered(context:)":{"title":"channelRegistered(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRegistered"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has successfully registered with its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to handle I\/O."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler\/channelRegistered(context:)","url":"\/documentation\/nioextras\/debuginboundeventshandler\/channelregistered(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"type":"topic","url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","role":"symbol","abstract":[{"text":"Every ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","url":"\/documentation\/nioextras","role":"collection","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","title":"DebugInboundEventsHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugInboundEventsHandler","kind":"identifier"}],"role":"symbol","abstract":[{"text":"ChannelInboundHandler that prints all inbound events that pass through the pipeline by default,","type":"text"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugOutboundEventsHandler for outbound events.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"DebugInboundEventsHandler","kind":"identifier"}],"url":"\/documentation\/nioextras\/debuginboundeventshandler"}}}