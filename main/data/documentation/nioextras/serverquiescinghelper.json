{"metadata":{"symbolKind":"class","navigatorTitle":[{"text":"ServerQuiescingHelper","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerQuiescingHelper","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOExtras"}],"title":"ServerQuiescingHelper","externalID":"s:9NIOExtras21ServerQuiescingHelperC","roleHeading":"Class"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"code":"ServerQuiescingHelper","type":"codeVoice"},{"text":" makes it easy to collect all child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s that a given server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" accepts. When","type":"text"},{"text":" ","type":"text"},{"text":"the quiescing period starts (that is when ","type":"text"},{"code":"ServerQuiescingHelper.initiateShutdown","type":"codeVoice"},{"text":" is invoked), it will perform the","type":"text"},{"text":" ","type":"text"},{"text":"following actions:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"close the server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" so no further connections get accepted","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"send a "},{"code":"ChannelShouldQuiesceEvent","type":"codeVoice"},{"type":"text","text":" user event to all currently still open child "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"after all previously open child "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s have closed, notify the "},{"code":"EventLoopPromise","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"code":"shutdown","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Example use:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let group = MultiThreadedEventLoopGroup(numThreads: [...])","let quiesce = ServerQuiescingHelper(group: group)","let serverChannel = try ServerBootstrap(group: group)","    .serverChannelInitializer { channel in","        \/\/ add the collection handler so all accepted child channels get collected","        channel.pipeline.add(handler: quiesce.makeServerChannelHandler(channel: channel))","    }","    \/\/ further bootstrap configuration","    .bind([...])","    .wait()","\/\/ [...]","let fullyShutdownPromise: EventLoopPromise<Void> = group.next().newPromise()","\/\/ initiate the shutdown","quiesce.initiateShutdown(promise: fullyShutdownPromise)","\/\/ wait for the shutdown to complete","try fullyShutdownPromise.futureResult.wait()"]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/nioextras\/serverquiescinghelper"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Helper that can be used to orchestrate the quiescing of a server "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and all the child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s that are"},{"type":"text","text":" "},{"type":"text","text":"open at a given point in time."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","url":"\/documentation\/nioextras","role":"collection","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/makeServerChannelHandler(channel:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)","url":"\/documentation\/nioextras\/serverquiescinghelper\/makeserverchannelhandler(channel:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeServerChannelHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"}],"role":"symbol","title":"makeServerChannelHandler(channel:)","abstract":[{"text":"Create the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" for the server ","type":"text"},{"code":"channel","type":"codeVoice"},{"text":" to collect all accepted child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/initiateShutdown(promise:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","abstract":[{"type":"text","text":"Initiate the shutdown. The following actions will be performed:"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initiateShutdown"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/nioextras\/serverquiescinghelper\/initiateshutdown(promise:)","type":"topic","title":"initiateShutdown(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/init(group:)":{"abstract":[{"text":"Initialize with a given ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"group","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/nioextras\/serverquiescinghelper\/init(group:)","kind":"symbol","title":"init(group:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServerQuiescingHelper"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","url":"\/documentation\/nioextras\/serverquiescinghelper","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}],"role":"symbol","title":"ServerQuiescingHelper","abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and all the child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}]}}}