{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","kind":"typeIdentifier","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = HPACKDecoder.maxDynamicTableSize)"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"maxDynamicTableSize","content":[{"inlineContent":[{"text":"Maximum allowed size of the dynamic header table.","type":"text"}],"type":"paragraph"}]}]}],"metadata":{"roleHeading":"Initializer","externalID":"s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_Sitcfc","role":"symbol","title":"init(allocator:maxDynamicTableSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"NIOHPACK"}],"symbolKind":"init"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Creates a new decoder"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ByteBufferAllocator","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder/init(allocator:maxDynamicTableSize:)":{"title":"init(allocator:maxDynamicTableSize:)","url":"\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:)","abstract":[{"type":"text","text":"Creates a new decoder"}],"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKDecoder","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"code":"HPACKDecoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"decode indexed HTTP headers, along with Huffman-encoded strings and","type":"text"},{"text":" ","type":"text"},{"text":"HPACK-encoded integers.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder","navigatorTitle":[{"text":"HPACKDecoder","kind":"identifier"}],"url":"\/documentation\/niohpack\/hpackdecoder","title":"HPACKDecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","kind":"symbol","title":"NIOHPACK","role":"collection","url":"\/documentation\/niohpack","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","abstract":[]}}}