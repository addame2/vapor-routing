{"abstract":[{"type":"text","text":"Creates a new decoder"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:maxHeaderListSize:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxHeaderListSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"maxDynamicTableSize","content":[{"type":"paragraph","inlineContent":[{"text":"Maximum allowed size of the dynamic header table.","type":"text"}]}]},{"name":"maxHeaderListSize","content":[{"type":"paragraph","inlineContent":[{"text":"Maximum allowed size of a decoded header list.","type":"text"}]}]}]}],"metadata":{"modules":[{"name":"NIOHPACK"}],"roleHeading":"Initializer","title":"init(allocator:maxDynamicTableSize:maxHeaderListSize:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxHeaderListSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"externalID":"s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSize0d10HeaderListG0AC7NIOCore19ByteBufferAllocatorV_S2itcfc","role":"symbol","symbolKind":"init"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:maxheaderlistsize:)"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder/init(allocator:maxDynamicTableSize:maxHeaderListSize:)":{"abstract":[{"text":"Creates a new decoder","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxHeaderListSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:maxHeaderListSize:)","role":"symbol","kind":"symbol","url":"\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:maxheaderlistsize:)","title":"init(allocator:maxDynamicTableSize:maxHeaderListSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","kind":"symbol","title":"NIOHPACK","role":"collection","url":"\/documentation\/niohpack","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKDecoder","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"code":"HPACKDecoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"decode indexed HTTP headers, along with Huffman-encoded strings and","type":"text"},{"text":" ","type":"text"},{"text":"HPACK-encoded integers.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder","navigatorTitle":[{"text":"HPACKDecoder","kind":"identifier"}],"url":"\/documentation\/niohpack\/hpackdecoder","title":"HPACKDecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ByteBufferAllocator","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]}}}