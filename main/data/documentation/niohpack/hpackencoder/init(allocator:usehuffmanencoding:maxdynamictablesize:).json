{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializer and returns a new HPACK encoder."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"useHuffmanEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true, ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" = HPACKEncoder.defaultDynamicTableSize)","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"allocator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"s."}]}]},{"name":"maxDynamicTableSize","content":[{"inlineContent":[{"type":"text","text":"An initial maximum size for the encoder’s dynamic header table."}],"type":"paragraph"}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackencoder\/init(allocator:usehuffmanencoding:maxdynamictablesize:)"]}],"metadata":{"externalID":"s:8NIOHPACK12HPACKEncoderV9allocator18useHuffmanEncoding19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_SbSitcfc","roleHeading":"Initializer","modules":[{"name":"NIOHPACK"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"useHuffmanEncoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"symbolKind":"init","title":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)":{"url":"\/documentation\/niohpack\/hpackencoder\/init(allocator:usehuffmanencoding:maxdynamictablesize:)","type":"topic","title":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":", ","kind":"text"},{"text":"useHuffmanEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","kind":"symbol","abstract":[{"type":"text","text":"Initializer and returns a new HPACK encoder."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ByteBufferAllocator","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"role":"symbol","type":"topic","abstract":[{"text":"An ","type":"text"},{"code":"HPACKEncoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"encode HTTP headers to an internal byte buffer.","type":"text"}],"title":"HPACKEncoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"url":"\/documentation\/niohpack\/hpackencoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"type":"topic","kind":"symbol","title":"NIOHPACK","role":"collection","url":"\/documentation\/niohpack","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","abstract":[]}}}