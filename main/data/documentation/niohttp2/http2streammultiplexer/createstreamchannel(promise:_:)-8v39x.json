{"variants":[{"paths":["\/documentation\/niohttp2\/http2streammultiplexer\/createstreamchannel(promise:_:)-8v39x"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Create a new ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" for a new stream initiated by this peer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createStreamChannel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":">?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"streamStateInitializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"promise","content":[{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be succeeded with the new activated channel, or"},{"type":"text","text":" "},{"type":"text","text":"failed if an error occurs."}],"type":"paragraph"}]},{"name":"streamStateInitializer","content":[{"inlineContent":[{"type":"text","text":"A callback that will be invoked to allow you to configure the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for the newly created channel."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is intended for situations where the NIO application is initiating the stream. For clients,","type":"text"},{"text":" ","type":"text"},{"text":"this is for all request streams. For servers, this is for pushed streams.","type":"text"}]}]}],"deprecationSummary":[{"inlineContent":[{"text":"The signature of 'streamStateInitializer' has changed to '(Channel) -> EventLoopFuture<Void>'","type":"text"}],"type":"paragraph"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer\/createStreamChannel(promise:_:)-8v39x","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createStreamChannel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":">?, (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"modules":[{"name":"NIOHTTP2"}],"extendedModule":"NIOHTTP2","title":"createStreamChannel(promise:_:)","externalID":"s:8NIOHTTP222HTTP2StreamMultiplexerC06createC7Channel7promise_y7NIOCore16EventLoopPromiseVyAF0F0_pGSg_AF0iJ6FutureCyytGAfI_p_AA0bC2IDVtctF","roleHeading":"Instance Method","platforms":[],"role":"symbol","symbolKind":"method"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"url":"\/documentation\/niohttp2","title":"NIOHTTP2","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","title":"Channel","abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer/createStreamChannel(promise:_:)-8v39x":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createStreamChannel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":">?, (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"HTTP2StreamID","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)","kind":"text"}],"kind":"symbol","abstract":[{"text":"Create a new ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" for a new stream initiated by this peer.","type":"text"}],"title":"createStreamChannel(promise:_:)","url":"\/documentation\/niohttp2\/http2streammultiplexer\/createstreamchannel(promise:_:)-8v39x","type":"topic","role":"symbol","deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer\/createStreamChannel(promise:_:)-8v39x"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"abstract":[{"text":"A promise to provide a result later.","type":"text"}],"title":"EventLoopPromise","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopPromise","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/eventlooppromise"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamID":{"kind":"symbol","title":"HTTP2StreamID","abstract":[{"type":"text","text":"A single HTTP\/2 stream ID."}],"navigatorTitle":[{"kind":"identifier","text":"HTTP2StreamID"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","url":"\/documentation\/niohttp2\/http2streamid","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2StreamID"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"navigatorTitle":[{"kind":"identifier","text":"HTTP2StreamMultiplexer"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A channel handler that creates a child channel for each HTTP\/2 stream."}],"title":"HTTP2StreamMultiplexer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2StreamMultiplexer"}],"url":"\/documentation\/niohttp2\/http2streammultiplexer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer"}}}