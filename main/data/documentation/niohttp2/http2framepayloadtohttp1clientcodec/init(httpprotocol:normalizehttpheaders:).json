{"abstract":[{"text":"Initializes a ","type":"text"},{"type":"codeVoice","code":"HTTP2PayloadToHTTP1ClientCodec"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"HTTPProtocol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true)"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"httpProtocol","content":[{"inlineContent":[{"type":"text","text":"The protocol (usually "},{"type":"codeVoice","code":"\"http\""},{"type":"text","text":" or "},{"type":"codeVoice","code":"\"https\""},{"type":"text","text":" that is used)."}],"type":"paragraph"}]},{"name":"normalizeHTTPHeaders","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether to automatically normalize the HTTP headers to be suitable for HTTP\/2."},{"type":"text","text":" "},{"type":"text","text":"The normalization will for example lower-case all header names (as required by the"},{"type":"text","text":" "},{"type":"text","text":"HTTP\/2 spec) and remove headers that are unsuitable for HTTP\/2 such as"},{"type":"text","text":" "},{"type":"text","text":"headers related to HTTP\/1â€™s keep-alive behaviour. Unless you are sure that all your"},{"type":"text","text":" "},{"type":"text","text":"headers conform to the HTTP\/2 spec, you should leave this parameter set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec"]]},"sections":[],"metadata":{"externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12httpProtocol20normalizeHTTPHeadersA2C12HTTPProtocolO_Sbtcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC"},{"text":".","kind":"text"},{"text":"HTTPProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO"},{"text":", ","kind":"text"},{"text":"normalizeHTTPHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol","title":"init(httpProtocol:normalizeHTTPHeaders:)","modules":[{"name":"NIOHTTP2"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"url":"\/documentation\/niohttp2","title":"NIOHTTP2","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/init(httpProtocol:normalizeHTTPHeaders:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","text":"HTTP2FramePayloadToHTTP1ClientCodec"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)","kind":"symbol","type":"topic","abstract":[{"text":"Initializes a ","type":"text"},{"type":"codeVoice","code":"HTTP2PayloadToHTTP1ClientCodec"},{"type":"text","text":"."}],"title":"init(httpProtocol:normalizeHTTPHeaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec":{"abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","type":"topic","title":"HTTP2FramePayloadToHTTP1ClientCodec","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/HTTPProtocol":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","navigatorTitle":[{"kind":"identifier","text":"HTTPProtocol"}],"type":"topic","abstract":[{"type":"text","text":"The HTTP protocol scheme being used on this connection."}],"kind":"symbol","title":"HTTP2FramePayloadToHTTP1ClientCodec.HTTPProtocol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/httpprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPProtocol"}]}}}