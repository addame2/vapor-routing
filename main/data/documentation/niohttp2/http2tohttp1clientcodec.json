{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut"]},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"text":"and vice versa, for use on the client side.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2ToHTTP1ClientCodec","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This channel handler should be used alongside the ","type":"text"},{"type":"codeVoice","code":"HTTP2StreamMultiplexer"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed","type":"text"},{"text":" ","type":"text"},{"text":"connection.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"kind":"symbol","metadata":{"title":"HTTP2ToHTTP1ClientCodec","symbolKind":"class","modules":[{"name":"NIOHTTP2"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2ToHTTP1ClientCodec","kind":"identifier"}],"externalID":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","platforms":[],"navigatorTitle":[{"text":"HTTP2ToHTTP1ClientCodec","kind":"identifier"}],"roleHeading":"Class","role":"symbol"},"variants":[{"paths":["\/documentation\/niohttp2\/http2tohttp1clientcodec"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/write(context:data:promise:)":{"kind":"symbol","title":"write(context:data:promise:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/write(context:data:promise:)","deprecated":true,"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/HTTPProtocol":{"role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/httpprotocol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"HTTPProtocol"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","title":"HTTP2ToHTTP1ClientCodec.HTTPProtocol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPProtocol"}],"kind":"symbol","abstract":[{"type":"text","text":"The HTTP protocol scheme being used on this connection."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"title":"ChannelInboundHandler","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","role":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:)":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","text":"HTTP2ToHTTP1ClientCodec","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola","text":"HTTPProtocol","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Initializes a ","type":"text"},{"code":"HTTP2ToHTTP1ClientCodec","type":"codeVoice"},{"text":" for the given ","type":"text"},{"code":"HTTP2StreamID","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","deprecated":true,"title":"init(streamID:httpProtocol:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:normalizeHTTPHeaders:)":{"role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:normalizehttpheaders:)","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)","title":"init(streamID:httpProtocol:normalizeHTTPHeaders:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","text":"HTTP2ToHTTP1ClientCodec"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"HTTP2ToHTTP1ClientCodec"},{"type":"text","text":" for the given "},{"type":"codeVoice","code":"HTTP2StreamID"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundIn":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundin","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"title":"HTTP2ToHTTP1ClientCodec.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","deprecated":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec":{"role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","title":"HTTP2ToHTTP1ClientCodec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"kind":"symbol","abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"url":"\/documentation\/niohttp2","title":"NIOHTTP2","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","abstract":[],"kind":"article","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelinboundhandler-implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelOutboundHandler-Implementations":{"title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/channelRead(context:data:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","role":"symbol","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"deprecated":true,"title":"channelRead(context:data:)","kind":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelread(context:data:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelHandler-Implementations":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelhandler-implementations","kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","type":"topic","title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"title":"HTTP2ToHTTP1ClientCodec.InboundOut","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","role":"symbol","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","role":"symbol","abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ChannelOutboundHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundOut":{"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"deprecated":true,"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"title":"HTTP2ToHTTP1ClientCodec.OutboundOut","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundout","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundIn":{"title":"HTTP2ToHTTP1ClientCodec.OutboundIn","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","kind":"symbol","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"type":"topic","deprecated":true,"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundin","role":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]}}}