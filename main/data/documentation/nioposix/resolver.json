{"variants":[{"paths":["\/documentation\/nioposix\/resolver"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Resolver","externalID":"s:8NIOPosix8ResolverP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resolver"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"Resolver"}],"modules":[{"name":"NIOPosix"}],"symbolKind":"protocol"},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/cancelQueries()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAAAAQuery(host:port:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAQuery(host:port:)"],"title":"Instance Methods"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolver","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"In general the rules for the resolver are relatively broad: there are no specific requirements on how","type":"text"},{"text":" ","type":"text"},{"text":"it operates. However, the rest of the code assumes that it obeys RFC 6724, particularly section 6 on","type":"text"},{"text":" ","type":"text"},{"text":"ordering returned addresses. That is, the IPv6 and IPv4 responses should be ordered by the destination","type":"text"},{"type":"text","text":" "},{"type":"text","text":"address ordering rules from that RFC. This specification is widely implemented by getaddrinfo"},{"type":"text","text":" "},{"type":"text","text":"implementations, so any implementation based on getaddrinfo will work just fine. In the future, a custom"},{"type":"text","text":" "},{"type":"text","text":"resolver will need also to implement these sorting rules."}]}]}],"abstract":[{"text":"A protocol that covers an object that does DNS lookups.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/initiateAAAAQuery(host:port:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initiateAAAAQuery","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"]>"}],"required":true,"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initiate a DNS AAAA query for a given host."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAAAAQuery(host:port:)","title":"initiateAAAAQuery(host:port:)","url":"\/documentation\/nioposix\/resolver\/initiateaaaaquery(host:port:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/cancelQueries()":{"url":"\/documentation\/nioposix\/resolver\/cancelqueries()","kind":"symbol","type":"topic","title":"cancelQueries()","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelQueries"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/cancelQueries()","abstract":[{"type":"text","text":"Cancel all outstanding DNS queries."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver":{"url":"\/documentation\/nioposix\/resolver","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resolver"}],"type":"topic","title":"Resolver","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resolver"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver","abstract":[{"type":"text","text":"A protocol that covers an object that does DNS lookups."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/initiateAQuery(host:port:)":{"url":"\/documentation\/nioposix\/resolver\/initiateaquery(host:port:)","kind":"symbol","type":"topic","title":"initiateAQuery(host:port:)","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initiateAQuery"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<["},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"]>"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAQuery(host:port:)","abstract":[{"type":"text","text":"Initiate a DNS A query for a given host."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"abstract":[],"title":"NIOPosix","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","url":"\/documentation\/nioposix","kind":"symbol"}}}