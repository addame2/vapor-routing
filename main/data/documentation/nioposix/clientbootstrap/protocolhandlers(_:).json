{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" has been called.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handlers"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","text":"ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Per bootstrap, you can only set the ","type":"text"},{"code":"protocolHandlers","type":"codeVoice"},{"text":" once. Typically, ","type":"text"},{"code":"protocolHandlers","type":"codeVoice"},{"text":" are used for the TLS","type":"text"},{"text":" ","type":"text"},{"text":"implementation. Most notably, ","type":"text"},{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":", NIO’s “universal bootstrap” abstraction, uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"protocolHandlers"},{"type":"text","text":" to add the required "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s for many TLS implementations."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"NIOPosix"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"(() -> ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","externalID":"s:8NIOPosix15ClientBootstrapC16protocolHandlersyACXDSay7NIOCore14ChannelHandler_pGycF","symbolKind":"method","title":"protocolHandlers(_:)","role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"url":"\/documentation\/nioposix\/clientbootstrap","navigatorTitle":[{"kind":"identifier","text":"ClientBootstrap"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" when creating network clients."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientBootstrap"}],"title":"ClientBootstrap"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/protocolHandlers(_:)":{"title":"protocolHandlers(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","kind":"symbol","abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" has been called.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"(() -> ["},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","url":"\/documentation\/niocore\/channelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"role":"symbol","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"abstract":[],"title":"NIOPosix","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","url":"\/documentation\/nioposix","kind":"symbol"}}}