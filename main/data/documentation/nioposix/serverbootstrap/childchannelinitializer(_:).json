{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap\/childChannelInitializer(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap"]]},"variants":[{"paths":["\/documentation\/nioposix\/serverbootstrap\/childchannelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"NIOPosix"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childChannelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"childChannelInitializer(_:)","externalID":"s:8NIOPosix15ServerBootstrapC23childChannelInitializeryACXD7NIOCore15EventLoopFutureCyytGAE0E0_pcF","role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childChannelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"initializer"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"style":"warning","type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":" will be invoked once for every accepted connection. Therefore itâ€™s usually the","type":"text"},{"text":" ","type":"text"},{"text":"right choice to instantiate stateful ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s within the closure to make sure they are not","type":"text"},{"text":" ","type":"text"},{"text":"accidentally shared across ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s. There are expert use-cases where stateful handler need to be","type":"text"},{"text":" ","type":"text"},{"text":"shared across ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s in which case the user is responsible to synchronise the state access","type":"text"},{"text":" ","type":"text"},{"text":"appropriately.","type":"text"}],"type":"paragraph"}]},{"inlineContent":[{"text":"The accepted ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will operate on ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" as inbound and ","type":"text"},{"code":"IOData","type":"codeVoice"},{"text":" as outbound messages.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Initialize the accepted "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"s with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Note that if the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" fails then the error will be"},{"type":"text","text":" "},{"text":"fired in the ","type":"text"},{"inlineContent":[{"type":"text","text":"parent"}],"type":"emphasis"},{"text":" channel.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","title":"Channel","abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ServerBootstrap/childChannelInitializer(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap\/childChannelInitializer(_:)","title":"childChannelInitializer(_:)","type":"topic","url":"\/documentation\/nioposix\/serverbootstrap\/childchannelinitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childChannelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Initialize the accepted "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"s with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Note that if the ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":" fails then the error will be","type":"text"},{"text":" ","type":"text"},{"text":"fired in the ","type":"text"},{"inlineContent":[{"text":"parent","type":"text"}],"type":"emphasis"},{"text":" channel.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ServerBootstrap":{"kind":"symbol","url":"\/documentation\/nioposix\/serverbootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ServerBootstrap","title":"ServerBootstrap","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ServerBootstrap"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"ServerSocketChannel"},{"text":" when creating network servers.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerBootstrap"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerBootstrap"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"abstract":[],"title":"NIOPosix","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","url":"\/documentation\/nioposix","kind":"symbol"}}}