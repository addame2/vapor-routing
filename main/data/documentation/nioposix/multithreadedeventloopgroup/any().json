{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()"},"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC3any7NIOCore0dE0_pyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"title":"any()","modules":[{"name":"NIOPosix"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" if we are on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" of this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"text":" instance.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup\/any()"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"title":"MultiThreadedEventLoopGroup","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","role":"symbol","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"title":"EventLoop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"abstract":[],"title":"NIOPosix","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","url":"\/documentation\/nioposix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"role":"symbol","kind":"symbol","title":"any()","abstract":[{"type":"text","text":"Returns the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" if we are on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" of this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" instance."}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","type":"topic"}}}