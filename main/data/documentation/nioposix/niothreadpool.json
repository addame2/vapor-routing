{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool"},"sections":[],"metadata":{"modules":[{"name":"NIOPosix"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOThreadPool","kind":"identifier"}],"symbolKind":"class","navigatorTitle":[{"text":"NIOThreadPool","kind":"identifier"}],"externalID":"s:8NIOPosix13NIOThreadPoolC","roleHeading":"Class","title":"NIOThreadPool"},"abstract":[{"text":"A thread pool that should be used if some (kernel thread) blocking work","type":"text"},{"text":" ","type":"text"},{"text":"needs to be performed for which no non-blocking API exists.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOThreadPool","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"When using NIO it is crucial not to block any of the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s as that","type":"text"},{"text":" ","type":"text"},{"text":"leads to slow downs or stalls of arbitrary other work. Unfortunately though","type":"text"},{"text":" ","type":"text"},{"text":"there are tasks that applications need to achieve for which no non-blocking","type":"text"},{"text":" ","type":"text"},{"text":"APIs exist. In those cases ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" can be used but should be","type":"text"},{"text":" ","type":"text"},{"text":"treated as a last resort.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"text":"The prime example for missing non-blocking APIs is file IO on UNIX.","type":"text"},{"text":" ","type":"text"},{"text":"The OS does not provide a usable and truly non-blocking API but with","type":"text"},{"text":" ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" NIO provides a high-level API for file IO that should","type":"text"},{"text":" ","type":"text"},{"text":"be preferred to running blocking file IO system calls directly on","type":"text"},{"text":" ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":". Under the covers ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" will use","type":"text"},{"text":" ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" on all currently supported platforms though.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem"],"title":"Type Aliases"},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState"]}],"variants":[{"paths":["\/documentation\/nioposix\/niothreadpool"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"abstract":[],"title":"NIOPosix","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","type":"topic","url":"\/documentation\/nioposix","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItemState":{"role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/workitemstate","type":"topic","title":"NIOThreadPool.WorkItemState","abstract":[{"text":"The state of the ","type":"text"},{"type":"codeVoice","code":"WorkItem"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkItemState"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState","navigatorTitle":[{"kind":"identifier","text":"WorkItemState"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool":{"navigatorTitle":[{"text":"NIOThreadPool","kind":"identifier"}],"url":"\/documentation\/nioposix\/niothreadpool","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool","abstract":[{"text":"A thread pool that should be used if some (kernel thread) blocking work","type":"text"},{"text":" ","type":"text"},{"text":"needs to be performed for which no non-blocking API exists.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NIOThreadPool","kind":"identifier"}],"type":"topic","title":"NIOThreadPool","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/init(numberOfThreads:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"numberOfThreads"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)","abstract":[{"text":"Initialize a ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" thread pool with ","type":"text"},{"code":"numberOfThreads","type":"codeVoice"},{"type":"text","text":" threads."}],"type":"topic","role":"symbol","title":"init(numberOfThreads:)","url":"\/documentation\/nioposix\/niothreadpool\/init(numberofthreads:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItem":{"navigatorTitle":[{"text":"WorkItem","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem","url":"\/documentation\/nioposix\/niothreadpool\/workitem","type":"topic","title":"NIOThreadPool.WorkItem","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WorkItem","kind":"identifier"}],"abstract":[{"text":"The work that should be done by the ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/runIfActive(eventLoop:_:)":{"abstract":[{"type":"text","text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise."},{"type":"text","text":" "},{"type":"text","text":"The closure will be run on the thread pool so can do blocking work."}],"role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","type":"topic","title":"runIfActive(eventLoop:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(queue:_:)":{"role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(queue:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"title":"shutdownGracefully(queue:_:)","abstract":[{"type":"text","text":"Gracefully shutdown this "},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":". All tasks will be run before shutdown will take place."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/submit(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","url":"\/documentation\/nioposix\/niothreadpool\/submit(_:)","type":"topic","title":"submit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOThreadPool","kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC"},{"text":".","kind":"text"},{"text":"WorkItem","kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC8WorkItema"},{"text":")","kind":"text"}],"abstract":[{"text":"Submit a ","type":"text"},{"code":"WorkItem","type":"codeVoice"},{"text":" to process.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/syncShutdownGracefully()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncShutdownGracefully","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"syncShutdownGracefully()","type":"topic","url":"\/documentation\/nioposix\/niothreadpool\/syncshutdowngracefully()","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(_:)":{"title":"shutdownGracefully(_:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","abstract":[],"url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/start()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","title":"start()","type":"topic","kind":"symbol","abstract":[{"text":"Start the ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" if not already started.","type":"text"}],"role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"()"}]}}}