{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/strictmap(_:_:)"]}],"sections":[],"metadata":{"modules":[{"name":"AsyncKit"}],"role":"symbol","title":"strictMap(_:_:)","roleHeading":"Function","symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Res"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"externalID":"s:8AsyncKit9strictMapyq_SgxSg_q_xKXEtKr0_lF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Res","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"a","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This “baseline”, single-item version of the function is trivially re-expressible using the "},{"type":"codeVoice","code":"??"},{"type":"text","text":" operator or"},{"type":"text","text":" "},{"type":"codeVoice","code":"Optional.map(_:)"},{"type":"text","text":", but this is not the case for any of the other overloads."}]}],"type":"aside","style":"note"}]}],"abstract":[{"type":"text","text":"Given one or more optionals as inputs, checks whether each input is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". If "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" input is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"immediately returned as an overall results. If all of the inputs have values, the "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" callback is invoked"},{"type":"text","text":" "},{"type":"text","text":"with all of the unwrapped values as parameters."}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/strictMap(_:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Res"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/asynckit\/strictmap(_:_:)","abstract":[{"type":"text","text":"Given one or more optionals as inputs, checks whether each input is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". If "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" input is "},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"immediately returned as an overall results. If all of the inputs have values, the ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" callback is invoked","type":"text"},{"text":" ","type":"text"},{"text":"with all of the unwrapped values as parameters.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)","title":"strictMap(_:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","abstract":[],"type":"topic","kind":"symbol","role":"collection"}}}