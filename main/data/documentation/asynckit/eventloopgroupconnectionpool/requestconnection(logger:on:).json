{"metadata":{"roleHeading":"Instance Method","modules":[{"name":"AsyncKit"}],"title":"requestConnection(logger:on:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestConnection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Connection","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:8AsyncKit28EventLoopGroupConnectionPoolC07requestF06logger2on7NIOCore0cD6FutureCy0F0QzG7Logging6LoggerVSg_AG0cD0_pSgtF","role":"symbol"},"abstract":[{"text":"Requests a pooled connection.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestConnection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/Logger","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Connection"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A future containing the requested connection."}],"type":"paragraph"}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"For trace and debug logs.","type":"text"}]}],"name":"logger"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preferred event loop for the new connection."}]}],"name":"eventLoop"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The connection returned by this method should be released when you are finished using it."}],"type":"paragraph"},{"code":["let conn = try pool.requestConnection(...).wait()","defer { pool.releaseConnection(conn) }","\/\/ use the connection"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"See ","type":"text"},{"code":"withConnection(_:)","type":"codeVoice"},{"text":" for a callback-based method that automatically releases the connection.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool\/requestConnection(logger:on:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopgroupconnectionpool\/requestconnection(logger:on:)"]}],"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopGroupConnectionPool/requestConnection(logger:on:)":{"title":"requestConnection(logger:on:)","kind":"symbol","role":"symbol","url":"\/documentation\/asynckit\/eventloopgroupconnectionpool\/requestconnection(logger:on:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool\/requestConnection(logger:on:)","abstract":[{"text":"Requests a pooled connection.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestConnection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Connection","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"title":"AsyncKit","url":"\/documentation\/asynckit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopGroupConnectionPool":{"navigatorTitle":[{"text":"EventLoopGroupConnectionPool","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool","kind":"symbol","title":"EventLoopGroupConnectionPool","role":"symbol","abstract":[{"text":"Holds a collection of connection pools for each ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" on an ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/asynckit\/eventloopgroupconnectionpool","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EventLoopGroupConnectionPool","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Logging/Logger":{"role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" is the central type in ","type":"text"},{"code":"SwiftLog","type":"codeVoice"},{"text":". Its central function is to emit log messages using one of the methods","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/Logger","title":"Logger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Logger","kind":"identifier"}],"navigatorTitle":[{"text":"Logger","kind":"identifier"}],"type":"topic","url":"\/documentation\/logging\/logger","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"title":"EventLoop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"kind":"symbol"}}}