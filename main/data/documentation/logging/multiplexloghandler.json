{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"],"type":"conformsTo","title":"Conforms To"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/logging\/multiplexloghandler"]}],"abstract":[{"text":"A pseudo-","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"metadata":{"modules":[{"name":"Logging"}],"externalID":"s:7Logging19MultiplexLogHandlerV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"title":"MultiplexLogHandler","role":"symbol","symbolKind":"struct","roleHeading":"Structure"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":3,"anchor":"Effective-LoggerLevel","text":"Effective Logger.Level","type":"heading"},{"inlineContent":[{"text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the","type":"text"},{"text":" ","type":"text"},{"text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level","type":"text"},{"text":" ","type":"text"},{"text":"any log events they might be interested in.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"},{"text":" ","type":"text"},{"text":"If log handler ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" is logging at ","type":"text"},{"code":".debug","type":"codeVoice"},{"text":" level, and log handler ","type":"text"},{"code":"B","type":"codeVoice"},{"text":" is logging at ","type":"text"},{"code":".info","type":"codeVoice"},{"text":" level, the constructed","type":"text"},{"text":" ","type":"text"},{"code":"MultiplexLogHandler([A, B])","type":"codeVoice"},{"text":"’s effective log level will be set to ","type":"text"},{"code":".debug","type":"codeVoice"},{"text":", meaning that debug messages will be","type":"text"},{"text":" ","type":"text"},{"text":"handled by this handler, while only logged by the underlying ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" log handler (since ","type":"text"},{"code":"B","type":"codeVoice"},{"text":"’s log level is ","type":"text"},{"code":".info","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and thus it would not actually log that log message).","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If the log level is ","type":"text"},{"inlineContent":[{"type":"text","text":"set"}],"type":"emphasis"},{"text":" on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" backed by an ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" the log level will apply to ","type":"text"},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying","type":"text"},{"text":" ","type":"text"},{"text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific","type":"text"},{"text":" ","type":"text"},{"text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Effective-LoggerMetadata","text":"Effective Logger.Metadata","type":"heading"},{"inlineContent":[{"text":"Since a ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious.","type":"text"},{"text":" ","type":"text"},{"text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than"},{"type":"text","text":" "},{"type":"text","text":"proxying writes that users made on a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" instance backed by this handler."}],"type":"paragraph"},{"inlineContent":[{"text":"Setting metadata is always proxied through to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"text":" underlying handlers, meaning that if a modification like","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"logger[metadataKey: \"x\"] = \"y\""},{"text":" is made, all underlying log handlers that this multiplex handler was initiated with","type":"text"},{"text":" ","type":"text"},{"text":"will observe this change.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers","type":"text"},{"text":" ","type":"text"},{"text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses","type":"text"},{"text":" ","type":"text"},{"text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s","type":"text"},{"text":" ","type":"text"},{"text":"values are more important than the next handlers values, etc.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"code":"MultiplexLogHandler([handler1, handler2])","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"code":"handler1","type":"codeVoice"},{"type":"text","text":" has metadata values for keys "},{"code":"one","type":"codeVoice"},{"type":"text","text":" and "},{"code":"all","type":"codeVoice"},{"type":"text","text":", and "},{"code":"handler2","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"code":"two","type":"codeVoice"},{"type":"text","text":" and "},{"code":"all","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A query through the multiplex log handler the key "},{"type":"codeVoice","code":"one"},{"type":"text","text":" naturally returns "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":"’s value, and a query for "},{"type":"codeVoice","code":"two"},{"type":"text","text":" "},{"type":"text","text":"naturally returns "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":"’s value. Querying for the key "},{"type":"codeVoice","code":"all"},{"type":"text","text":" will return "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":"’s value, as that handler was indicated"},{"type":"text","text":" "},{"type":"text","text":"“more important” than the second handler. The same rule applies when querying for the "},{"type":"codeVoice","code":"metadata"},{"type":"text","text":" property of the"},{"type":"text","text":" "},{"type":"text","text":"multiplex log handler - it constructs "},{"type":"codeVoice","code":"Metadata"},{"type":"text","text":" uniquing values."}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"title":"LogHandler","kind":"symbol","role":"symbol","url":"\/documentation\/logging\/loghandler","type":"topic","abstract":[{"type":"text","text":"A "},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" is an implementation of a logging backend."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogHandler","kind":"identifier"}],"navigatorTitle":[{"text":"LogHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"url":"\/documentation\/logging\/multiplexloghandler","title":"MultiplexLogHandler","navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","url":"\/documentation\/logging\/multiplexloghandler\/init(_:)","role":"symbol","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"MultiplexLogHandler"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging10LogHandlerP","text":"LogHandler"},{"kind":"text","text":"])"}],"kind":"symbol","type":"topic","title":"init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","url":"\/documentation\/logging\/multiplexloghandler\/loglevel","role":"symbol","abstract":[{"type":"text","text":"Get or set the configured log level."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"logLevel","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier","text":"Level"}],"kind":"symbol","type":"topic","title":"logLevel"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)","role":"symbol","abstract":[{"type":"text","text":"Add, remove, or change the logging metadata."}],"fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"metadataKey","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SD3Keya","kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","preciseIdentifier":"s:SD5Valuea","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","title":"subscript(metadataKey:)"},"doc://co.pointfree.VaporRouting/documentation/Logging":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging","url":"\/documentation\/logging","role":"collection","title":"Logging","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"url":"\/documentation\/logging\/multiplexloghandler\/metadata","role":"symbol","kind":"symbol","title":"metadata","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata","abstract":[{"text":"Get or set the entire metadata storage as a dictionary.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadata"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","role":"collectionGroup","kind":"article","title":"LogHandler Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","abstract":[{"type":"text","text":"This method is called when a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a log message. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"log","kind":"identifier"},{"text":"(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","text":"Level","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:7Logging6LoggerV7MessageV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","title":"log(level:message:metadata:source:file:function:line:)","type":"topic","role":"symbol"}}}