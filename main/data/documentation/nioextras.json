{"sections":[],"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/nioextras"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError"]}],"metadata":{"role":"collection","roleHeading":"Framework","externalID":"NIOExtras","symbolKind":"module","modules":[{"name":"NIOExtras"}],"title":"NIOExtras"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","url":"\/documentation\/nioextras\/niowritepcaphandler","role":"symbol","title":"NIOWritePCAPHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that can write a ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true,"type":"reference"},{"text":" containing the send\/received","type":"text"},{"text":" ","type":"text"},{"text":"data as synthesized TCP packet captures.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer":{"url":"\/documentation\/nioextras\/niopcapringbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","title":"NIOPCAPRingBuffer","type":"topic","abstract":[{"type":"text","text":"Storage for the most recent set of packets captured subject to constraints."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"code":"addFragment","type":"codeVoice"},{"type":"text","text":" as the sink to a "},{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"type":"text","text":" and call "},{"code":"emitPCAP","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"when you wish to get the recorded data."}],"role":"symbol","navigatorTitle":[{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by a fixed number","type":"text"},{"text":" ","type":"text"},{"text":"of bytes. For example, if you received the following four fragmented packets:","type":"text"}],"type":"topic","url":"\/documentation\/nioextras\/fixedlengthframedecoder","kind":"symbol","title":"FixedLengthFrameDecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","navigatorTitle":[{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasErrors":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"NIOExtrasErrors","kind":"identifier"}],"url":"\/documentation\/nioextras\/nioextraserrors","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","kind":"symbol","abstract":[{"type":"text","text":"Errors that are raised in NIOExtras."}],"title":"NIOExtrasErrors","type":"topic","navigatorTitle":[{"text":"NIOExtrasErrors","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOJSONRPCFraming":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOJSONRPCFraming"}],"url":"\/documentation\/nioextras\/niojsonrpcframing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","title":"NIOJSONRPCFraming","navigatorTitle":[{"kind":"identifier","text":"NIOJSONRPCFraming"}],"abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","title":"DebugInboundEventsHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugInboundEventsHandler","kind":"identifier"}],"role":"symbol","abstract":[{"text":"ChannelInboundHandler that prints all inbound events that pass through the pipeline by default,","type":"text"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugOutboundEventsHandler for outbound events.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"DebugInboundEventsHandler","kind":"identifier"}],"url":"\/documentation\/nioextras\/debuginboundeventshandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServerQuiescingHelper"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","url":"\/documentation\/nioextras\/serverquiescinghelper","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}],"role":"symbol","title":"ServerQuiescingHelper","abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and all the child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrepender":{"navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrepender"}],"title":"LengthFieldPrepender","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldPrepender"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","abstract":[{"type":"text","text":"An encoder that takes a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" message and prepends the number of bytes in the message."},{"type":"text","text":" "},{"type":"text","text":"The length field is always the same fixed length specified on construction."},{"type":"text","text":" "},{"type":"text","text":"These bytes contain a binary specification of the message size."}],"role":"symbol","url":"\/documentation\/nioextras\/lengthfieldprepender"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBasedFrameDecoderError":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError","navigatorTitle":[{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}],"url":"\/documentation\/nioextras\/niolengthfieldbasedframedecodererror","abstract":[],"title":"NIOLengthFieldBasedFrameDecoderError","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See DebugInboundEventsHandler for inbound events.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"role":"symbol","title":"DebugOutboundEventsHandler","url":"\/documentation\/nioextras\/debugoutboundeventshandler","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugOutboundEventsHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrependerError":{"navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrependerError"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldPrependerError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","title":"LengthFieldPrependerError","url":"\/documentation\/nioextras\/lengthfieldprependererror","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"abstract":[{"text":"A decoder that splits the received ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" by the number of bytes specified in a fixed length header","type":"text"},{"text":" ","type":"text"},{"text":"contained within the buffer.","type":"text"},{"text":" ","type":"text"},{"text":"For example, if you received the following four fragmented packets:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"},{"type":"text","text":" "},{"type":"text","text":"| A | BC | DEFG | HI |"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"}],"url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","navigatorTitle":[{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","type":"topic","title":"LengthFieldBasedFrameDecoder","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"navigatorTitle":[{"kind":"identifier","text":"RequestResponseHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","role":"symbol","title":"RequestResponseHandler","kind":"symbol","abstract":[{"type":"codeVoice","code":"RequestResponseHandler"},{"type":"text","text":" receives a "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" alongside an "},{"type":"codeVoice","code":"EventLoopPromise<Response>"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" once it’s received from the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"’s inbound"},{"type":"text","text":" "},{"type":"text","text":"side."}],"url":"\/documentation\/nioextras\/requestresponsehandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBitLength":{"title":"NIOLengthFieldBitLength","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOLengthFieldBitLength","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength","kind":"symbol","abstract":[{"text":"An struct to describe the length of a piece of data in bits","type":"text"}],"url":"\/documentation\/nioextras\/niolengthfieldbitlength","role":"symbol","navigatorTitle":[{"text":"NIOLengthFieldBitLength","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","url":"\/documentation\/nioextras","role":"collection","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasError":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOExtrasError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError","title":"NIOExtrasError","role":"symbol","type":"topic","url":"\/documentation\/nioextras\/nioextraserror","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOExtrasError"}]},"https://en.wikipedia.org/wiki/Pcap":{"titleInlineContent":[{"type":"codeVoice","code":".pcap"},{"type":"text","text":" file"}],"type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","title":".pcap file"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","url":"\/documentation\/nioextras\/linebasedframedecoder","role":"symbol","title":"LineBasedFrameDecoder","navigatorTitle":[{"kind":"identifier","text":"LineBasedFrameDecoder"}],"type":"topic","abstract":[{"type":"text","text":"A decoder that splits incoming "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"s around line end"},{"type":"text","text":" "},{"type":"text","text":"character(s) ("},{"code":"'\\n'","type":"codeVoice"},{"type":"text","text":" or "},{"code":"'\\r\\n'","type":"codeVoice"},{"text":").","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LineBasedFrameDecoder"}],"kind":"symbol"}}}