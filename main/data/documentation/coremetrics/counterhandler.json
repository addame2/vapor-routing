{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This type is an implementation detail and should not be used directly, unless implementing your own metrics backend."},{"type":"text","text":" "},{"type":"text","text":"To use the SwiftMetrics API, please refer to the documentation of "},{"type":"codeVoice","code":"Counter"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":1,"text":"Implementation requirements","anchor":"Implementation-requirements"},{"inlineContent":[{"type":"text","text":"To implement your own "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" you should respect a few requirements that are necessary so applications work"},{"type":"text","text":" "},{"type":"text","text":"as expected regardless of the selected "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" implementation."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CounterHandler"},{"type":"text","text":" must be a "},{"type":"codeVoice","code":"class"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/increment(by:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/reset()"]}],"metadata":{"navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"externalID":"s:11CoreMetrics14CounterHandlerP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}],"roleHeading":"Protocol","role":"symbol","title":"CounterHandler","symbolKind":"protocol","modules":[{"name":"CoreMetrics"}]},"variants":[{"paths":["\/documentation\/coremetrics\/counterhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}],"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler"]}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler/increment(by:)":{"required":true,"url":"\/documentation\/coremetrics\/counterhandler\/increment(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"increment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/increment(by:)","title":"increment(by:)","kind":"symbol","role":"symbol","abstract":[{"text":"Increment the counter.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler/reset()":{"required":true,"url":"\/documentation\/coremetrics\/counterhandler\/reset()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/reset()","title":"reset()","kind":"symbol","role":"symbol","abstract":[{"text":"Reset the counter back to zero.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"type":"topic","url":"\/documentation\/coremetrics\/noopmetricshandler","title":"NOOPMetricsHandler","abstract":[{"text":"Ships with the metrics module, used for initial bootstrapping.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NOOPMetricsHandler","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","abstract":[],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/coremetrics","title":"CoreMetrics"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"navigatorTitle":[{"kind":"identifier","text":"CounterHandler"}],"url":"\/documentation\/coremetrics\/counterhandler","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CounterHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","title":"CounterHandler","kind":"symbol","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"}}}