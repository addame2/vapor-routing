{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BytesToString","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for transforming a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"’s UTF-8 output into a more general-purpose string."}]},{"type":"codeListing","syntax":"swift","code":["let line = Prefix { $0 != .init(ascii: \"\\n\") }.map(.string)"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/parsing\/conversion\/string-swift.type.property-9owth"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth"},"abstract":[{"text":"A conversion from ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"metadata":{"roleHeading":"Type Property","title":"string","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ConversionPA2A11ConversionsO13BytesToStringVy_Ss8UTF8ViewVGRszrlE6stringAJvpZ","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToString","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"role":"symbol","title":"PrependableCollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToString":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","isActive":true},{"type":"text","text":" of UTF-8 bytes to a string."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesToString"}],"title":"Conversions.BytesToString","role":"symbol","url":"\/documentation\/parsing\/conversions\/bytestostring","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToString","navigatorTitle":[{"kind":"identifier","text":"BytesToString"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","role":"symbol","title":"ParserPrinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Conversions","kind":"identifier"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"title":"Conversions","type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","role":"symbol","url":"\/documentation\/parsing\/conversions","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"role":"symbol","title":"Conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"url":"\/documentation\/parsing\/conversion"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"title":"string","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","text":"BytesToString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A conversion from "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth"}}}