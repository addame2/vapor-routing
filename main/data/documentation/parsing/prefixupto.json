{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefixupto"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix(upTo:)"},{"type":"text","text":", and uses similar logic under the hood to"},{"type":"text","text":" "},{"type":"text","text":"consume and return input up to a particular subsequence."}]},{"code":["let lineParser = PrefixUpTo(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","try line.parse(&input)  \/\/ \"Hello\"","input                   \/\/ \"\\nworld\\n\""],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","metadata":{"title":"PrefixUpTo","externalID":"s:7Parsing10PrefixUpToV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"role":"symbol","symbolKind":"struct","roleHeading":"Structure"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo":{"url":"\/documentation\/parsing\/prefixupto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"role":"symbol","title":"PrefixUpTo","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/areEquivalent":{"title":"areEquivalent","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/prefixupto\/areequivalent","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/Parser-Implementations":{"url":"\/documentation\/parsing\/prefixupto\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/possibleMatch":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch","title":"possibleMatch","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possibleMatch"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefixupto\/possiblematch","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/prefixupto\/parserprinter-implementations","title":"ParserPrinter Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations","kind":"article","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/init(_:)-9kyot":{"role":"symbol","url":"\/documentation\/parsing\/prefixupto\/init(_:)-9kyot","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","title":"init(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","kind":"symbol","title":"init(_:)","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/init(_:)-8sywj":{"title":"init(_:)","type":"topic","abstract":[],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","url":"\/documentation\/parsing\/prefixupto\/init(_:)-8sywj","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefixupto\/parse(_:)","title":"parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo/init(_:by:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:by:)","kind":"symbol","title":"init(_:by:)","abstract":[]}}}