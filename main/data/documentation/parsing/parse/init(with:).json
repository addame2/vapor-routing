{"abstract":[{"type":"text","text":"An entry point into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"},{"type":"text","text":" syntax."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser builder that will accumulate non-void outputs in a tuple."}]}],"name":"with"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Used to combine the non-void outputs from multiple parsers into a single output by running","type":"text"},{"text":" ","type":"text"},{"text":"each parser in sequence and bundling the results up into a tuple.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the following parser parses a double, skips a comma, and then parses another"},{"type":"text","text":" "},{"type":"text","text":"double before returning a tuple of each double."}]},{"syntax":"swift","code":["let coordinate = Parse {","  Double.parser()","  \",\"","  Double.parser()","}","","try coordinate.parse(\"1,2\")  \/\/ (1.0, 2.0)"],"type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":")"}],"title":"init(with:)","externalID":"s:7Parsing5ParseV4withACyxGxyXE_tcfc","role":"symbol","symbolKind":"init","modules":[{"name":"Parsing"}],"roleHeading":"Initializer"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parse\/init(with:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse/init(with:)":{"abstract":[{"type":"text","text":"An entry point into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"},{"type":"text","text":" syntax."}],"url":"\/documentation\/parsing\/parse\/init(with:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse\/init(with:)","title":"init(with:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"url":"\/documentation\/parsing\/parse"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"}}}