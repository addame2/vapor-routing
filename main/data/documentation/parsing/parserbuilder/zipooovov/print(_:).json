{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV\/ParserPrinter-Implementations"]]},"metadata":{"title":"print(_:)","extendedModule":"Parsing","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzrlE5printyAF6OutputQzKF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipOOOVOVV","modules":[{"name":"Parsing"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","symbolKind":"method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV\/print(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipooovov\/print(_:)"]}],"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A more nebulous value printed from the given output.","type":"text"}]}]},{"kind":"parameters","parameters":[{"name":"output","content":[{"inlineContent":[{"text":"A well-structured piece of data to be printed.","type":"text"}],"type":"paragraph"}]}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOVOV":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovov","navigatorTitle":[{"kind":"identifier","text":"ZipOOOVOV"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOOVOV"}],"kind":"symbol","title":"ParserBuilder.ZipOOOVOV","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOVOV/print(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"}],"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"title":"print(_:)","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipooovov\/print(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV\/print(_:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOVOV/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parserbuilder\/zipooovov\/parserprinter-implementations","type":"topic","kind":"article","title":"ParserPrinter Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOVOV\/ParserPrinter-Implementations","abstract":[]}}}