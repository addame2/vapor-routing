{"kind":"article","variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipoovov\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/ParserPrinter-Implementations"},"sections":[],"topicSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/print(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/print(_:into:)"],"title":"Instance Methods"}],"metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations"},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVOV/eraseToAnyParserPrinter()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/eraseToAnyParserPrinter()","type":"topic","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovov\/erasetoanyparserprinter()","title":"eraseToAnyParserPrinter()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVOV":{"title":"ParserBuilder.ZipOOVOV","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV","navigatorTitle":[{"kind":"identifier","text":"ZipOOVOV"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovov","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVOV"}],"type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVOV/print(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovov\/print(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/print(_:)","title":"print(_:)","role":"symbol","type":"topic","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"_EmptyInitializable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOVOV/print(_:into:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOV\/print(_:into:)","type":"topic","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P4"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P4.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P4.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"print","kind":"identifier"},{"text":"((","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovov\/print(_:into:)","title":"print(_:into:)","kind":"symbol"}}}