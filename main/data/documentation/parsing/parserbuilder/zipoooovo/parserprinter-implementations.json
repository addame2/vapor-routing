{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:into:)"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"ParserPrinter Implementations"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO"]]},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipoooovo\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO/print(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo\/print(_:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"role":"symbol","title":"print(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO/print(_:into:)":{"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P5","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:into:)","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo\/print(_:into:)","title":"print(_:into:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"P0"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P1"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P2"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P3"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P4"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P5"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P0.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P1.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P1.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P2.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P2.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P3.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P3.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P4.Input"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P4.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"P5.Input"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"P4.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOOOVO"}],"title":"ParserBuilder.ZipOOOOVO","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ZipOOOOVO"}],"abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO/eraseToAnyParserPrinter()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"title":"eraseToAnyParserPrinter()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/eraseToAnyParserPrinter()","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo\/erasetoanyparserprinter()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}]}}}