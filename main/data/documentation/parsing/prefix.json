{"sections":[],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","title":"Prefix","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6PrefixV"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-4kn0k","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-548tz","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-70enw","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-7dsyo","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-29h8i","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-2dygj","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-3u32v","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-3efj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-5bxwl","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-x1nu","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-7fzba","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maximum","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minimum","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/predicate"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"paths":["\/documentation\/parsing\/prefix"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix"},{"type":"text","text":", which it uses under the hood to consume a number"},{"type":"text","text":" "},{"type":"text","text":"of elements and return them as output. It can be configured with minimum and maximum lengths,"},{"type":"text","text":" "},{"type":"text","text":"as well as a predicate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, to parse as many numbers off the beginning of a substring:"}]},{"syntax":"swift","type":"codeListing","code":["var input = \"123 hello world\"[...]","try Prefix { $0.isNumber }.parse(&input)  \/\/ \"123\"","input                                     \/\/ \" Hello world\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you wanted this parser to fail if "},{"inlineContent":[{"text":"no","type":"text"}],"type":"emphasis"},{"type":"text","text":" numbers are consumed, you could introduce a minimum"},{"type":"text","text":" "},{"type":"text","text":"length."}]},{"syntax":"swift","type":"codeListing","code":["var input = \"No numbers here\"[...]","try Prefix(1...) { $0.isNumber }.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | No numbers here","\/\/   | ^ expected 1 element satisfying predicate"]},{"type":"paragraph","inlineContent":[{"text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and","type":"text"},{"text":" ","type":"text"},{"text":"maximum lengths provided:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var input = \"Lorem ipsum dolor\"[...]","try Prefix(2).parse(&input)  \/\/ \"Lo\"","input                        \/\/ \"rem ipsum dolor\""]},{"level":2,"type":"heading","anchor":"Printer","text":"Printer"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix"},{"type":"text","text":" is also a printer when its "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" generic conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"such as "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UTF8View"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["Prefix { $0 != \",\" }.print(\"Hello World\") \/\/ \"Hello World\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It fails to print if the collection being printed does not meet the "},{"type":"codeVoice","code":"minLength"},{"type":"text","text":" and "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" "},{"type":"text","text":"requirements, or if the predicate provided is not satisfied on every element of the collection:"}]},{"syntax":"swift","type":"codeListing","code":["Prefix { $0 != \",\" }.print(\"Hello, World\")","\/\/ An error was thrown and was not caught"]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/maxLength":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maxLength","url":"\/documentation\/parsing\/prefix\/maxlength","abstract":[],"role":"symbol","deprecated":true,"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"maxLength"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-472tv":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","kind":"symbol","type":"topic","title":"init(_:while:)","role":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-472tv","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"role":"symbol","title":"PrependableCollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/Parser-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"Parser Implementations","url":"\/documentation\/parsing\/prefix\/parser-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/Parser-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/parse(_:)","url":"\/documentation\/parsing\/prefix\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","kind":"symbol","title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-548tz":{"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-548tz","deprecated":true,"type":"topic","title":"init(maxLength:while:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-548tz","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/maximum":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maximum","url":"\/documentation\/parsing\/prefix\/maximum","abstract":[],"role":"symbol","kind":"symbol","title":"maximum"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-5r6r0":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"init(while:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefix\/init(while:)-5r6r0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier","text":"UTF8View"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-3efj0":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-3efj0","url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-3efj0","abstract":[],"role":"symbol","deprecated":true,"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(minLength:while:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-3u32v":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-3u32v","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-3u32v","deprecated":true,"abstract":[],"type":"topic","title":"init(minLength:maxLength:while:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/ParserPrinter-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/ParserPrinter-Implementations","type":"topic","kind":"article","abstract":[],"url":"\/documentation\/parsing\/prefix\/parserprinter-implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-2dygj":{"abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-2dygj","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-2dygj","title":"init(minLength:maxLength:while:)","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-5bxwl":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","abstract":[],"type":"topic","title":"init(minLength:while:)","url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-5bxwl","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-5bxwl","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-7dsyo":{"deprecated":true,"kind":"symbol","title":"init(maxLength:while:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-7dsyo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-7dsyo","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-70enw":{"type":"topic","title":"init(maxLength:while:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-70enw","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-70enw","deprecated":true,"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-29h8i":{"title":"init(minLength:maxLength:while:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Ss7Elementa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"deprecated":true,"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-29h8i","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-29h8i","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-x1nu":{"title":"init(minLength:while:)","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-x1nu","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-x1nu","type":"topic","kind":"symbol","deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Ss7Elementa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-4kn0k":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[],"kind":"symbol","title":"init(_:while:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-4kn0k","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4kn0k","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-8u42b":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix\/init(while:)-8u42b","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(while:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/minLength":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minLength","type":"topic","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"minLength","url":"\/documentation\/parsing\/prefix\/minlength","abstract":[],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-7fzba":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(while:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-7fzba","url":"\/documentation\/parsing\/prefix\/init(while:)-7fzba"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-99fro":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro","title":"init(_:while:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss7Elementa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-99fro","type":"topic","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/minimum":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"minimum","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minimum","url":"\/documentation\/parsing\/prefix\/minimum"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/predicate":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"predicate","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"title":"predicate","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/predicate","url":"\/documentation\/parsing\/prefix\/predicate"}}}