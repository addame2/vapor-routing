{"metadata":{"externalID":"s:7Parsing5FirstV","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"First"}],"roleHeading":"Structure","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"role":"symbol","title":"First"},"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"This parser is named after ","type":"text"},{"type":"codeVoice","code":"Sequence.first"},{"text":", and attempts to parse the first element from a","type":"text"},{"text":" ","type":"text"},{"text":"collection of input by calling this property under the hood.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, it can parse the leading character off a substring:","type":"text"}],"type":"paragraph"},{"code":["var input = \"Hello\"[...]","try First().parse(&input)  \/\/ \"H\"","input                      \/\/ \"ello\""],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This parser fails if the input collection is empty:"}],"type":"paragraph"},{"code":["input = \"\"","try First().parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 |","\/\/   | ^ expected element"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"paths":["\/documentation\/parsing\/first"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-7nnzb":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","abstract":[],"type":"topic","url":"\/documentation\/parsing\/first\/init()-7nnzb","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"init()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations","abstract":[],"type":"topic","url":"\/documentation\/parsing\/first\/parserprinter-implementations","role":"collectionGroup","title":"ParserPrinter Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/first","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"role":"symbol","title":"First","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-9rmtu":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"type":"topic","url":"\/documentation\/parsing\/first\/init()-9rmtu","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"init()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-1y770":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"type":"topic","url":"\/documentation\/parsing\/first\/init()-1y770","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"init()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","abstract":[],"type":"topic","url":"\/documentation\/parsing\/first\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/parse(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","url":"\/documentation\/parsing\/first\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"role":"symbol","title":"parse(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"}}}