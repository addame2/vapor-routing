{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"second","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Conditional","preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO","text":"Conditional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"code":["OneOf {","  if useLegacyParser {","    LegacyParser()","  } else {","    NewParser()","  }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"title":"buildEither(second:)","symbolKind":"method","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"second","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Conditional","preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TrueParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"FalseParser"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}],"roleHeading":"Type Method","externalID":"s:7Parsing12OneOfBuilderO11buildEither6secondAA7ParsersO11ConditionalOy_xq_Gq__tAA6ParserRzAaKR_5InputQy_ALRtz6OutputQy_AORtzr0_lFZ"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/buildEither(second:)"},"abstract":[{"text":"Provides support for ","type":"text"},{"code":"if","type":"codeVoice"},{"text":"-","type":"text"},{"code":"else","type":"codeVoice"},{"type":"text","text":" statements in "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","isActive":true},{"type":"text","text":" blocks, producing a"},{"type":"text","text":" "},{"type":"text","text":"conditional parser for the "},{"type":"codeVoice","code":"if"},{"type":"text","text":" branch."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder"]]},"variants":[{"paths":["\/documentation\/parsing\/oneofbuilder\/buildeither(second:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/Conditional":{"type":"topic","title":"Parsers.Conditional","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/Conditional","role":"symbol","abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/conditional","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/buildEither(second:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"TrueParser"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"FalseParser"},{"kind":"text","text":">("},{"kind":"externalParam","text":"second"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FalseParser"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Conditional","preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TrueParser"},{"kind":"text","text":", "},{"text":"FalseParser","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/oneofbuilder\/buildeither(second:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/buildEither(second:)","abstract":[{"text":"Provides support for ","type":"text"},{"code":"if","type":"codeVoice"},{"text":"-","type":"text"},{"code":"else","type":"codeVoice"},{"text":" statements in ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","isActive":true,"type":"reference"},{"text":" blocks, producing a","type":"text"},{"text":" ","type":"text"},{"text":"conditional parser for the ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" branch.","type":"text"}],"title":"buildEither(second:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/oneofbuilder","title":"OneOfBuilder","type":"topic","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs each parser in the closure, one after another, till one succeeds with an output.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"}}}