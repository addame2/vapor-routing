{"kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"variants":[{"paths":["\/documentation\/parsing\/rest"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"syntax":"swift","code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""],"type":"codeListing"},{"inlineContent":[{"text":"This parser fails if there is no input to consume:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to allow for the possibility of an empty remaining input you can use the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","isActive":true,"type":"reference"},{"text":" parser to parse an optional output value, or the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","isActive":true,"type":"reference"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"to coalesce the error into a default output value.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"navigatorTitle":[{"text":"Rest","kind":"identifier"}],"modules":[{"name":"Parsing"}],"roleHeading":"Structure","role":"symbol","title":"Rest","externalID":"s:7Parsing4RestV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-3wugv":{"kind":"symbol","url":"\/documentation\/parsing\/rest\/init()-3wugv","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","abstract":[],"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/rest\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-41jf5":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/rest\/init()-41jf5","abstract":[],"role":"symbol","title":"init()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"title":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Rest","url":"\/documentation\/parsing\/rest","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"role":"symbol","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"title":"Optionally","url":"\/documentation\/parsing\/optionally","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[],"title":"Parsing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/replaceError(with:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/rest\/replaceerror(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol","title":"replaceError(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","title":"ParserPrinter","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/Parser-Implementations":{"kind":"article","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/rest\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-9bc09":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/rest\/init()-9bc09","abstract":[],"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations","kind":"article","type":"topic","url":"\/documentation\/parsing\/rest\/parserprinter-implementations","abstract":[],"role":"collectionGroup","title":"ParserPrinter Implementations"}}}