{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataDecoder"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataDecoder\/decode(_:from:boundary:)-647am","interfaceLanguage":"swift"},"abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" item from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" using the supplied boundary.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decodable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"buffer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundary"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An instance of the decoded type "},{"type":"codeVoice","code":"D"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Generic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type."}],"type":"paragraph"}],"name":"decodable"},{"content":[{"inlineContent":[{"type":"text","text":"Data to decode."}],"type":"paragraph"}],"name":"data"},{"content":[{"inlineContent":[{"text":"Multipart boundary to used in the decoding.","type":"text"}],"type":"paragraph"}],"name":"boundary"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"code":["let foo = try FormDataDecoder().decode(Foo.self, from: data, boundary: \"123\")"],"syntax":null,"type":"codeListing"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Any errors decoding the model with ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" or parsing the data.","type":"text"}]}]}]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundary"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"D"}],"role":"symbol","symbolKind":"method","modules":[{"name":"MultipartKit"}],"title":"decode(_:from:boundary:)","externalID":"s:12MultipartKit15FormDataDecoderV6decode_4from8boundaryxxm_7NIOCore10ByteBufferVSStKSeRzlF","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/multipartkit\/formdatadecoder\/decode(_:from:boundary:)-647am"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/MultipartKit":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","title":"MultipartKit","type":"topic","url":"\/documentation\/multipartkit","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/MultipartKit/FormDataDecoder/decode(_:from:boundary:)-647am":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataDecoder\/decode(_:from:boundary:)-647am","url":"\/documentation\/multipartkit\/formdatadecoder\/decode(_:from:boundary:)-647am","title":"decode(_:from:boundary:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Decodes a "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" item from "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" using the supplied boundary."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":", ","kind":"text"},{"text":"boundary","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"D","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/MultipartKit/FormDataDecoder":{"abstract":[{"type":"text","text":"Decodes "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types from "},{"type":"codeVoice","code":"multipart\/form-data"},{"type":"text","text":" encoded "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"FormDataDecoder"}],"title":"FormDataDecoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormDataDecoder"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataDecoder","url":"\/documentation\/multipartkit\/formdatadecoder","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"}}}