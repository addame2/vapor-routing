{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/syncOperations"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-352i2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-7wa0e","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2fmmt","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2s3d9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-6qm2j","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-9cxep","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/close(mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-2u7u9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-9ow8y","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-2zwp1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-7xmo","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-3lr76","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-5v7xj","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelActive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRead(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/flush()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/handler(type:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/read()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/register(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-4alhd","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-8mrfs","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-2dhfw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-9c4qg","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-1v5di","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-3n54r","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/write(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/writeAndFlush(_:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/CustomDebugStringConvertible-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"externalID":"s:7NIOCore15ChannelPipelineC","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"roleHeading":"Class","modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"class"},"kind":"symbol","abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"Creation-of-a-pipeline","text":"Creation of a pipeline","level":1,"type":"heading"},{"inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has its own "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" and it is created automatically when a new "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is created."}],"type":"paragraph"},{"anchor":"How-an-event-flows-in-a-pipeline","text":"How an event flows in a pipeline","level":1,"type":"heading"},{"inlineContent":[{"text":"The following diagram describes how I\/O events are typically processed by ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"An I\/O event is handled by either a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and is forwarded to the next handler in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" by calling the event propagation methods defined in","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", such as ","type":"text"},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["                                                   I\/O Request","                                                   via `Channel` or","                                                   `ChannelHandlerContext`","                                                     |"," +---------------------------------------------------+---------------+"," |                           ChannelPipeline         |               |"," |                                TAIL              \\|\/              |"," |    +---------------------+            +-----------+----------+    |"," |    | Inbound Handler  N  |            | Outbound Handler  1  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler N-1 |            | Outbound Handler  2  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  .               |"," |               .                                   .               |"," | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()|"," |        [ method call]                       [method call]         |"," |               .                                   .               |"," |               .                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  2  |            | Outbound Handler M-1 |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  1  |            | Outbound Handler  M  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\             HEAD                 |               |"," +---------------+-----------------------------------+---------------+","                 |                                  \\|\/"," +---------------+-----------------------------------+---------------+"," |               |                                   |               |"," |       [ Socket.read ]                    [ Socket.write ]         |"," |                                                                   |"," |  SwiftNIO Internal I\/O Threads (Transport Implementation)         |"," +-------------------------------------------------------------------+"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"An inbound event is handled by the inbound handlers in the head-to-tail direction as shown on the left side of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. An inbound handler usually handles the inbound data generated by the I\/O thread on the bottom of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. The inbound data is often read from a remote peer via the actual input operation such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Socket.read"},{"type":"text","text":". If an inbound event goes beyond the tail inbound handler, it is discarded"},{"type":"text","text":" "},{"type":"text","text":"silently, or logged if it needs your attention."}],"type":"paragraph"},{"inlineContent":[{"text":"An outbound event is handled by the outbound handlers in the tail-to-head direction as shown on the right side of the","type":"text"},{"text":" ","type":"text"},{"text":"diagram. An outbound handler usually generates or transforms the outbound traffic such as write requests.","type":"text"},{"text":" ","type":"text"},{"text":"If an outbound event goes beyond the head outbound handler, it is handled by an I\/O thread associated with the","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". The I\/O thread often performs the actual output operation such as ","type":"text"},{"code":"Socket.write","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, let us assume that we created the following pipeline:"}],"type":"paragraph"},{"syntax":null,"code":["ChannelPipeline p = ...","let future = p.add(name: \"1\", handler: InboundHandlerA()).flatMap {","  p.add(name: \"2\", handler: InboundHandlerB())","}.flatMap {","  p.add(name: \"3\", handler: OutboundHandlerA())","}.flatMap {","  p.add(name: \"4\", handler: OutboundHandlerB())","}.flatMap {","  p.add(name: \"5\", handler: InboundOutboundHandlerX())","}","\/\/ Handle the future as well ...."],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In the example above, a class whose name starts with "},{"type":"codeVoice","code":"Inbound"},{"type":"text","text":" is an inbound handler."},{"type":"text","text":" "},{"type":"text","text":"A class whose name starts with "},{"type":"codeVoice","code":"Outbound"},{"type":"text","text":" is an outbound handler."}],"type":"paragraph"},{"inlineContent":[{"text":"In the given example configuration, the handler evaluation order is 1, 2, 3, 4, 5 when an event goes inbound.","type":"text"},{"text":" ","type":"text"},{"text":"When an event goes outbound, the order is 5, 4, 3, 2, 1.  On top of this principle, ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" skips","type":"text"},{"text":" ","type":"text"},{"text":"the evaluation of certain handlers to shorten the stack depth:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"3 and 4 don’t implement "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":", and therefore the actual evaluation order of an inbound event will be: 1, 2, and 5."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"1 and 2 don’t implement ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":", and therefore the actual evaluation order of a outbound event will be: 5, 4, and 3.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If 5 implements both ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":", the evaluation order of an inbound and a outbound event could be 125 and 543 respectively.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Note:   Handlers may choose not to propagate messages down the pipeline immediately.  For example a handler may need to wait"},{"type":"text","text":" "},{"type":"text","text":"for additional data before sending a protocol event to the next handler in the pipeline.  Due to this you can’t assume that later handlers"},{"type":"text","text":" "},{"type":"text","text":"in the pipeline will receive the same number of events as were sent, or that events of different types will arrive in the same order."},{"type":"text","text":" "},{"type":"text","text":"For example - a user event could overtake a data event if a handler is aggregating data events before propagating but immediately"},{"type":"text","text":" "},{"type":"text","text":"propagating user events."}],"type":"paragraph"},{"anchor":"Forwarding-an-event-to-the-next-handler","text":"Forwarding an event to the next handler","level":1,"type":"heading"},{"inlineContent":[{"type":"text","text":"As you might noticed in the diagram above, a handler has to invoke the event propagation methods in"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" to forward an event to its next handler."},{"type":"text","text":" "},{"type":"text","text":"Those methods include:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Inbound event propagation methods defined in "},{"type":"codeVoice","code":"ChannelInboundInvoker"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Outbound event propagation methods defined in ","type":"text"},{"code":"ChannelOutboundInvoker","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Building-a-pipeline","text":"Building a pipeline","level":1,"type":"heading"},{"inlineContent":[{"type":"text","text":"A user is supposed to have one or more "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to receive I\/O events (e.g. read) and"},{"type":"text","text":" "},{"type":"text","text":"to request I\/O operations (e.g. write and close).  For example, a typical server will have the following handlers"},{"type":"text","text":" "},{"type":"text","text":"in each channel’s pipeline, but your mileage may vary depending on the complexity and characteristics of the"},{"type":"text","text":" "},{"type":"text","text":"protocol and business logic:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Protocol Decoder - translates binary data (e.g. ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":") into a struct \/ class","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Protocol Encoder - translates a struct \/ class into binary data (e.g. "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Business Logic Handler - performs the actual business logic (e.g. database access)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Thread-safety","text":"Thread safety","level":1,"type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" can be added or removed at any time because a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" is thread safe."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/connect(to:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/connect(to:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/connect(to:promise:)","title":"connect(to:promise:)","abstract":[{"type":"text","text":"Connect to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-6qm2j":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-6qm2j","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-6qm2j","title":"addHandlers(_:position:)","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHTTPClientHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier","text":"Position"},{"text":", ","kind":"text"},{"text":"leftOverBytesStrategy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO","text":"RemoveAfterUpgradeStrategy","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:)","kind":"symbol","type":"topic","abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP client.","type":"text"}],"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","title":"ChannelOutboundInvoker","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"code":"ChannelCore","type":"codeVoice"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handlerType:)-7xmo":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-7xmo","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":">("},{"kind":"externalParam","text":"handlerType"},{"text":": ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns the "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" that belongs to a "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" of the given type."}],"url":"\/documentation\/niocore\/channelpipeline\/context(handlertype:)-7xmo","kind":"symbol","title":"context(handlerType:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:promise:)":{"type":"topic","abstract":[{"text":"Remove a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"title":"removeHandler(name:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:promise:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRegistered()":{"abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was registered to its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so IO will be processed.","type":"text"}],"title":"fireChannelRegistered()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelregistered()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireErrorCaught(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/fireerrorcaught(_:)","title":"fireErrorCaught(_:)","abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:)-1v5di":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-1v5di","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:)-1v5di","title":"removeHandler(name:)","abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(name:)-5v7xj":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol","title":"context(name:)","url":"\/documentation\/niocore\/channelpipeline\/context(name:)-5v7xj","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-5v7xj","abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" that belongs to a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/write(_:promise:)":{"type":"topic","kind":"symbol","title":"write(_:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Write data to the remote peer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/write(_:promise:)","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/write(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelUnregistered()":{"kind":"symbol","title":"fireChannelUnregistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was unregistered from its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which means no IO will be handled for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" anymore."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","url":"\/documentation\/niocore\/channelpipeline\/firechannelunregistered()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/close(mode:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/close(mode:promise:)","abstract":[{"type":"text","text":"Close the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" and so the connection if one exists."}],"url":"\/documentation\/niocore\/channelpipeline\/close(mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"title":"close(mode:promise:)","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:)-2dhfw":{"kind":"symbol","title":"removeHandler(context:)","abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-2dhfw","url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:)-2dhfw","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:)-3n54r":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:)-3n54r","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-3n54r","title":"removeHandler(name:)","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/init(channel:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)","url":"\/documentation\/niocore\/channelpipeline\/init(channel:)","role":"symbol","type":"topic","title":"init(channel:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". This method should never be called by the end-user"},{"type":"text","text":" "},{"type":"text","text":"directly: it is only intended for use with custom "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations. Users should always use"},{"type":"text","text":" "},{"type":"codeVoice","code":"channel.pipeline"},{"type":"text","text":" to access the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"title":"fireChannelWritabilityChanged()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s writable state changes.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireUserInboundEventTriggered(_:)":{"type":"topic","title":"fireUserInboundEventTriggered(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireUserInboundEventTriggered"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Trigger a custom user inbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/fireuserinboundeventtriggered(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-2s3d9":{"type":"topic","title":"addHandlers(_:position:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2s3d9","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-2s3d9"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handler:)-2u7u9":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-2u7u9","url":"\/documentation\/niocore\/channelpipeline\/context(handler:)-2u7u9","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"}],"kind":"symbol","title":"context(handler:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handlerType:)-2zwp1":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":">("},{"kind":"externalParam","text":"handlerType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"}],"type":"topic","abstract":[],"title":"context(handlerType:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-2zwp1","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/context(handlertype:)-2zwp1"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)","type":"topic","deprecated":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-9cxep":{"kind":"symbol","abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"type":"codeVoice","code":"ChannelHandler.add(first:)"},{"type":"text","text":"."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-9cxep","title":"addHandlers(_:position:)","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-9cxep","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandlers","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/CustomDebugStringConvertible-Implementations":{"type":"topic","title":"CustomDebugStringConvertible Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","url":"\/documentation\/niocore\/channelpipeline\/customdebugstringconvertible-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(name:)-3lr76":{"url":"\/documentation\/niocore\/channelpipeline\/context(name:)-3lr76","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-3lr76","role":"symbol","type":"topic","title":"context(name:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/ChannelOutboundInvoker-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","url":"\/documentation\/niocore\/channelpipeline\/channeloutboundinvoker-implementations","kind":"article","abstract":[],"type":"topic","title":"ChannelOutboundInvoker Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelActive()":{"type":"topic","title":"fireChannelActive()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelActive"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes active."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelActive()","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/firechannelactive()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:)-4alhd":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-4alhd","type":"topic","title":"removeHandler(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier","text":"RemovableChannelHandler"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Remove a "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:)-4alhd"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/writeAndFlush(_:promise:)":{"type":"topic","title":"writeAndFlush(_:promise:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/writeAndFlush(_:promise:)","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/writeandflush(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:)-8mrfs":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[],"url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:)-8mrfs","type":"topic","kind":"symbol","title":"removeHandler(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-8mrfs","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/configurehttpserverpipeline(position:withpipeliningassistance:withserverupgrade:witherrorhandling:)","title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withPipeliningAssistance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withServerUpgrade"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa","kind":"typeIdentifier","text":"NIOHTTPServerUpgradeConfiguration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"withErrorHandling"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","abstract":[{"type":"text","text":"Configure a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" for use as a HTTP server."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandler(_:name:position:)-352i2":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/addhandler(_:name:position:)-352i2","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"addHandler(_:name:position:)","kind":"symbol","abstract":[{"text":"Add a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-352i2"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/Position":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Position"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position","navigatorTitle":[{"kind":"identifier","text":"Position"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Position"},{"type":"text","text":" within the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" used to insert handlers into the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","title":"ChannelPipeline.Position","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/position"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelInactive()":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelinactive()","title":"fireChannelInactive()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()","abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" becomes inactive.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandler(_:name:position:)-7wa0e":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/channelpipeline\/addhandler(_:name:position:)-7wa0e","title":"addHandler(_:name:position:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-7wa0e","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/bind(to:promise:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"type":"text","text":"Bind to a "},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channelpipeline\/bind(to:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/bind(to:promise:)","title":"bind(to:promise:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInvoker","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channelinvoker","abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"navigatorTitle":[{"text":"ChannelInvoker","kind":"identifier"}],"title":"ChannelInvoker"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:promise:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"type":"text","text":"Remove a "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:promise:)","title":"removeHandler(context:promise:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/flush()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/flush()","title":"flush()","url":"\/documentation\/niocore\/channelpipeline\/flush()","role":"symbol","abstract":[{"type":"text","text":"Flush data that was previously written via "},{"type":"codeVoice","code":"write"},{"type":"text","text":" to the remote peer."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/syncOperations":{"title":"syncOperations","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOperations","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"text":".","kind":"text"},{"text":"SynchronousOperations","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/syncOperations","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/syncoperations","abstract":[{"text":"Returns a view of operations which can be performed synchronously on this pipeline. All","type":"text"},{"text":" ","type":"text"},{"text":"operations ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"text":" be called on the event loop.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:)-9c4qg":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:)-9c4qg","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-9c4qg","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"removeHandler(context:)","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelReadComplete()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","title":"fireChannelReadComplete()","url":"\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()","role":"symbol","abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". Any new data received will be handled later."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/eventLoop":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/eventloop","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"title":"eventLoop","kind":"symbol","abstract":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that is used by the underlying ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/eventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handler:)-9ow8y":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/context(handler:)-9ow8y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":">","kind":"text"}],"title":"context(handler:)","kind":"symbol","abstract":[{"text":"Returns the ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" that belongs to a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-9ow8y"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"title":"ChannelPipeline.SynchronousOperations","navigatorTitle":[{"text":"SynchronousOperations","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOperations","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations","abstract":[{"text":"A view of a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which may be used to invoke synchronous operations.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}],"title":"ChannelInboundInvoker","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundInvoker"}],"abstract":[{"text":"Fire inbound events related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" until its end is reached or it’s consumed by a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channelinboundinvoker"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/read()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Signal that we want to read from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" once there is data ready."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/read()","url":"\/documentation\/niocore\/channelpipeline\/read()","kind":"symbol","type":"topic","title":"read()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/triggerUserOutboundEvent(_:promise:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","abstract":[{"text":"Trigger a custom user outbound event which will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"triggerUserOutboundEvent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"title":"triggerUserOutboundEvent(_:promise:)","url":"\/documentation\/niocore\/channelpipeline\/triggeruseroutboundevent(_:promise:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/handler(type:)":{"abstract":[{"text":"Returns the first ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" of the given type.","type":"text"}],"type":"topic","url":"\/documentation\/niocore\/channelpipeline\/handler(type:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":">"}],"title":"handler(type:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/handler(type:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRead(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRead","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Called once there is some data read for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that needs processing."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRead(_:)","url":"\/documentation\/niocore\/channelpipeline\/firechannelread(_:)","kind":"symbol","type":"topic","title":"fireChannelRead(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)":{"url":"\/documentation\/niocore\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:withclientupgrade:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP client with a client upgrader configuration.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHTTPClientHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"leftOverBytesStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO","text":"RemoveAfterUpgradeStrategy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withClientUpgrade"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa","text":"NIOHTTPClientUpgradeConfiguration"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:promise:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:promise:)","url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:promise:)","kind":"symbol","type":"topic","title":"removeHandler(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-2fmmt":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2fmmt","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-2fmmt","abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"code":"ChannelHandler.add(first:)","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"addHandlers(_:position:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/register(promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/register(promise:)","url":"\/documentation\/niocore\/channelpipeline\/register(promise:)","abstract":[{"type":"text","text":"Register on an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" and so have all its IO handled."}],"role":"symbol","title":"register(promise:)","kind":"symbol"}}}