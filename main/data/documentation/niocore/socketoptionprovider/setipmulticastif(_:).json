{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastIF","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"in_addr","kind":"typeIdentifier","preciseIdentifier":"c:@S@in_addr"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that fires when the option has been set,","type":"text"},{"text":" ","type":"text"},{"text":"or if an error has occurred.","type":"text"}]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to set IP_MULTICAST_IF to.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Sets the socket option IP_MULTICAST_IF to "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/niocore\/socketoptionprovider\/setipmulticastif(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7NIOCore20SocketOptionProviderPAAE16setIPMulticastIFyAA15EventLoopFutureCyytGSo7in_addrVF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastIF","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in_addr","preciseIdentifier":"c:@S@in_addr","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","title":"setIPMulticastIF(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastIF(_:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider":{"type":"topic","url":"\/documentation\/niocore\/socketoptionprovider","role":"symbol","navigatorTitle":[{"text":"SocketOptionProvider","kind":"identifier"}],"title":"SocketOptionProvider","kind":"symbol","abstract":[{"text":"This protocol defines an object, most commonly a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", that supports","type":"text"},{"text":" ","type":"text"},{"text":"setting and getting socket options (via ","type":"text"},{"code":"setsockopt","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"getsockopt","type":"codeVoice"},{"text":" or similar).","type":"text"},{"text":" ","type":"text"},{"text":"It provides a strongly typed API that makes working with larger, less-common","type":"text"},{"text":" ","type":"text"},{"text":"socket options easier than the ","type":"text"},{"code":"ChannelOption","type":"codeVoice"},{"text":" API allows.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocketOptionProvider","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastIF(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastIF","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in_addr","preciseIdentifier":"c:@S@in_addr","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastif(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastIF(_:)","abstract":[{"text":"Sets the socket option IP_MULTICAST_IF to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"title":"setIPMulticastIF(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]}}}