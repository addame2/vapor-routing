{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"or","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"WrappedType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" to throw if the value is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". This is captured with ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"text":" ","type":"text"},{"text":"to avoid initialize the ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" unless needed.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"codeListing","syntax":null,"code":["print(futureString) \/\/ Future<String?>","futureString.unwrap(or: MyError()) \/\/ Future<String>"]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/unwrap(or:)"]}],"metadata":{"externalID":"s:7NIOCore15EventLoopFutureC5VaporAD12OptionalTypeRzlE6unwrap2orACy07WrappedG0QzGs5Error_pyXA_tF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WrappedType"},{"kind":"text","text":">"}],"symbolKind":"method","modules":[{"name":"NIOCore"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"OptionalType","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","title":"unwrap(or:)","extendedModule":"NIOCore"},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","interfaceLanguage":"swift"},"abstract":[{"text":"Unwraps an ","type":"text"},{"type":"codeVoice","code":"Optional"},{"text":" value contained inside a Future’s expectation.","type":"text"},{"text":" ","type":"text"},{"text":"If the optional resolves to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" (","type":"text"},{"type":"codeVoice","code":".none"},{"text":"), the supplied error will be thrown instead.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/unwrap(or:)":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"OptionalType","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Unwraps an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" value contained inside a Future’s expectation."},{"type":"text","text":" "},{"type":"text","text":"If the optional resolves to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" ("},{"type":"codeVoice","code":".none"},{"type":"text","text":"), the supplied error will be thrown instead."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"or","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"WrappedType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/unwrap(or:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","type":"topic","title":"unwrap(or:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]}}}