{"metadata":{"roleHeading":"Type Method","role":"symbol","extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC6reduce4into_2on_ACyxGx_SayACyqd__GGAA0bC0_pyxz_qd__tctlFZ","title":"reduce(into:_:on:_:)","modules":[{"name":"NIOCore"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputValue"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/reduce(into:_:on:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/reduce(into:_:on:_:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"InputValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"futures","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"InputValue","kind":"typeIdentifier"},{"text":">], ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" with the combined value."}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An initial result to begin the reduction."}]}],"name":"initialResult"},{"content":[{"inlineContent":[{"text":"An array of ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" to wait for.","type":"text"}],"type":"paragraph"}],"name":"futures"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" on which the new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" callbacks will fire."}]}],"name":"eventLoop"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The bifunction used to combine partialResults with new elements."}]}],"name":"updateAccumulatingResult"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will fail as soon as a failure is encountered in any of the","type":"text"},{"text":" ","type":"text"},{"code":"futures","type":"codeVoice"},{"text":". However, the failure will not occur until all preceding","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFutures","type":"codeVoice"},{"text":" have completed. At the point the failure is encountered, all subsequent","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" objects will no longer be waited for. This function therefore fails fast: once","type":"text"},{"text":" ","type":"text"},{"text":"a failure is encountered, it will immediately fail the overall ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"abstract":[{"type":"text","text":"Returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that fires only when all the provided futures complete."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" contains the result of combining the "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"values of the "},{"code":"[EventLoopFuture<NewValue>]","type":"codeVoice"},{"type":"text","text":". This function is analogous to the standard libraryâ€™s"},{"type":"text","text":" "},{"code":"reduce(into:)","type":"codeVoice"},{"type":"text","text":", which does not make copies of the result type for each "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/reduce(into:_:on:_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputValue"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/reduce(into:_:on:_:)","title":"reduce(into:_:on:_:)","abstract":[{"text":"Returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that fires only when all the provided futures complete.","type":"text"},{"text":" ","type":"text"},{"text":"The new ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" contains the result of combining the ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"values of the "},{"code":"[EventLoopFuture<NewValue>]","type":"codeVoice"},{"type":"text","text":". This function is analogous to the standard libraryâ€™s"},{"type":"text","text":" "},{"code":"reduce(into:)","type":"codeVoice"},{"type":"text","text":", which does not make copies of the result type for each "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/eventloopfuture\/reduce(into:_:on:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"title":"EventLoop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"kind":"symbol"}}}