{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"kind":"symbol","abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a success result. The observer callback is permitted to block.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"queue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callbackMayBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"DispatchQueue","type":"codeVoice"},{"text":" on which the blocking IO \/ task specified by ","type":"text"},{"code":"callbackMayBlock","type":"codeVoice"},{"text":" is scheduled.","type":"text"}],"type":"paragraph"}],"name":"onto"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback that is called with the successful result of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}]}],"name":"callbackMayBlock"}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"An observer callback cannot return a value, meaning that this function cannot be chained","type":"text"},{"text":" ","type":"text"},{"text":"from. If you are attempting to create a computation pipeline, consider ","type":"text"},{"type":"codeVoice","code":"map"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"flatMap"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you find yourself passing the results from this ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" to a new ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":" ","type":"text"},{"text":"in the body of this function, consider using ","type":"text"},{"type":"codeVoice","code":"cascade"},{"type":"text","text":" instead."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccessBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"role":"symbol","title":"whenSuccessBlocking(onto:_:)","externalID":"s:7NIOCore15EventLoopFutureC19whenSuccessBlocking4onto_y8Dispatch0I5QueueC_yxctF","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenSuccessBlocking(onto:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","title":"whenSuccessBlocking(onto:_:)","abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a success result. The observer callback is permitted to block.","type":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]}}}