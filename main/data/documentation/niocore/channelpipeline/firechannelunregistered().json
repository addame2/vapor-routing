{"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}],"role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC04fireB12UnregisteredyyF","title":"fireChannelUnregistered()","symbolKind":"method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/firechannelunregistered()"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"sections":[],"abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was unregistered from its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" which means no IO will be handled for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" anymore.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelUnregistered","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelUnregistered()":{"kind":"symbol","title":"fireChannelUnregistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was unregistered from its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which means no IO will be handled for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" anymore."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","url":"\/documentation\/niocore\/channelpipeline\/firechannelunregistered()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"}}}