{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelInactive()"},"sections":[],"metadata":{"externalID":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV04fireB8InactiveyyF","title":"fireChannelInactive()","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method"},"abstract":[{"text":"Fires ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" from the head to the tail.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method should typically only be called by "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementations directly."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelinactive()"]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations/fireChannelInactive()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelInactive()","role":"symbol","abstract":[{"text":"Fires ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" from the head to the tail.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"title":"fireChannelInactive()","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelinactive()","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"title":"ChannelPipeline.SynchronousOperations","navigatorTitle":[{"text":"SynchronousOperations","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOperations","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations","abstract":[{"text":"A view of a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which may be used to invoke synchronous operations.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"}}}