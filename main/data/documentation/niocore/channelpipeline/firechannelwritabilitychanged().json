{"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The writability state of a Channel depends on watermarks that can be set via ","type":"text"},{"code":"Channel.setOption","type":"codeVoice"},{"text":" and how much data","type":"text"},{"text":" ","type":"text"},{"text":"is still waiting to be transferred to the remote peer.","type":"text"},{"text":" ","type":"text"},{"text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the","type":"text"},{"text":" ","type":"text"},{"text":"protocol and other semantics. But for example you may want to stop writing to the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" until ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" becomes","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again or stop reading at all.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"fireChannelWritabilityChanged()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:7NIOCore15ChannelPipelineC04fireB18WritabilityChangedyyF","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}]},"abstract":[{"type":"text","text":"Called when a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"’s writable state changes."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"title":"fireChannelWritabilityChanged()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","abstract":[{"text":"Called when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s writable state changes.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"}}}