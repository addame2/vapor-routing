{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()"},"sections":[],"metadata":{"title":"fireChannelReadComplete()","modules":[{"name":"NIOCore"}],"symbolKind":"method","externalID":"s:7NIOCore15ChannelPipelineC04fireB12ReadCompleteyyF","role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}],"languages":["swift"]}]}],"abstract":[{"text":"Called once there is no more data to read immediately on a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". Any new data received will be handled later.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelReadComplete()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","title":"fireChannelReadComplete()","url":"\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()","role":"symbol","abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". Any new data received will be handled later."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}]}}}