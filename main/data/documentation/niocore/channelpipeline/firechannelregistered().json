{"abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was registered to its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so IO will be processed.","type":"text"}],"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelregistered()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC04fireB10RegisteredyyF","roleHeading":"Instance Method","title":"fireChannelRegistered()"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRegistered()":{"abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was registered to its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so IO will be processed.","type":"text"}],"title":"fireChannelRegistered()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelregistered()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"}}}