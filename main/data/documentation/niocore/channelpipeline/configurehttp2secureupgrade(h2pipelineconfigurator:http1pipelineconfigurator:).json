{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2PipelineConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that completes when the pipeline is ready to negotiate."}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that","type":"text"},{"text":" ","type":"text"},{"text":"should configure the pipeline for HTTP\/2 use. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline has been fully mutated.","type":"text"}]}],"name":"h2PipelineConfigurator"},{"content":[{"inlineContent":[{"text":"A callback that will be invoked if HTTP\/1.1 has been explicitly","type":"text"},{"text":" ","type":"text"},{"text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline has been fully mutated.","type":"text"}],"type":"paragraph"}],"name":"http1PipelineConfigurator"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to"},{"type":"text","text":" "},{"type":"text","text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS"},{"type":"text","text":" "},{"type":"text","text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function configures the pipeline with a pair of callbacks that will handle the result"},{"type":"text","text":" "},{"type":"text","text":"of the negotiation. It explicitly "},{"type":"strong","inlineContent":[{"type":"text","text":"does not"}]},{"type":"text","text":" configure a TLS handler to actually attempt"},{"type":"text","text":" "},{"type":"text","text":"to negotiate ALPN. The supported ALPN protocols are provided in"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTP2SupportedALPNProtocols"},{"type":"text","text":": please ensure that the TLS handler you are using for your"},{"type":"text","text":" "},{"type":"text","text":"pipeline is appropriately configured to perform this protocol negotiation."}]},{"type":"paragraph","inlineContent":[{"text":"If negotiation results in an unexpected protocol, the pipeline will close the connection","type":"text"},{"text":" ","type":"text"},{"text":"and no callback will fire.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This configuration is acceptable for use on both client and server channel pipelines."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"platforms":[],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC8NIOHTTP2E27configureHTTP2SecureUpgrade02h2C12Configurator05http1cJ0AA15EventLoopFutureCyytGAjCc_AjCctF","symbolKind":"method","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"kind":"symbol","abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1PipelineConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)","type":"topic","deprecated":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"}}}