{"metadata":{"role":"symbol","modules":[{"name":"NIOCore"}],"title":"fireErrorCaught(_:)","roleHeading":"Instance Method","externalID":"s:7NIOCore15ChannelPipelineC15fireErrorCaughtyys0E0_pF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/fireerrorcaught(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"the error we encountered.","type":"text"}],"type":"paragraph"}],"name":"error"}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Be aware that for inbound operations this method is called while for outbound operations defined in ","type":"text"},{"code":"ChannelOutboundInvoker","type":"codeVoice"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" will be notified.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Called when an inbound operation ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" was caught.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireErrorCaught(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/fireerrorcaught(_:)","title":"fireErrorCaught(_:)","abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/niocore\/channelpipeline","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s that handle or intercept inbound events and outbound operations of a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" implements an advanced form of the Intercepting Filter pattern","type":"text"},{"text":" ","type":"text"},{"text":"to give a user full control over how an event is handled and how the ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a pipeline","type":"text"},{"text":" ","type":"text"},{"text":"interact with each other.","type":"text"}],"kind":"symbol"}}}