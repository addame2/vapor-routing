{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"platforms":["Linux"]}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"title":"ChannelOptions.Types.WriteBufferWaterMarkOption","externalID":"s:7NIOCore14ChannelOptionsV5TypesO26WriteBufferWaterMarkOptionV","roleHeading":"Structure","symbolKind":"struct"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","interfaceLanguage":"swift"},"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","doc:\/\/co.pointfree.VaporRouting\/SQ"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"codeVoice","code":"WriteBufferWaterMarkOption"},{"type":"text","text":" allows users to configure when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" should be marked as writable or not. Once the amount of bytes queued in a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s outbound buffer is larger than "},{"type":"codeVoice","code":"WriteBufferWaterMark.high"},{"type":"text","text":" the channel will be marked as non-writable and so"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.isWritable"},{"type":"text","text":" will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued"},{"type":"text","text":" "},{"type":"text","text":"falls below "},{"type":"codeVoice","code":"WriteBufferWaterMark.low"},{"type":"text","text":" the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will become writable again. Once this happens "},{"type":"codeVoice","code":"Channel.writable"},{"type":"text","text":" will return"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" again. These writability changes are also propagated through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" and so can be intercepted via "},{"type":"codeVoice","code":"ChannelInboundHandler.channelWritabilityChanged"},{"type":"text","text":"."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Value"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Equatable-Implementations"],"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOption"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","title":"ChannelOption","url":"\/documentation\/niocore\/channeloption","kind":"symbol","abstract":[{"text":"A configuration option that can be set on a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" to configure different behaviour.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types":{"type":"topic","kind":"symbol","title":"ChannelOptions.Types","role":"symbol","url":"\/documentation\/niocore\/channeloptions\/types","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Types"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Types"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOptions","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Provides "},{"type":"codeVoice","code":"ChannelOption"},{"text":"s to be used with a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bootstrap","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ServerBootstrap","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelOptions","navigatorTitle":[{"text":"ChannelOptions","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption":{"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","title":"ChannelOptions.Types.WriteBufferWaterMarkOption","type":"topic","abstract":[{"type":"codeVoice","code":"WriteBufferWaterMarkOption"},{"type":"text","text":" allows users to configure when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" should be marked as writable or not. Once the amount of bytes queued in a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s outbound buffer is larger than "},{"type":"codeVoice","code":"WriteBufferWaterMark.high"},{"type":"text","text":" the channel will be marked as non-writable and so"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.isWritable"},{"type":"text","text":" will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued"},{"text":" ","type":"text"},{"text":"falls below ","type":"text"},{"type":"codeVoice","code":"WriteBufferWaterMark.low"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" will become writable again. Once this happens ","type":"text"},{"type":"codeVoice","code":"Channel.writable"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" again. These writability changes are also propagated through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" and so can be intercepted via "},{"code":"ChannelInboundHandler.channelWritabilityChanged","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMarkOption","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/Value":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"type":"topic","abstract":[{"text":"The type of the ","type":"text"},{"code":"ChannelOption","type":"codeVoice"},{"text":"â€™s value.","type":"text"}],"navigatorTitle":[{"text":"Value","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/value","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Value","title":"ChannelOptions.Types.WriteBufferWaterMarkOption.Value"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Equatable-Implementations","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/equatable-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/SQ":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/init()":{"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/init()","title":"init()","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"}}}