{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowRemoteHalfClosure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ChannelOptions","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelOptionsV"},{"text":".","kind":"text"},{"text":"TCPConvenienceOption","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelOptionsV20TCPConvenienceOptionV"}],"externalID":"s:7NIOCore14ChannelOptionsV20TCPConvenienceOptionV22allowRemoteHalfClosureAEvpZ","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","title":"allowRemoteHalfClosure","roleHeading":"Type Property","role":"symbol","symbolKind":"property"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/TCPConvenienceOption\/allowRemoteHalfClosure","interfaceLanguage":"swift"},"abstract":[{"text":"Allows users to configure whether the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" will close itself when its remote","type":"text"},{"text":" ","type":"text"},{"text":"peer shuts down its send stream, or whether it will remain open. If set to ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" (the default), the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" ","type":"text"},{"text":"will be closed automatically if the remote peer shuts down its send stream. If set to true, the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" will","type":"text"},{"text":" ","type":"text"},{"text":"not be closed: instead, a ","type":"text"},{"type":"codeVoice","code":"ChannelEvent.inboundClosed"},{"text":" user event will be sent on the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"and no more data will be received.","type":"text"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/TCPConvenienceOption"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowRemoteHalfClosure"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","preciseIdentifier":"s:7NIOCore14ChannelOptionsV","kind":"typeIdentifier","text":"ChannelOptions"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/TCPConvenienceOption","preciseIdentifier":"s:7NIOCore14ChannelOptionsV20TCPConvenienceOptionV","kind":"typeIdentifier","text":"TCPConvenienceOption"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channeloptions\/tcpconvenienceoption\/allowremotehalfclosure"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/TCPConvenienceOption":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TCPConvenienceOption"}],"role":"symbol","title":"ChannelOptions.TCPConvenienceOption","url":"\/documentation\/niocore\/channeloptions\/tcpconvenienceoption","abstract":[{"type":"text","text":"A TCP channel option which can be applied to a bootstrap using convenience notation."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/TCPConvenienceOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TCPConvenienceOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/TCPConvenienceOption/allowRemoteHalfClosure":{"url":"\/documentation\/niocore\/channeloptions\/tcpconvenienceoption\/allowremotehalfclosure","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowRemoteHalfClosure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelOptionsV","text":"ChannelOptions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelOptionsV20TCPConvenienceOptionV","text":"TCPConvenienceOption"}],"type":"topic","abstract":[{"text":"Allows users to configure whether the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will close itself when its remote","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"peer shuts down its send stream, or whether it will remain open. If set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" (the default), the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" "},{"type":"text","text":"will be closed automatically if the remote peer shuts down its send stream. If set to true, the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"not be closed: instead, a "},{"type":"codeVoice","code":"ChannelEvent.inboundClosed"},{"type":"text","text":" user event will be sent on the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and no more data will be received."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/TCPConvenienceOption\/allowRemoteHalfClosure","title":"allowRemoteHalfClosure"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOptions","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Provides "},{"type":"codeVoice","code":"ChannelOption"},{"text":"s to be used with a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bootstrap","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ServerBootstrap","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelOptions","navigatorTitle":[{"text":"ChannelOptions","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions"}}}