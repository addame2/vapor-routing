{"kind":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the readable bytes of "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebufferallocator\/buffer(buffer:)"]}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore19ByteBufferAllocatorV6bufferAdA0bC0VAF_tF","title":"buffer(buffer:)","extendedModule":"NIOCore","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the written bytes.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This may allocate a new "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" with enough space to fit "},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" and potentially some extra space."}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"text":"Use this method only if you deliberately want to reallocate a potentially smaller ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" than the","type":"text"},{"text":" ","type":"text"},{"text":"one you already have. Given that ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" is a value type, defensive copies are not necessary. If","type":"text"},{"text":" ","type":"text"},{"text":"you have a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" but would like the ","type":"text"},{"code":"readerIndex","type":"codeVoice"},{"text":" to start at ","type":"text"},{"code":"0","type":"codeVoice"},{"text":", consider ","type":"text"},{"code":"readSlice","type":"codeVoice"},{"text":" instead.","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(buffer:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"ByteBufferAllocator","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator/buffer(buffer:)":{"url":"\/documentation\/niocore\/bytebufferallocator\/buffer(buffer:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"buffer(buffer:)","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the readable bytes of "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(buffer:)"}}}