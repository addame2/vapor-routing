{"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption\/Value"]}],"metadata":{"symbolKind":"protocol","externalID":"s:7NIOCore13ChannelOptionP","roleHeading":"Protocol","title":"ChannelOption","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelOption"}],"modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOption"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/niocore\/channeloption"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"abstract":[{"type":"text","text":"A configuration option that can be set on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" to configure different behaviour."}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/SQ"]},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamChannelOptions\/Types\/StreamIDOption"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOption","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}]}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamChannelOptions/Types/StreamIDOption":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamChannelOptions\/Types\/StreamIDOption","abstract":[{"code":"StreamIDOption","type":"codeVoice"},{"text":" allows users to query the stream ID for a given ","type":"text"},{"code":"HTTP2StreamChannel","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"HTTP2StreamChannelOptions.Types.StreamIDOption","navigatorTitle":[{"text":"StreamIDOption","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamIDOption","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2streamchanneloptions\/types\/streamidoption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllowRemoteHalfClosureOption":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","abstract":[{"type":"codeVoice","code":"AllowRemoteHalfClosureOption"},{"type":"text","text":" allows users to configure whether the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will close itself when its remote"},{"type":"text","text":" "},{"type":"text","text":"peer shuts down its send stream, or whether it will remain open. If set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" (the default), the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" "},{"type":"text","text":"will be closed automatically if the remote peer shuts down its send stream. If set to true, the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"not be closed: instead, a "},{"type":"codeVoice","code":"ChannelEvent.inboundClosed"},{"type":"text","text":" user event will be sent on the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and no more data will be received."}],"title":"ChannelOptions.Types.AllowRemoteHalfClosureOption","navigatorTitle":[{"text":"AllowRemoteHalfClosureOption","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/allowremotehalfclosureoption","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowRemoteHalfClosureOption","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ConnectTimeoutOption":{"type":"topic","navigatorTitle":[{"text":"ConnectTimeoutOption","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/connecttimeoutoption","title":"ChannelOptions.Types.ConnectTimeoutOption","abstract":[{"type":"codeVoice","code":"ConnectTimeoutOption"},{"text":" allows users to configure the ","type":"text"},{"type":"codeVoice","code":"TimeAmount"},{"text":" after which a connect will fail if it was not established in the meantime. May be","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", in which case the connection attempt will never time out.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConnectTimeoutOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOption"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","title":"ChannelOption","url":"\/documentation\/niocore\/channeloption","kind":"symbol","abstract":[{"text":"A configuration option that can be set on a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" to configure different behaviour.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ReceivePacketInfo":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReceivePacketInfo","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"When set to true IP level Packet Info information will be reported through "},{"type":"codeVoice","code":"AddressedEnvelope.Metadata"},{"text":" for UDP packets.","type":"text"}],"title":"ChannelOptions.Types.ReceivePacketInfo","navigatorTitle":[{"text":"ReceivePacketInfo","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions\/types\/receivepacketinfo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/RecvAllocatorOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/recvallocatoroption","title":"ChannelOptions.Types.RecvAllocatorOption","navigatorTitle":[{"kind":"identifier","text":"RecvAllocatorOption"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecvAllocatorOption"}],"abstract":[{"type":"codeVoice","code":"RecvAllocatorOption"},{"text":" allows users to specify the ","type":"text"},{"type":"codeVoice","code":"RecvByteBufferAllocator"},{"text":" to use.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption/Value":{"title":"Value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"type":"topic","role":"symbol","required":true,"abstract":[{"text":"The type of the ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"text":"â€™s value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption\/Value","kind":"symbol","url":"\/documentation\/niocore\/channeloption\/value"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllocatorOption":{"navigatorTitle":[{"text":"AllocatorOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllocatorOption","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions\/types\/allocatoroption","role":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"AllocatorOption"},{"type":"text","text":" allows to specify the "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" to use."}],"title":"ChannelOptions.Types.AllocatorOption","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/MaxMessagesPerReadOption":{"abstract":[{"code":"MaxMessagesPerReadOption","type":"codeVoice"},{"text":" allows users to configure the maximum number of read calls to the underlying transport are performed before wait again until","type":"text"},{"text":" ","type":"text"},{"text":"there is more to read and be notified.","type":"text"}],"role":"symbol","title":"ChannelOptions.Types.MaxMessagesPerReadOption","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaxMessagesPerReadOption"}],"url":"\/documentation\/niocore\/channeloptions\/types\/maxmessagesperreadoption","navigatorTitle":[{"kind":"identifier","text":"MaxMessagesPerReadOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/SocketOption":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocketOption","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions\/types\/socketoption","navigatorTitle":[{"text":"SocketOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","abstract":[{"code":"SocketOption","type":"codeVoice"},{"text":" allows users to specify configuration settings that are directly applied to the underlying socket file descriptor.","type":"text"}],"type":"topic","title":"ChannelOptions.Types.SocketOption","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption":{"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","title":"ChannelOptions.Types.WriteBufferWaterMarkOption","type":"topic","abstract":[{"type":"codeVoice","code":"WriteBufferWaterMarkOption"},{"type":"text","text":" allows users to configure when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" should be marked as writable or not. Once the amount of bytes queued in a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s outbound buffer is larger than "},{"type":"codeVoice","code":"WriteBufferWaterMark.high"},{"type":"text","text":" the channel will be marked as non-writable and so"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.isWritable"},{"type":"text","text":" will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued"},{"text":" ","type":"text"},{"text":"falls below ","type":"text"},{"type":"codeVoice","code":"WriteBufferWaterMark.low"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" will become writable again. Once this happens ","type":"text"},{"type":"codeVoice","code":"Channel.writable"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" again. These writability changes are also propagated through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" and so can be intercepted via "},{"code":"ChannelInboundHandler.channelWritabilityChanged","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMarkOption","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/DatagramVectorReadMessageCountOption":{"role":"symbol","abstract":[{"code":"DatagramVectorReadMessageCountOption","type":"codeVoice"},{"text":" allows users to configure the number of messages to attempt to read in a single syscall on a","type":"text"},{"text":" ","type":"text"},{"text":"datagram ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","navigatorTitle":[{"kind":"identifier","text":"DatagramVectorReadMessageCountOption"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatagramVectorReadMessageCountOption"}],"title":"ChannelOptions.Types.DatagramVectorReadMessageCountOption","url":"\/documentation\/niocore\/channeloptions\/types\/datagramvectorreadmessagecountoption","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/BacklogOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/backlogoption","title":"ChannelOptions.Types.BacklogOption","role":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"BacklogOption"},{"type":"text","text":" allows users to configure the "},{"type":"codeVoice","code":"backlog"},{"type":"text","text":" value as specified in "},{"type":"codeVoice","code":"man 2 listen"},{"type":"text","text":". This is only useful for "},{"type":"codeVoice","code":"ServerSocketChannel"},{"type":"text","text":"s."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BacklogOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","navigatorTitle":[{"kind":"identifier","text":"BacklogOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ExplicitCongestionNotificationsOption":{"abstract":[{"text":"When set to true IP level ECN information will be reported through ","type":"text"},{"code":"AddressedEnvelope.Metadata","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/explicitcongestionnotificationsoption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","title":"ChannelOptions.Types.ExplicitCongestionNotificationsOption","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AutoReadOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/autoreadoption","abstract":[{"type":"codeVoice","code":"AutoReadOption"},{"type":"text","text":" allows users to configure if a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" should automatically call "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" again once all data was read from the transport or"},{"type":"text","text":" "},{"type":"text","text":"if the user is responsible to call "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","type":"topic","title":"ChannelOptions.Types.AutoReadOption","navigatorTitle":[{"kind":"identifier","text":"AutoReadOption"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoReadOption"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteSpinOption":{"kind":"symbol","type":"topic","title":"ChannelOptions.Types.WriteSpinOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteSpinOption","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption","abstract":[{"type":"codeVoice","code":"WriteSpinOption"},{"type":"text","text":" allows users to configure the number of repetitions of a only partially successful write call before considering the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" not writable."},{"text":" ","type":"text"},{"text":"Setting this option to ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" means that we only issue one write call and if that call does not write all the bytes,","type":"text"},{"text":" ","type":"text"},{"text":"we consider the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" not writable.","type":"text"}],"navigatorTitle":[{"text":"WriteSpinOption","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions\/types\/writespinoption"}}}