{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/niofilehandle"]}],"metadata":{"roleHeading":"Class","title":"NIOFileHandle","modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"class","externalID":"s:7NIOCore13NIOFileHandleC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"When creating a "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" it takes ownership of the underlying file descriptor. When a "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" is no longer"},{"type":"text","text":" "},{"type":"text","text":"needed you must "},{"type":"codeVoice","code":"close"},{"type":"text","text":" it or take back ownership of the file descriptor using "},{"type":"codeVoice","code":"takeDescriptorOwnership"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"One underlying file descriptor should usually be managed by one ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" only.","type":"text"}]}],"style":"note","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":"Failing to manage the lifetime of a "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" correctly will result in undefined behaviour."}],"type":"paragraph"}],"style":"warning","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" objects are not thread-safe and are mutable. They also cannot be fully thread-safe as they refer to a global underlying file descriptor."}],"type":"paragraph"}],"style":"warning","type":"aside"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","interfaceLanguage":"swift"},"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/withUnsafeFileDescriptor(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeFileDescriptor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)","type":"topic","title":"withUnsafeFileDescriptor(_:)","url":"\/documentation\/niocore\/niofilehandle\/withunsafefiledescriptor(_:)","abstract":[{"text":"Will be called with the file descriptor if still open, if not it will","type":"text"},{"text":" ","type":"text"},{"text":"throw an ","type":"text"},{"code":"IOError","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is a handle to an open file.","type":"text"}],"kind":"symbol","title":"NIOFileHandle","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"title":"takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","abstract":[{"text":"Take the ownership of the underlying file descriptor. This is similar to ","type":"text"},{"type":"codeVoice","code":"close()"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:mode:flags:)":{"title":"init(path:mode:flags:)","url":"\/documentation\/niocore\/niofilehandle\/init(path:mode:flags:)","abstract":[{"text":"Open a new ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":". This operation is blocking.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)","role":"symbol","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier","text":"NIOFileHandle"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC4ModeV","kind":"typeIdentifier","text":"Mode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier","text":"NIOFileHandle"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC5FlagsV","text":"Flags","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/niocore\/niofilehandle\/customstringconvertible-implementations","kind":"article","title":"CustomStringConvertible Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/isOpen":{"title":"isOpen","url":"\/documentation\/niocore\/niofilehandle\/isopen","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen","type":"topic","abstract":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if this "},{"type":"codeVoice","code":"FileDescriptor"},{"text":" is open (which means it was not closed yet).","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isOpen","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:)":{"kind":"symbol","abstract":[{"type":"text","text":"Open a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This operation is blocking."}],"type":"topic","url":"\/documentation\/niocore\/niofilehandle\/init(path:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","role":"symbol","title":"init(path:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/close()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","type":"topic","abstract":[{"type":"text","text":"Close this "},{"code":"FileDescriptor","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/niocore\/niofilehandle\/close()","kind":"symbol","title":"close()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/FileDescriptor":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","title":"FileDescriptor","navigatorTitle":[{"text":"FileDescriptor","kind":"identifier"}],"url":"\/documentation\/niocore\/filedescriptor","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileDescriptor","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Mode":{"abstract":[{"type":"codeVoice","code":"Mode"},{"text":" represents file access modes.","type":"text"}],"kind":"symbol","title":"NIOFileHandle.Mode","role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/mode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Mode"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mode"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(descriptor:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","type":"topic","abstract":[{"type":"text","text":"Create a "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" taking ownership of "},{"code":"descriptor","type":"codeVoice"},{"type":"text","text":". You must call "},{"code":"NIOFileHandle.close","type":"codeVoice"},{"type":"text","text":" or "},{"code":"NIOFileHandle.takeDescriptorOwnership","type":"codeVoice"},{"type":"text","text":" before"},{"text":" ","type":"text"},{"text":"this object can be safely released.","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"descriptor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/niofilehandle\/init(descriptor:)","kind":"symbol","title":"init(descriptor:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Flags":{"type":"topic","title":"NIOFileHandle.Flags","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","kind":"symbol","abstract":[{"code":"Flags","type":"codeVoice"},{"text":" allows to specify additional flags to ","type":"text"},{"code":"Mode","type":"codeVoice"},{"text":", such as permission for file creation.","type":"text"}],"url":"\/documentation\/niocore\/niofilehandle\/flags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flags"}],"navigatorTitle":[{"kind":"identifier","text":"Flags"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle","kind":"typeIdentifier"}],"type":"topic","title":"duplicate()","abstract":[{"type":"text","text":"Duplicates this "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":". This means that a new "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" and is responsible for closing it."}],"url":"\/documentation\/niocore\/niofilehandle\/duplicate()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","role":"symbol"}}}