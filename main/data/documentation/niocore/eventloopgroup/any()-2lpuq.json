{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"defaultImplementationsSections":[{"title":"EventLoop Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/any()"]},{"title":"EventLoopGroup Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-7m1zy"]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-2lpuq","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopgroup\/any()-2lpuq"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"style":"warning","content":[{"inlineContent":[{"type":"text","text":"You cannot rely on the returned "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" being the current one, not all "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":"s support"},{"type":"text","text":" "},{"type":"text","text":"choosing the current one. Use this method only if you are truly happy with "},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" of this"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" instance."}],"type":"paragraph"}],"type":"aside"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"You will only receive the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" here iff the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" belongs to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" you call ","type":"text"},{"type":"codeVoice","code":"any()"},{"text":" on.","type":"text"}]}],"type":"aside"},{"inlineContent":[{"text":"This method is useful having access to an ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" without the knowledge of which ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" would be","type":"text"},{"text":" ","type":"text"},{"text":"the best one to select to create a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":". This commonly happens in libraries where the user","type":"text"},{"text":" ","type":"text"},{"text":"cannot indicate what ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" they would like their futures on.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Typically, it is faster to kick off a new operation on the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"current"}]},{"text":" ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" because that minimised thread","type":"text"},{"text":" ","type":"text"},{"text":"switches. Hence, if situations where you don’t need precise knowledge of what ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" some code is running","type":"text"},{"text":" ","type":"text"},{"text":"on, use ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":" to indicate this.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The rule of thumb is: If you are trying to do ","type":"text"},{"inlineContent":[{"type":"text","text":"load balancing"}],"type":"emphasis"},{"text":", use ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":". If you just want to create a new","type":"text"},{"text":" ","type":"text"},{"text":"future or kick off some operation, use ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","externalID":"s:7NIOCore14EventLoopGroupP3anyAA0bC0_pyF","symbolKind":"method","title":"any()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns any "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", a common choice is the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/any()-2lpuq":{"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup\/any()-2lpuq","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-2lpuq","required":true,"type":"topic","title":"any()","defaultImplementations":2,"abstract":[{"type":"text","text":"Returns any "},{"type":"codeVoice","code":"EventLoop"},{"text":" from the ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":", a common choice is the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"role":"symbol","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"title":"EventLoopGroup","url":"\/documentation\/niocore\/eventloopgroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/any()-7m1zy":{"kind":"symbol","url":"\/documentation\/niocore\/eventloopgroup\/any()-7m1zy","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/any()-7m1zy","type":"topic","title":"any()","abstract":[{"type":"text","text":"The default implementation of "},{"type":"codeVoice","code":"any()"},{"text":" just returns the ","type":"text"},{"type":"codeVoice","code":"next()"},{"text":" EventLoop but it’s highly recommended to","type":"text"},{"text":" ","type":"text"},{"text":"override this and return the current ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" if possible."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"title":"EventLoop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/any()":{"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/any()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/any()","type":"topic","title":"any()","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"text":" forms a singular ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":", returning itself as ‘any’ ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"role":"symbol"}}}