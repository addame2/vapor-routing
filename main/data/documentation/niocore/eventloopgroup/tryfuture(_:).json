{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"work"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"work","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The potentially throwing closure to execute as a"},{"type":"text","text":" "},{"type":"text","text":"future. If the closure throws, a failed future is returned."}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method replaces this code:"}]},{"code":["return something.eventLoop.future().flatMapThrowing {"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"With this code:","type":"text"}]},{"code":["return something.eventLoop.tryFuture {"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"That’s pretty much it. It’s sugar.","type":"text"}]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"tryFuture(_:)","role":"symbol","externalID":"s:7NIOCore14EventLoopGroupP8AsyncKitE9tryFutureyAA0bcH0Cyqd__Gqd__yKclF","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"symbolKind":"method"},"abstract":[{"text":"An alternate name for this would be ","type":"text"},{"type":"codeVoice","code":"future(catching:)"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"type":"codeVoice","code":"el.future { ... }"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"role":"symbol","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"title":"EventLoopGroup","url":"\/documentation\/niocore\/eventloopgroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/tryFuture(_:)":{"url":"\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"tryFuture(_:)","role":"symbol","type":"topic","abstract":[{"text":"An alternate name for this would be ","type":"text"},{"type":"codeVoice","code":"future(catching:)"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"type":"codeVoice","code":"el.future { ... }"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture","role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"title":"EventLoopFuture","kind":"symbol","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"}}}