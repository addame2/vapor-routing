{"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" when necessary."},{"type":"text","text":" "},{"type":"text","text":"The library which accepts this provider takes ownership of the created event loop group,"},{"type":"text","text":" "},{"type":"text","text":"and must ensure its proper shutdown when the library is being shut down."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/nioeventloopgroupprovider\/createnew"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew"},"metadata":{"title":"NIOEventLoopGroupProvider.createNew","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore25NIOEventLoopGroupProviderO9createNewyA2CmF","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createNew","kind":"identifier"}],"role":"symbol","roleHeading":"Case"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"createNew"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider":{"type":"topic","abstract":[{"type":"text","text":"This type is intended to be used by libraries which use NIO, and offer their users either the option"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":".share"},{"type":"text","text":" an existing event loop group or create (and manage) a new one ("},{"code":".createNew","type":"codeVoice"},{"text":") and let it be","type":"text"},{"text":" ","type":"text"},{"text":"managed by given library and its lifecycle.","type":"text"}],"title":"NIOEventLoopGroupProvider","url":"\/documentation\/niocore\/nioeventloopgroupprovider","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider","navigatorTitle":[{"text":"NIOEventLoopGroupProvider","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOEventLoopGroupProvider","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider/createNew":{"type":"topic","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" when necessary."},{"type":"text","text":" "},{"type":"text","text":"The library which accepts this provider takes ownership of the created event loop group,"},{"text":" ","type":"text"},{"text":"and must ensure its proper shutdown when the library is being shut down.","type":"text"}],"title":"NIOEventLoopGroupProvider.createNew","url":"\/documentation\/niocore\/nioeventloopgroupprovider\/createnew","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createNew","kind":"identifier"}]}}}