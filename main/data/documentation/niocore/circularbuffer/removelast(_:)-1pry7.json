{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast(_:)-1pry7","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Removes the specified number of elements from the end of the"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to remove from the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"k"},{"type":"text","text":" must be greater than or equal to zero and must not exceed the"},{"type":"text","text":" "},{"type":"text","text":"number of elements in the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to remove more elements than exist in the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" "},{"type":"text","text":"triggers a runtime error."}]},{"type":"paragraph","inlineContent":[{"text":"Calling this method may invalidate all saved indices of this","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":". Do not rely on a previously stored index value after","type":"text"},{"text":" ","type":"text"},{"text":"altering a ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":" with any operation that can change its length.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" is the specified number of elements."}]}],"name":"Complexity","type":"aside","style":"note"}]}],"kind":"symbol","metadata":{"externalID":"s:7NIOCore14CircularBufferV10removeLastyySiF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","title":"removeLast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/removelast(_:)-1pry7"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/removeLast(_:)-1pry7":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast(_:)-1pry7","role":"symbol","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/removelast(_:)-1pry7","abstract":[{"text":"Removes the specified number of elements from the end of the","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":".","type":"text"}],"title":"removeLast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"kind":"symbol","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/circularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","type":"topic","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"title":"CircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"}}}