{"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"NIOCore"}],"extendedModule":"Swift","roleHeading":"Instance Method","externalID":"s:SmsE11removeFirst7ElementQzyF::SYNTHESIZED::s:7NIOCore14CircularBufferV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"title":"removeFirst()"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeFirst()-38zcl","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/removefirst()-38zcl"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RangeReplaceableCollection.removeFirst()","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations"]]},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"kind":"symbol","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/circularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","type":"topic","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"title":"CircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/removeFirst()-38zcl":{"title":"removeFirst()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeFirst()-38zcl","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/removefirst()-38zcl","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/RangeReplaceableCollection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/niocore\/circularbuffer\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations"}}}