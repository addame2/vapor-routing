{"metadata":{"navigatorTitle":[{"text":"Element","kind":"identifier"}],"title":"CircularBuffer.Element","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"typealias","extendedModule":"NIOCore","roleHeading":"Type Alias","externalID":"s:7NIOCore14CircularBufferV7Elementa"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/circularbuffer\/element"]}],"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Sequence.Element","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Element"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Element","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"kind":"symbol","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/circularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","type":"topic","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"title":"CircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/Element":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"title":"CircularBuffer.Element","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Element","url":"\/documentation\/niocore\/circularbuffer\/element","role":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"text":"Element","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/Sequence-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/niocore\/circularbuffer\/sequence-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/Sequence-Implementations","type":"topic","abstract":[],"title":"Sequence Implementations"}}}