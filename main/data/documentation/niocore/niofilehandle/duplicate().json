{"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"duplicate()","role":"symbol","externalID":"s:7NIOCore13NIOFileHandleC9duplicateACyKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"duplicate"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"}],"modules":[{"name":"NIOCore"}],"symbolKind":"method","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Duplicates this "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":". This means that a new "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" and is responsible for closing it."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NIOFileHandle","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" with a fresh underlying file descriptor but shared seek pointer."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" is not fully independent, the seek pointer is shared as documented by "},{"type":"codeVoice","code":"dup(2)"},{"type":"text","text":"."}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/niofilehandle\/duplicate()"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is a handle to an open file.","type":"text"}],"kind":"symbol","title":"NIOFileHandle","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle","kind":"typeIdentifier"}],"type":"topic","title":"duplicate()","abstract":[{"type":"text","text":"Duplicates this "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":". This means that a new "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" and is responsible for closing it."}],"url":"\/documentation\/niocore\/niofilehandle\/duplicate()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","role":"symbol"}}}