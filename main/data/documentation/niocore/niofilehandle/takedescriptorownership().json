{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Take the ownership of the underlying file descriptor. This is similar to ","type":"text"},{"code":"close()","type":"codeVoice"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()"},"variants":[{"paths":["\/documentation\/niocore\/niofilehandle\/takedescriptorownership()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The underlying file descriptor, now owned by the caller."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After calling this, the "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" cannot be used for anything else and all the operations will throw."}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"}],"title":"takeDescriptorOwnership()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore13NIOFileHandleC23takeDescriptorOwnerships5Int32VyKF"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"]]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"title":"takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","abstract":[{"text":"Take the ownership of the underlying file descriptor. This is similar to ","type":"text"},{"type":"codeVoice","code":"close()"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4CInta","kind":"typeIdentifier","text":"CInt"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is a handle to an open file.","type":"text"}],"kind":"symbol","title":"NIOFileHandle","role":"symbol","url":"\/documentation\/niocore\/niofilehandle","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]}}}