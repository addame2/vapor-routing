{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channel"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"],"kind":"relationships","type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"],"kind":"relationships","type":"inheritedBy"},{"title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"],"kind":"relationships","type":"conformingTypes"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"preciseIdentifier":"s:7NIOCore22ChannelOutboundInvokerP","text":"ChannelOutboundInvoker","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations on "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" are thread-safe."}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"text":"In SwiftNIO, all I\/O operations are asynchronous and hence all operations on ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" are asynchronous too. This means","type":"text"},{"text":" ","type":"text"},{"text":"that all I\/O operations will return immediately, usually before the work has been completed. The ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"passed to or returned by the operations are used to retrieve the result of an operation after it has completed.","type":"text"}]},{"inlineContent":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" owns its ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which handles all I\/O events and requests associated with the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:7NIOCore7ChannelP","title":"Channel","modules":[{"name":"NIOCore"}],"symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"navigatorTitle":[{"text":"Channel","kind":"identifier"}],"roleHeading":"Protocol"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/localAddress":{"title":"localAddress","required":true,"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channel\/localaddress","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"The local ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)":{"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)?, ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:_:)","abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/syncOptions-17fda":{"abstract":[{"type":"text","text":"Returns a view of the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" exposing synchronous versions of "},{"type":"codeVoice","code":"setOption"},{"type":"text","text":" and "},{"type":"codeVoice","code":"getOption"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The default implementation returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations must opt in to"},{"type":"text","text":" "},{"type":"text","text":"support this behavior."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP"},{"text":"?","kind":"text"}],"required":true,"type":"topic","url":"\/documentation\/niocore\/channel\/syncoptions-17fda","role":"symbol","defaultImplementations":1,"title":"syncOptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)":{"title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreaminitializer:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","text":"HTTP2Setting","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"targetWindowSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"inboundStreamInitializer","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)?) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"HTTP2StreamMultiplexer","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak HTTP\/2.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/getOption(_:)-5gug6":{"title":"getOption(_:)","required":true,"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channel\/getoption(_:)-5gug6","defaultImplementations":1,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Get the value of ","type":"text"},{"code":"option","type":"codeVoice"},{"text":" for this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isActive":{"title":"isActive","required":true,"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channel\/isactive","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isActive","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns if this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is currently active. Active is defined as the period of time after the","type":"text"},{"text":" ","type":"text"},{"code":"channelActive","type":"codeVoice"},{"text":" and before ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" has fired. The main use for this is to know if ","type":"text"},{"code":"channelActive","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" can be expected next when ","type":"text"},{"code":"handlerAdded","type":"codeVoice"},{"text":" was received.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isWritable":{"title":"isWritable","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently writable."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isWritable","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel\/iswritable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","kind":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-6zx58":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","kind":"symbol","title":"writeAndFlush(_:)","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-6zx58","abstract":[{"text":"Write and flush data into the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", automatically wrapping with ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/parent":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","kind":"symbol","title":"parent","url":"\/documentation\/niocore\/channel\/parent","abstract":[{"type":"codeVoice","code":"Channel"},{"text":"s are hierarchical and might have a parent ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" hierarchies are in use for certain","type":"text"},{"text":" ","type":"text"},{"text":"protocols such as HTTP\/2.","type":"text"}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","title":"Channel","abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MulticastChannel"}],"navigatorTitle":[{"kind":"identifier","text":"MulticastChannel"}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/multicastchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","abstract":[{"text":"A ","type":"text"},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"type":"text","text":"groups."}],"title":"MulticastChannel"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"text":"and check the outbound events manually.","type":"text"}],"title":"EmbeddedChannel","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"EmbeddedChannel","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/allocator":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","kind":"symbol","title":"allocator","url":"\/documentation\/niocore\/channel\/allocator","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocator. This is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"the only"}]},{"text":" supported way of allocating ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":"s to be used with this ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/remoteAddress":{"role":"symbol","url":"\/documentation\/niocore\/channel\/remoteaddress","required":true,"title":"remoteAddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","abstract":[{"type":"text","text":"The remote peer’s "},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remoteAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-9jslm":{"abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channel\/writeandflush(_:)-9jslm","title":"writeAndFlush(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/setOption(_:value:)-2fzo9":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","kind":"symbol","title":"setOption(_:value:)","url":"\/documentation\/niocore\/channel\/setoption(_:value:)-2fzo9","abstract":[{"text":"Set ","type":"text"},{"type":"codeVoice","code":"option"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" on this ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"defaultImplementations":1,"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","title":"ChannelOutboundInvoker","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"code":"ChannelCore","type":"codeVoice"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)":{"type":"topic","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","role":"symbol","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak HTTP\/2."}],"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:inboundstreamstateinitializer:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"text":".","kind":"text"},{"text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTP2Setting","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inboundStreamStateInitializer","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"HTTP2StreamID","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)?) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"HTTP2StreamMultiplexer","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreamstateinitializer:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","text":"ParserMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","text":"HTTP2Setting"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)?) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","text":"HTTP2StreamMultiplexer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"type":"topic","abstract":[{"text":"Configures a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" to speak HTTP\/2.","type":"text"}],"role":"symbol","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/pipeline":{"title":"pipeline","url":"\/documentation\/niocore\/channel\/pipeline","required":true,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","type":"topic","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" which handles all I\/O events and requests associated with this ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipeline"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/registerAlreadyConfigured0(promise:)":{"title":"registerAlreadyConfigured0(promise:)","url":"\/documentation\/niocore\/channel\/registeralreadyconfigured0(promise:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAlreadyConfigured0"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","kind":"symbol","url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ChannelConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">, ","kind":"text"},{"text":"http1ChannelConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"role":"symbol","type":"topic","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/nioSSL_tlsVersion()":{"title":"nioSSL_tlsVersion()","url":"\/documentation\/niocore\/channel\/niossl_tlsversion()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","type":"topic","abstract":[{"text":"API to extract the ","type":"text"},{"type":"codeVoice","code":"TLSVersion"},{"text":" from an EventLoopFuture.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nioSSL_tlsVersion"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TLSVersion","preciseIdentifier":"s:6NIOSSL10TLSVersionO"},{"kind":"text","text":"?>"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/closeFuture":{"title":"closeFuture","url":"\/documentation\/niocore\/channel\/closefuture","required":true,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","type":"topic","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"closeFuture"},{"text":" will fire when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" has been closed.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeFuture"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/write(_:)":{"title":"write(_:)","url":"\/documentation\/niocore\/channel\/write(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","type":"topic","abstract":[{"text":"Write data into the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", automatically wrapping with ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}]}}}