{"metadata":{"role":"symbol","symbolKind":"method","title":"slice()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"slice","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore10ByteBufferV5sliceACyF","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/slice()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"slice","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" sharing storage containing the readable bytes only.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","content":[{"inlineContent":[{"text":"Because ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" implements copy-on-write a copy of the storage will be automatically triggered when either of the ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":"s sharing storage is written to.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/slice()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"type":"text","text":"Slice the readable bytes off this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" without modifying the reader index. This method will return a"},{"type":"text","text":" "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" sharing the underlying storage with the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" the method was invoked on. The returned"},{"type":"text","text":" "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will contain the bytes in the range "},{"type":"codeVoice","code":"readerIndex..<writerIndex"},{"type":"text","text":" of the original "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/slice()":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/slice()","kind":"symbol","url":"\/documentation\/niocore\/bytebuffer\/slice()","type":"topic","abstract":[{"text":"Slice the readable bytes off this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" without modifying the reader index. This method will return a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" sharing the underlying storage with the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" the method was invoked on. The returned","type":"text"},{"text":" ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" will contain the bytes in the range ","type":"text"},{"code":"readerIndex..<writerIndex","type":"codeVoice"},{"type":"text","text":" of the original "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"slice"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"title":"slice()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"}}}