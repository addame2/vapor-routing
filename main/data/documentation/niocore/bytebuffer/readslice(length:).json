{"metadata":{"title":"readSlice(length:)","symbolKind":"method","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readSlice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:7NIOCore10ByteBufferV9readSlice6lengthACSgSi_tF","roleHeading":"Instance Method","extendedModule":"NIOCore","role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Slice "},{"type":"codeVoice","code":"length"},{"type":"text","text":" bytes off this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" and move the reader index forward by "},{"type":"codeVoice","code":"length"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If enough bytes are readable the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" returned by this method will share the underlying storage with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" the method was invoked on."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will contain the bytes in the range "},{"type":"codeVoice","code":"readerIndex..<(readerIndex + length)"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"original "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"readerIndex"},{"type":"text","text":" of the returned "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will be "},{"type":"codeVoice","code":"0"},{"type":"text","text":", the "},{"type":"codeVoice","code":"writerIndex"},{"type":"text","text":" will be "},{"type":"codeVoice","code":"length"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/readslice(length:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/readSlice(length:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readSlice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" sharing storage containing ","type":"text"},{"type":"codeVoice","code":"length"},{"text":" bytes or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the not enough bytes were readable.","type":"text"}]}],"kind":"content"},{"parameters":[{"name":"length","content":[{"inlineContent":[{"text":"The number of bytes to slice off.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Because ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" implements copy-on-write a copy of the storage will be automatically triggered when either of the ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":"s sharing storage is written to.","type":"text"}]}],"style":"note","type":"aside"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/readSlice(length:)":{"role":"symbol","type":"topic","title":"readSlice(length:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/readSlice(length:)","abstract":[{"text":"Slice ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" bytes off this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" and move the reader index forward by "},{"type":"codeVoice","code":"length"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If enough bytes are readable the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" returned by this method will share the underlying storage with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" the method was invoked on."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will contain the bytes in the range "},{"type":"codeVoice","code":"readerIndex..<(readerIndex + length)"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"original "},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"code":"readerIndex","type":"codeVoice"},{"text":" of the returned ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"0","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"length","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/bytebuffer\/readslice(length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readSlice"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"}}}