{"abstract":[{"type":"text","text":"Return an empty "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" allocated with "},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Calling this constructor will not allocate because it will return a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" that wraps a shared storage","type":"text"},{"text":" ","type":"text"},{"text":"object. As soon as you write to the constructed buffer however, you will incur an allocation because a","type":"text"},{"text":" ","type":"text"},{"text":"copy-on-write will happen.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":", "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":", or "},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":" it is"},{"type":"text","text":" "},{"type":"text","text":"recommended using "},{"code":"channel.allocator.buffer(capacity: 0)","type":"codeVoice"},{"type":"text","text":". This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" in the future."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"title":"init()","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"externalID":"s:7NIOCore10ByteBufferVACycfc","symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","abstract":[],"url":"\/documentation\/niocore","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/niocore\/bytebuffer\/init()","title":"init()","abstract":[{"text":"Return an empty ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocated with ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","type":"topic","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","url":"\/documentation\/niocore\/bytebuffer","kind":"symbol"}}}